ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_USB.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_USB_Init,"ax",%progbits
  20              		.align	2
  21              		.global	UART_USB_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_USB_Init, %function
  25              	UART_USB_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_USB.c"
   1:Generated_Source\PSoC5/UART_USB.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_USB.c **** * File Name: UART_USB.c
   3:Generated_Source\PSoC5/UART_USB.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_USB.c **** *
   5:Generated_Source\PSoC5/UART_USB.c **** * Description:
   6:Generated_Source\PSoC5/UART_USB.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_USB.c **** *
   8:Generated_Source\PSoC5/UART_USB.c **** * Note:
   9:Generated_Source\PSoC5/UART_USB.c **** *
  10:Generated_Source\PSoC5/UART_USB.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_USB.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_USB.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_USB.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_USB.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_USB.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_USB.c **** 
  17:Generated_Source\PSoC5/UART_USB.c **** #include "UART_USB.h"
  18:Generated_Source\PSoC5/UART_USB.c **** #if (UART_USB_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_USB.c ****     #include "UART_USB_IntClock.h"
  20:Generated_Source\PSoC5/UART_USB.c **** #endif /* End UART_USB_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_USB.c **** 
  22:Generated_Source\PSoC5/UART_USB.c **** 
  23:Generated_Source\PSoC5/UART_USB.c **** /***************************************
  24:Generated_Source\PSoC5/UART_USB.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_USB.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_USB.c **** 
  27:Generated_Source\PSoC5/UART_USB.c **** uint8 UART_USB_initVar = 0u;
  28:Generated_Source\PSoC5/UART_USB.c **** 
  29:Generated_Source\PSoC5/UART_USB.c **** #if (UART_USB_TX_INTERRUPT_ENABLED && UART_USB_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_USB.c ****     volatile uint8 UART_USB_txBuffer[UART_USB_TX_BUFFER_SIZE];
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 2


  31:Generated_Source\PSoC5/UART_USB.c ****     volatile uint8 UART_USB_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_USB.c ****     uint8 UART_USB_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_USB.c **** #endif /* (UART_USB_TX_INTERRUPT_ENABLED && UART_USB_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_USB.c **** 
  35:Generated_Source\PSoC5/UART_USB.c **** #if (UART_USB_RX_INTERRUPT_ENABLED && (UART_USB_RX_ENABLED || UART_USB_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_USB.c ****     uint8 UART_USB_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_USB.c ****     volatile uint8 UART_USB_rxBuffer[UART_USB_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_USB.c ****     volatile uint8 UART_USB_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_USB.c ****     volatile uint8 UART_USB_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_USB.c ****     volatile uint8 UART_USB_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_USB.c ****     volatile uint8 UART_USB_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_USB.c ****         volatile uint8 UART_USB_rxAddressMode = UART_USB_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_USB.c ****         volatile uint8 UART_USB_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_USB.c **** #endif /* (UART_USB_RX_INTERRUPT_ENABLED && (UART_USB_RX_ENABLED || UART_USB_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_USB.c **** 
  48:Generated_Source\PSoC5/UART_USB.c **** 
  49:Generated_Source\PSoC5/UART_USB.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_USB.c **** * Function Name: UART_USB_Start
  51:Generated_Source\PSoC5/UART_USB.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_USB.c **** *
  53:Generated_Source\PSoC5/UART_USB.c **** * Summary:
  54:Generated_Source\PSoC5/UART_USB.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_USB.c **** *  UART_USB_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_USB.c **** *  UART_USB_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_USB.c **** *  UART_USB_Enable() function.
  58:Generated_Source\PSoC5/UART_USB.c **** *
  59:Generated_Source\PSoC5/UART_USB.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_USB.c **** *  None.
  61:Generated_Source\PSoC5/UART_USB.c **** *
  62:Generated_Source\PSoC5/UART_USB.c **** * Return:
  63:Generated_Source\PSoC5/UART_USB.c **** *  None.
  64:Generated_Source\PSoC5/UART_USB.c **** *
  65:Generated_Source\PSoC5/UART_USB.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_USB.c **** *  The UART_USB_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_USB.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_USB.c **** *  and set to one (1u) the first time UART_USB_Start() is called. This
  69:Generated_Source\PSoC5/UART_USB.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_USB.c **** *  subsequent calls to the UART_USB_Start() routine.
  71:Generated_Source\PSoC5/UART_USB.c **** *
  72:Generated_Source\PSoC5/UART_USB.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_USB.c **** *  No.
  74:Generated_Source\PSoC5/UART_USB.c **** *
  75:Generated_Source\PSoC5/UART_USB.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_USB.c **** void UART_USB_Start(void) 
  77:Generated_Source\PSoC5/UART_USB.c **** {
  78:Generated_Source\PSoC5/UART_USB.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_USB.c ****     if(UART_USB_initVar == 0u)
  80:Generated_Source\PSoC5/UART_USB.c ****     {
  81:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_Init();
  82:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_initVar = 1u;
  83:Generated_Source\PSoC5/UART_USB.c ****     }
  84:Generated_Source\PSoC5/UART_USB.c **** 
  85:Generated_Source\PSoC5/UART_USB.c ****     UART_USB_Enable();
  86:Generated_Source\PSoC5/UART_USB.c **** }
  87:Generated_Source\PSoC5/UART_USB.c **** 
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 3


  88:Generated_Source\PSoC5/UART_USB.c **** 
  89:Generated_Source\PSoC5/UART_USB.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_USB.c **** * Function Name: UART_USB_Init
  91:Generated_Source\PSoC5/UART_USB.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_USB.c **** *
  93:Generated_Source\PSoC5/UART_USB.c **** * Summary:
  94:Generated_Source\PSoC5/UART_USB.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_USB.c **** *  dialog settings. It is not necessary to call UART_USB_Init() because
  96:Generated_Source\PSoC5/UART_USB.c **** *  the UART_USB_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_USB.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_USB.c **** *
  99:Generated_Source\PSoC5/UART_USB.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_USB.c **** *  None.
 101:Generated_Source\PSoC5/UART_USB.c **** *
 102:Generated_Source\PSoC5/UART_USB.c **** * Return:
 103:Generated_Source\PSoC5/UART_USB.c **** *  None.
 104:Generated_Source\PSoC5/UART_USB.c **** *
 105:Generated_Source\PSoC5/UART_USB.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_USB.c **** void UART_USB_Init(void) 
 107:Generated_Source\PSoC5/UART_USB.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 108:Generated_Source\PSoC5/UART_USB.c ****     #if(UART_USB_RX_ENABLED || UART_USB_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_USB.c **** 
 110:Generated_Source\PSoC5/UART_USB.c ****         #if (UART_USB_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_USB.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_USB.c ****             (void) CyIntSetVector(UART_USB_RX_VECT_NUM, &UART_USB_RXISR);
 113:Generated_Source\PSoC5/UART_USB.c ****             CyIntSetPriority(UART_USB_RX_VECT_NUM, UART_USB_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART_USB.c ****         #endif /* (UART_USB_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_USB.c **** 
 117:Generated_Source\PSoC5/UART_USB.c ****         #if (UART_USB_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_SetRxAddressMode(UART_USB_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_SetRxAddress1(UART_USB_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_SetRxAddress2(UART_USB_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_USB.c ****         #endif /* End UART_USB_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_USB.c **** 
 123:Generated_Source\PSoC5/UART_USB.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_RXBITCTR_PERIOD_REG = UART_USB_RXBITCTR_INIT;
  33              		.loc 1 124 0
  34 0000 7222     		movs	r2, #114
  35 0002 084B     		ldr	r3, .L2
  36 0004 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART_USB.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_RXSTATUS_MASK_REG  = UART_USB_INIT_RX_INTERRUPTS_MASK;
  37              		.loc 1 126 0
  38 0006 2022     		movs	r2, #32
  39 0008 FF33     		adds	r3, r3, #255
  40 000a 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/UART_USB.c ****     #endif /* End UART_USB_RX_ENABLED || UART_USB_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_USB.c **** 
 129:Generated_Source\PSoC5/UART_USB.c ****     #if(UART_USB_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_USB.c ****         #if (UART_USB_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_USB.c ****             /* Set TX interrupt vector and priority */
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 4


 132:Generated_Source\PSoC5/UART_USB.c ****             (void) CyIntSetVector(UART_USB_TX_VECT_NUM, &UART_USB_TXISR);
 133:Generated_Source\PSoC5/UART_USB.c ****             CyIntSetPriority(UART_USB_TX_VECT_NUM, UART_USB_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART_USB.c ****         #endif /* (UART_USB_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_USB.c **** 
 136:Generated_Source\PSoC5/UART_USB.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_USB.c ****         #if (UART_USB_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_TXBITCLKGEN_CTR_REG = UART_USB_BIT_CENTER;
  41              		.loc 1 138 0
  42 000c 0622     		movs	r2, #6
  43 000e A3F25F13 		subw	r3, r3, #351
  44 0012 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_TXBITCLKTX_COMPLETE_REG = ((UART_USB_NUMBER_OF_DATA_BITS +
  45              		.loc 1 139 0
  46 0014 4722     		movs	r2, #71
  47 0016 1033     		adds	r3, r3, #16
  48 0018 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART_USB.c ****                         UART_USB_NUMBER_OF_START_BIT) * UART_USB_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_USB.c ****         #else
 142:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_TXBITCTR_PERIOD_REG = ((UART_USB_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_USB.c ****                         UART_USB_NUMBER_OF_START_BIT) * UART_USB_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_USB.c ****         #endif /* End UART_USB_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_USB.c **** 
 146:Generated_Source\PSoC5/UART_USB.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_USB.c ****         #if (UART_USB_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_TXSTATUS_MASK_REG = UART_USB_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART_USB.c ****         #else
 150:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_TXSTATUS_MASK_REG = UART_USB_INIT_TX_INTERRUPTS_MASK;
  49              		.loc 1 150 0
  50 001a 0022     		movs	r2, #0
  51 001c 03F5A873 		add	r3, r3, #336
  52 0020 1A70     		strb	r2, [r3]
  53 0022 7047     		bx	lr
  54              	.L3:
  55              		.align	2
  56              	.L2:
  57 0024 87640040 		.word	1073767559
  58              		.cfi_endproc
  59              	.LFE1:
  60              		.size	UART_USB_Init, .-UART_USB_Init
  61              		.section	.text.UART_USB_Enable,"ax",%progbits
  62              		.align	2
  63              		.global	UART_USB_Enable
  64              		.thumb
  65              		.thumb_func
  66              		.type	UART_USB_Enable, %function
  67              	UART_USB_Enable:
  68              	.LFB2:
 151:Generated_Source\PSoC5/UART_USB.c ****         #endif /*End UART_USB_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_USB.c **** 
 153:Generated_Source\PSoC5/UART_USB.c ****     #endif /* End UART_USB_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_USB.c **** 
 155:Generated_Source\PSoC5/UART_USB.c ****     #if(UART_USB_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_USB.c ****             (UART_USB_ReadControlRegister() & (uint8)~UART_USB_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_USB.c ****             (uint8)(UART_USB_PARITY_TYPE << UART_USB_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_USB.c ****     #endif /* End UART_USB_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_USB.c **** }
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 5


 161:Generated_Source\PSoC5/UART_USB.c **** 
 162:Generated_Source\PSoC5/UART_USB.c **** 
 163:Generated_Source\PSoC5/UART_USB.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_USB.c **** * Function Name: UART_USB_Enable
 165:Generated_Source\PSoC5/UART_USB.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_USB.c **** *
 167:Generated_Source\PSoC5/UART_USB.c **** * Summary:
 168:Generated_Source\PSoC5/UART_USB.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_USB.c **** *  to call UART_USB_Enable() because the UART_USB_Start() API
 170:Generated_Source\PSoC5/UART_USB.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_USB.c **** *  operation.
 172:Generated_Source\PSoC5/UART_USB.c **** 
 173:Generated_Source\PSoC5/UART_USB.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_USB.c **** *  None.
 175:Generated_Source\PSoC5/UART_USB.c **** *
 176:Generated_Source\PSoC5/UART_USB.c **** * Return:
 177:Generated_Source\PSoC5/UART_USB.c **** *  None.
 178:Generated_Source\PSoC5/UART_USB.c **** *
 179:Generated_Source\PSoC5/UART_USB.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_USB.c **** *  UART_USB_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_USB.c **** *
 182:Generated_Source\PSoC5/UART_USB.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_USB.c **** void UART_USB_Enable(void) 
 184:Generated_Source\PSoC5/UART_USB.c **** {
  69              		.loc 1 184 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73 0000 10B5     		push	{r4, lr}
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART_USB.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_USB.c ****     enableInterrupts = CyEnterCriticalSection();
  77              		.loc 1 186 0
  78 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  79              	.LVL0:
  80 0006 0446     		mov	r4, r0
  81              	.LVL1:
 187:Generated_Source\PSoC5/UART_USB.c **** 
 188:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_RX_ENABLED || UART_USB_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_USB.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_RXBITCTR_CONTROL_REG |= UART_USB_CNTR_ENABLE;
  82              		.loc 1 190 0
  83 0008 0A4A     		ldr	r2, .L6
  84 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  85 000c 43F02003 		orr	r3, r3, #32
  86 0010 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART_USB.c **** 
 192:Generated_Source\PSoC5/UART_USB.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_RXSTATUS_ACTL_REG  |= UART_USB_INT_ENABLE;
  87              		.loc 1 193 0
  88 0012 FF32     		adds	r2, r2, #255
  89 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  90 0016 43F01003 		orr	r3, r3, #16
  91 001a 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART_USB.c **** 
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 6


 195:Generated_Source\PSoC5/UART_USB.c ****         #if (UART_USB_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_EnableRxInt();
 197:Generated_Source\PSoC5/UART_USB.c **** 
 198:Generated_Source\PSoC5/UART_USB.c ****             #if (UART_USB_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_USB.c ****             #endif /* (UART_USB_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_USB.c ****         #endif /* (UART_USB_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_RX_ENABLED || UART_USB_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_USB.c **** 
 204:Generated_Source\PSoC5/UART_USB.c ****     #if(UART_USB_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_USB.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_USB.c ****         #if(!UART_USB_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_TXBITCTR_CONTROL_REG |= UART_USB_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_USB.c ****         #endif /* End UART_USB_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_USB.c **** 
 210:Generated_Source\PSoC5/UART_USB.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_TXSTATUS_ACTL_REG |= UART_USB_INT_ENABLE;
  92              		.loc 1 211 0
  93 001c 0132     		adds	r2, r2, #1
  94 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  95 0020 43F01003 		orr	r3, r3, #16
  96 0024 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_USB.c ****         #if (UART_USB_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_EnableTxInt();
 215:Generated_Source\PSoC5/UART_USB.c ****         #endif /* (UART_USB_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_USB.c ****      #endif /* (UART_USB_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_USB.c **** 
 218:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_IntClock_Start();  /* Enable the clock */
  97              		.loc 1 219 0
  98 0026 FFF7FEFF 		bl	UART_USB_IntClock_Start
  99              	.LVL2:
 220:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_USB.c **** 
 222:Generated_Source\PSoC5/UART_USB.c ****     CyExitCriticalSection(enableInterrupts);
 100              		.loc 1 222 0
 101 002a 2046     		mov	r0, r4
 102 002c FFF7FEFF 		bl	CyExitCriticalSection
 103              	.LVL3:
 104 0030 10BD     		pop	{r4, pc}
 105              	.LVL4:
 106              	.L7:
 107 0032 00BF     		.align	2
 108              	.L6:
 109 0034 97640040 		.word	1073767575
 110              		.cfi_endproc
 111              	.LFE2:
 112              		.size	UART_USB_Enable, .-UART_USB_Enable
 113              		.section	.text.UART_USB_Start,"ax",%progbits
 114              		.align	2
 115              		.global	UART_USB_Start
 116              		.thumb
 117              		.thumb_func
 118              		.type	UART_USB_Start, %function
 119              	UART_USB_Start:
 120              	.LFB0:
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 7


  77:Generated_Source\PSoC5/UART_USB.c ****     /* If not initialized then initialize all required hardware and software */
 121              		.loc 1 77 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125 0000 08B5     		push	{r3, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 3, -8
 128              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART_USB.c ****     {
 129              		.loc 1 79 0
 130 0002 054B     		ldr	r3, .L11
 131 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 132 0006 23B9     		cbnz	r3, .L9
  81:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_initVar = 1u;
 133              		.loc 1 81 0
 134 0008 FFF7FEFF 		bl	UART_USB_Init
 135              	.LVL5:
  82:Generated_Source\PSoC5/UART_USB.c ****     }
 136              		.loc 1 82 0
 137 000c 0122     		movs	r2, #1
 138 000e 024B     		ldr	r3, .L11
 139 0010 1A70     		strb	r2, [r3]
 140              	.L9:
  85:Generated_Source\PSoC5/UART_USB.c **** }
 141              		.loc 1 85 0
 142 0012 FFF7FEFF 		bl	UART_USB_Enable
 143              	.LVL6:
 144 0016 08BD     		pop	{r3, pc}
 145              	.L12:
 146              		.align	2
 147              	.L11:
 148 0018 00000000 		.word	.LANCHOR0
 149              		.cfi_endproc
 150              	.LFE0:
 151              		.size	UART_USB_Start, .-UART_USB_Start
 152              		.section	.text.UART_USB_Stop,"ax",%progbits
 153              		.align	2
 154              		.global	UART_USB_Stop
 155              		.thumb
 156              		.thumb_func
 157              		.type	UART_USB_Stop, %function
 158              	UART_USB_Stop:
 159              	.LFB3:
 223:Generated_Source\PSoC5/UART_USB.c **** }
 224:Generated_Source\PSoC5/UART_USB.c **** 
 225:Generated_Source\PSoC5/UART_USB.c **** 
 226:Generated_Source\PSoC5/UART_USB.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_USB.c **** * Function Name: UART_USB_Stop
 228:Generated_Source\PSoC5/UART_USB.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_USB.c **** *
 230:Generated_Source\PSoC5/UART_USB.c **** * Summary:
 231:Generated_Source\PSoC5/UART_USB.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_USB.c **** *
 233:Generated_Source\PSoC5/UART_USB.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_USB.c **** *  None.
 235:Generated_Source\PSoC5/UART_USB.c **** *
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 8


 236:Generated_Source\PSoC5/UART_USB.c **** * Return:
 237:Generated_Source\PSoC5/UART_USB.c **** *  None.
 238:Generated_Source\PSoC5/UART_USB.c **** *
 239:Generated_Source\PSoC5/UART_USB.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_USB.c **** void UART_USB_Stop(void) 
 241:Generated_Source\PSoC5/UART_USB.c **** {
 160              		.loc 1 241 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164 0000 10B5     		push	{r4, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 4, -8
 167              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART_USB.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_USB.c ****     enableInterrupts = CyEnterCriticalSection();
 168              		.loc 1 243 0
 169 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 170              	.LVL7:
 171 0006 0446     		mov	r4, r0
 172              	.LVL8:
 244:Generated_Source\PSoC5/UART_USB.c **** 
 245:Generated_Source\PSoC5/UART_USB.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_RX_ENABLED || UART_USB_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_RXBITCTR_CONTROL_REG &= (uint8) ~UART_USB_CNTR_ENABLE;
 173              		.loc 1 247 0
 174 0008 0A4A     		ldr	r2, .L15
 175 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 176 000c 03F0DF03 		and	r3, r3, #223
 177 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_RX_ENABLED || UART_USB_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_USB.c **** 
 250:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_USB.c ****         #if(!UART_USB_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_TXBITCTR_CONTROL_REG &= (uint8) ~UART_USB_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_USB.c ****         #endif /* (!UART_USB_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_USB.c **** 
 256:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_IntClock_Stop();   /* Disable the clock */
 178              		.loc 1 257 0
 179 0012 FFF7FEFF 		bl	UART_USB_IntClock_Stop
 180              	.LVL9:
 258:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_USB.c **** 
 260:Generated_Source\PSoC5/UART_USB.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_RX_ENABLED || UART_USB_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_RXSTATUS_ACTL_REG  &= (uint8) ~UART_USB_INT_ENABLE;
 181              		.loc 1 262 0
 182 0016 084A     		ldr	r2, .L15+4
 183 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 184 001a 03F0EF03 		and	r3, r3, #239
 185 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART_USB.c **** 
 264:Generated_Source\PSoC5/UART_USB.c ****         #if (UART_USB_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_DisableRxInt();
 266:Generated_Source\PSoC5/UART_USB.c ****         #endif /* (UART_USB_RX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 9


 267:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_RX_ENABLED || UART_USB_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_USB.c **** 
 269:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_TXSTATUS_ACTL_REG &= (uint8) ~UART_USB_INT_ENABLE;
 186              		.loc 1 270 0
 187 0020 0132     		adds	r2, r2, #1
 188 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 189 0024 03F0EF03 		and	r3, r3, #239
 190 0028 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART_USB.c **** 
 272:Generated_Source\PSoC5/UART_USB.c ****         #if (UART_USB_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_DisableTxInt();
 274:Generated_Source\PSoC5/UART_USB.c ****         #endif /* (UART_USB_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_USB.c **** 
 277:Generated_Source\PSoC5/UART_USB.c ****     CyExitCriticalSection(enableInterrupts);
 191              		.loc 1 277 0
 192 002a 2046     		mov	r0, r4
 193 002c FFF7FEFF 		bl	CyExitCriticalSection
 194              	.LVL10:
 195 0030 10BD     		pop	{r4, pc}
 196              	.LVL11:
 197              	.L16:
 198 0032 00BF     		.align	2
 199              	.L15:
 200 0034 97640040 		.word	1073767575
 201 0038 96650040 		.word	1073767830
 202              		.cfi_endproc
 203              	.LFE3:
 204              		.size	UART_USB_Stop, .-UART_USB_Stop
 205              		.section	.text.UART_USB_ReadControlRegister,"ax",%progbits
 206              		.align	2
 207              		.global	UART_USB_ReadControlRegister
 208              		.thumb
 209              		.thumb_func
 210              		.type	UART_USB_ReadControlRegister, %function
 211              	UART_USB_ReadControlRegister:
 212              	.LFB4:
 278:Generated_Source\PSoC5/UART_USB.c **** }
 279:Generated_Source\PSoC5/UART_USB.c **** 
 280:Generated_Source\PSoC5/UART_USB.c **** 
 281:Generated_Source\PSoC5/UART_USB.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_USB.c **** * Function Name: UART_USB_ReadControlRegister
 283:Generated_Source\PSoC5/UART_USB.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_USB.c **** *
 285:Generated_Source\PSoC5/UART_USB.c **** * Summary:
 286:Generated_Source\PSoC5/UART_USB.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_USB.c **** *
 288:Generated_Source\PSoC5/UART_USB.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_USB.c **** *  None.
 290:Generated_Source\PSoC5/UART_USB.c **** *
 291:Generated_Source\PSoC5/UART_USB.c **** * Return:
 292:Generated_Source\PSoC5/UART_USB.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_USB.c **** *
 294:Generated_Source\PSoC5/UART_USB.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_USB.c **** uint8 UART_USB_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_USB.c **** {
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 10


 213              		.loc 1 296 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_USB.c ****         return(0u);
 299:Generated_Source\PSoC5/UART_USB.c ****     #else
 300:Generated_Source\PSoC5/UART_USB.c ****         return(UART_USB_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_USB.c **** }
 218              		.loc 1 302 0
 219 0000 0020     		movs	r0, #0
 220 0002 7047     		bx	lr
 221              		.cfi_endproc
 222              	.LFE4:
 223              		.size	UART_USB_ReadControlRegister, .-UART_USB_ReadControlRegister
 224              		.section	.text.UART_USB_WriteControlRegister,"ax",%progbits
 225              		.align	2
 226              		.global	UART_USB_WriteControlRegister
 227              		.thumb
 228              		.thumb_func
 229              		.type	UART_USB_WriteControlRegister, %function
 230              	UART_USB_WriteControlRegister:
 231              	.LFB5:
 303:Generated_Source\PSoC5/UART_USB.c **** 
 304:Generated_Source\PSoC5/UART_USB.c **** 
 305:Generated_Source\PSoC5/UART_USB.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_USB.c **** * Function Name: UART_USB_WriteControlRegister
 307:Generated_Source\PSoC5/UART_USB.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_USB.c **** *
 309:Generated_Source\PSoC5/UART_USB.c **** * Summary:
 310:Generated_Source\PSoC5/UART_USB.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_USB.c **** *
 312:Generated_Source\PSoC5/UART_USB.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_USB.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_USB.c **** *
 315:Generated_Source\PSoC5/UART_USB.c **** * Return:
 316:Generated_Source\PSoC5/UART_USB.c **** *  None.
 317:Generated_Source\PSoC5/UART_USB.c **** *
 318:Generated_Source\PSoC5/UART_USB.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_USB.c **** void  UART_USB_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_USB.c **** {
 232              		.loc 1 320 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              	.LVL12:
 238 0000 7047     		bx	lr
 239              		.cfi_endproc
 240              	.LFE5:
 241              		.size	UART_USB_WriteControlRegister, .-UART_USB_WriteControlRegister
 242 0002 00BF     		.section	.text.UART_USB_SetRxInterruptMode,"ax",%progbits
 243              		.align	2
 244              		.global	UART_USB_SetRxInterruptMode
 245              		.thumb
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 11


 246              		.thumb_func
 247              		.type	UART_USB_SetRxInterruptMode, %function
 248              	UART_USB_SetRxInterruptMode:
 249              	.LFB6:
 321:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_USB.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_USB.c ****         {
 324:Generated_Source\PSoC5/UART_USB.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_USB.c ****         }
 326:Generated_Source\PSoC5/UART_USB.c ****     #else
 327:Generated_Source\PSoC5/UART_USB.c ****        UART_USB_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_USB.c **** }
 330:Generated_Source\PSoC5/UART_USB.c **** 
 331:Generated_Source\PSoC5/UART_USB.c **** 
 332:Generated_Source\PSoC5/UART_USB.c **** #if(UART_USB_RX_ENABLED || UART_USB_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_USB.c ****     *
 337:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_USB.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_USB.c ****     *
 340:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_USB.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_USB.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_USB.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_USB.c ****     *      UART_USB_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_USB.c ****     *      UART_USB_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_USB.c ****     *      UART_USB_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_USB.c ****     *      UART_USB_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_USB.c ****     *      UART_USB_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_USB.c ****     *      UART_USB_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_USB.c ****     *      UART_USB_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_USB.c ****     *
 352:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 353:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 354:Generated_Source\PSoC5/UART_USB.c ****     *
 355:Generated_Source\PSoC5/UART_USB.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_USB.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_USB.c ****     *
 358:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_USB.c ****     {
 250              		.loc 1 360 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255              	.LVL13:
 361:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_RXSTATUS_MASK_REG  = intSrc;
 256              		.loc 1 361 0
 257 0000 014B     		ldr	r3, .L20
 258 0002 1870     		strb	r0, [r3]
 259 0004 7047     		bx	lr
 260              	.L21:
 261 0006 00BF     		.align	2
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 12


 262              	.L20:
 263 0008 86650040 		.word	1073767814
 264              		.cfi_endproc
 265              	.LFE6:
 266              		.size	UART_USB_SetRxInterruptMode, .-UART_USB_SetRxInterruptMode
 267              		.section	.text.UART_USB_ReadRxData,"ax",%progbits
 268              		.align	2
 269              		.global	UART_USB_ReadRxData
 270              		.thumb
 271              		.thumb_func
 272              		.type	UART_USB_ReadRxData, %function
 273              	UART_USB_ReadRxData:
 274              	.LFB7:
 362:Generated_Source\PSoC5/UART_USB.c ****     }
 363:Generated_Source\PSoC5/UART_USB.c **** 
 364:Generated_Source\PSoC5/UART_USB.c **** 
 365:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_ReadRxData
 367:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_USB.c ****     *
 369:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_USB.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_USB.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_USB.c ****     *
 373:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 375:Generated_Source\PSoC5/UART_USB.c ****     *
 376:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 377:Generated_Source\PSoC5/UART_USB.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_USB.c ****     *
 379:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_USB.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_USB.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_USB.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_USB.c ****     *
 388:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_USB.c ****     *  No.
 390:Generated_Source\PSoC5/UART_USB.c ****     *
 391:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_USB.c ****     uint8 UART_USB_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_USB.c ****     {
 275              		.loc 1 393 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART_USB.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_USB.c **** 
 396:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_USB.c **** 
 398:Generated_Source\PSoC5/UART_USB.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_USB.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_USB.c **** 
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 13


 401:Generated_Source\PSoC5/UART_USB.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_DisableRxInt();
 403:Generated_Source\PSoC5/UART_USB.c **** 
 404:Generated_Source\PSoC5/UART_USB.c ****         locRxBufferRead  = UART_USB_rxBufferRead;
 405:Generated_Source\PSoC5/UART_USB.c ****         locRxBufferWrite = UART_USB_rxBufferWrite;
 406:Generated_Source\PSoC5/UART_USB.c **** 
 407:Generated_Source\PSoC5/UART_USB.c ****         if( (UART_USB_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART_USB.c ****         {
 409:Generated_Source\PSoC5/UART_USB.c ****             rxData = UART_USB_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART_USB.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART_USB.c **** 
 412:Generated_Source\PSoC5/UART_USB.c ****             if(locRxBufferRead >= UART_USB_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART_USB.c ****             {
 414:Generated_Source\PSoC5/UART_USB.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART_USB.c ****             }
 416:Generated_Source\PSoC5/UART_USB.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART_USB.c **** 
 419:Generated_Source\PSoC5/UART_USB.c ****             if(UART_USB_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART_USB.c ****             {
 421:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART_USB.c ****                 #if ((UART_USB_RX_INTERRUPT_ENABLED) && (UART_USB_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_USB.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_USB.c ****                     #if( UART_USB_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_USB.c ****                         if((UART_USB_CONTROL_REG & UART_USB_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_USB.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_USB.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_USB.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_USB.c ****                             */
 430:Generated_Source\PSoC5/UART_USB.c ****                             UART_USB_RXSTATUS_MASK_REG  |= UART_USB_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_USB.c ****                         }
 432:Generated_Source\PSoC5/UART_USB.c ****                     #else
 433:Generated_Source\PSoC5/UART_USB.c ****                         UART_USB_RXSTATUS_MASK_REG  |= UART_USB_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_USB.c ****                     #endif /* end UART_USB_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_USB.c ****                 #endif /* ((UART_USB_RX_INTERRUPT_ENABLED) && (UART_USB_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_USB.c ****             }
 437:Generated_Source\PSoC5/UART_USB.c ****         }
 438:Generated_Source\PSoC5/UART_USB.c ****         else
 439:Generated_Source\PSoC5/UART_USB.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_USB.c ****             rxData = UART_USB_RXDATA_REG;
 441:Generated_Source\PSoC5/UART_USB.c ****         }
 442:Generated_Source\PSoC5/UART_USB.c **** 
 443:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_EnableRxInt();
 444:Generated_Source\PSoC5/UART_USB.c **** 
 445:Generated_Source\PSoC5/UART_USB.c ****     #else
 446:Generated_Source\PSoC5/UART_USB.c **** 
 447:Generated_Source\PSoC5/UART_USB.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_USB.c ****         rxData = UART_USB_RXDATA_REG;
 280              		.loc 1 448 0
 281 0000 014B     		ldr	r3, .L23
 282 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 283              	.LVL14:
 449:Generated_Source\PSoC5/UART_USB.c **** 
 450:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_USB.c **** 
 452:Generated_Source\PSoC5/UART_USB.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART_USB.c ****     }
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 14


 284              		.loc 1 453 0
 285 0004 7047     		bx	lr
 286              	.L24:
 287 0006 00BF     		.align	2
 288              	.L23:
 289 0008 47650040 		.word	1073767751
 290              		.cfi_endproc
 291              	.LFE7:
 292              		.size	UART_USB_ReadRxData, .-UART_USB_ReadRxData
 293              		.section	.text.UART_USB_ReadRxStatus,"ax",%progbits
 294              		.align	2
 295              		.global	UART_USB_ReadRxStatus
 296              		.thumb
 297              		.thumb_func
 298              		.type	UART_USB_ReadRxStatus, %function
 299              	UART_USB_ReadRxStatus:
 300              	.LFB8:
 454:Generated_Source\PSoC5/UART_USB.c **** 
 455:Generated_Source\PSoC5/UART_USB.c **** 
 456:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_ReadRxStatus
 458:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_USB.c ****     *
 460:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_USB.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_USB.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_USB.c ****     *
 464:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 466:Generated_Source\PSoC5/UART_USB.c ****     *
 467:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 468:Generated_Source\PSoC5/UART_USB.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_USB.c ****     *
 470:Generated_Source\PSoC5/UART_USB.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART_USB.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_USB.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_USB.c ****     *
 476:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_USB.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_USB.c ****     *   UART_USB_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_USB.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_USB.c ****     *   UART_USB_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_USB.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_USB.c ****     *
 484:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_USB.c ****     uint8 UART_USB_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_USB.c ****     {
 301              		.loc 1 486 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART_USB.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_USB.c **** 
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 15


 489:Generated_Source\PSoC5/UART_USB.c ****         status = UART_USB_RXSTATUS_REG & UART_USB_RX_HW_MASK;
 306              		.loc 1 489 0
 307 0000 024B     		ldr	r3, .L26
 308 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 309              	.LVL15:
 490:Generated_Source\PSoC5/UART_USB.c **** 
 491:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_USB.c ****         if(UART_USB_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART_USB.c ****         {
 494:Generated_Source\PSoC5/UART_USB.c ****             status |= UART_USB_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART_USB.c ****         }
 497:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_USB.c **** 
 499:Generated_Source\PSoC5/UART_USB.c ****         return(status);
 500:Generated_Source\PSoC5/UART_USB.c ****     }
 310              		.loc 1 500 0
 311 0004 00F07F00 		and	r0, r0, #127
 312              	.LVL16:
 313 0008 7047     		bx	lr
 314              	.L27:
 315 000a 00BF     		.align	2
 316              	.L26:
 317 000c 66650040 		.word	1073767782
 318              		.cfi_endproc
 319              	.LFE8:
 320              		.size	UART_USB_ReadRxStatus, .-UART_USB_ReadRxStatus
 321              		.section	.text.UART_USB_GetChar,"ax",%progbits
 322              		.align	2
 323              		.global	UART_USB_GetChar
 324              		.thumb
 325              		.thumb_func
 326              		.type	UART_USB_GetChar, %function
 327              	UART_USB_GetChar:
 328              	.LFB9:
 501:Generated_Source\PSoC5/UART_USB.c **** 
 502:Generated_Source\PSoC5/UART_USB.c **** 
 503:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_GetChar
 505:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_USB.c ****     *
 507:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_USB.c ****     *  Returns the last received byte of data. UART_USB_GetChar() is
 509:Generated_Source\PSoC5/UART_USB.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_USB.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_USB.c ****     *
 512:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 514:Generated_Source\PSoC5/UART_USB.c ****     *
 515:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 516:Generated_Source\PSoC5/UART_USB.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_USB.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_USB.c ****     *
 519:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_USB.c ****     *     checked to identify new data.
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 16


 523:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_USB.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_USB.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_USB.c ****     *
 528:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_USB.c ****     *  No.
 530:Generated_Source\PSoC5/UART_USB.c ****     *
 531:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_USB.c ****     uint8 UART_USB_GetChar(void) 
 533:Generated_Source\PSoC5/UART_USB.c ****     {
 329              		.loc 1 533 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334              	.LVL17:
 534:Generated_Source\PSoC5/UART_USB.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART_USB.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_USB.c **** 
 537:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_USB.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_USB.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_USB.c **** 
 541:Generated_Source\PSoC5/UART_USB.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_DisableRxInt();
 543:Generated_Source\PSoC5/UART_USB.c **** 
 544:Generated_Source\PSoC5/UART_USB.c ****         locRxBufferRead  = UART_USB_rxBufferRead;
 545:Generated_Source\PSoC5/UART_USB.c ****         locRxBufferWrite = UART_USB_rxBufferWrite;
 546:Generated_Source\PSoC5/UART_USB.c **** 
 547:Generated_Source\PSoC5/UART_USB.c ****         if( (UART_USB_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART_USB.c ****         {
 549:Generated_Source\PSoC5/UART_USB.c ****             rxData = UART_USB_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART_USB.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART_USB.c ****             if(locRxBufferRead >= UART_USB_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART_USB.c ****             {
 553:Generated_Source\PSoC5/UART_USB.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART_USB.c ****             }
 555:Generated_Source\PSoC5/UART_USB.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART_USB.c **** 
 558:Generated_Source\PSoC5/UART_USB.c ****             if(UART_USB_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART_USB.c ****             {
 560:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART_USB.c ****                 #if( (UART_USB_RX_INTERRUPT_ENABLED) && (UART_USB_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_USB.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_USB.c ****                     #if( UART_USB_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_USB.c ****                         if((UART_USB_CONTROL_REG & UART_USB_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_USB.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_USB.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_USB.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_USB.c ****                             */
 569:Generated_Source\PSoC5/UART_USB.c ****                             UART_USB_RXSTATUS_MASK_REG |= UART_USB_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_USB.c ****                         }
 571:Generated_Source\PSoC5/UART_USB.c ****                     #else
 572:Generated_Source\PSoC5/UART_USB.c ****                         UART_USB_RXSTATUS_MASK_REG |= UART_USB_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_USB.c ****                     #endif /* end UART_USB_HD_ENABLED */
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 17


 574:Generated_Source\PSoC5/UART_USB.c ****                 #endif /* UART_USB_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_USB.c ****             }
 576:Generated_Source\PSoC5/UART_USB.c **** 
 577:Generated_Source\PSoC5/UART_USB.c ****         }
 578:Generated_Source\PSoC5/UART_USB.c ****         else
 579:Generated_Source\PSoC5/UART_USB.c ****         {   rxStatus = UART_USB_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART_USB.c ****             if((rxStatus & UART_USB_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART_USB.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_USB.c ****                 rxData = UART_USB_RXDATA_REG;
 583:Generated_Source\PSoC5/UART_USB.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_USB.c ****                 if((rxStatus & (UART_USB_RX_STS_BREAK | UART_USB_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_USB.c ****                                 UART_USB_RX_STS_STOP_ERROR | UART_USB_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_USB.c ****                 {
 587:Generated_Source\PSoC5/UART_USB.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART_USB.c ****                 }
 589:Generated_Source\PSoC5/UART_USB.c ****             }
 590:Generated_Source\PSoC5/UART_USB.c ****         }
 591:Generated_Source\PSoC5/UART_USB.c **** 
 592:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_EnableRxInt();
 593:Generated_Source\PSoC5/UART_USB.c **** 
 594:Generated_Source\PSoC5/UART_USB.c ****     #else
 595:Generated_Source\PSoC5/UART_USB.c **** 
 596:Generated_Source\PSoC5/UART_USB.c ****         rxStatus =UART_USB_RXSTATUS_REG;
 335              		.loc 1 596 0
 336 0000 084B     		ldr	r3, .L32
 337 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 0004 DBB2     		uxtb	r3, r3
 339              	.LVL18:
 597:Generated_Source\PSoC5/UART_USB.c ****         if((rxStatus & UART_USB_RX_STS_FIFO_NOTEMPTY) != 0u)
 340              		.loc 1 597 0
 341 0006 13F0200F 		tst	r3, #32
 342 000a 06D0     		beq	.L30
 598:Generated_Source\PSoC5/UART_USB.c ****         {
 599:Generated_Source\PSoC5/UART_USB.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_USB.c ****             rxData = UART_USB_RXDATA_REG;
 343              		.loc 1 600 0
 344 000c 064A     		ldr	r2, .L32+4
 345 000e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 346 0010 C0B2     		uxtb	r0, r0
 347              	.LVL19:
 601:Generated_Source\PSoC5/UART_USB.c **** 
 602:Generated_Source\PSoC5/UART_USB.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_USB.c ****             if((rxStatus & (UART_USB_RX_STS_BREAK | UART_USB_RX_STS_PAR_ERROR |
 348              		.loc 1 603 0
 349 0012 13F01E0F 		tst	r3, #30
 350 0016 02D1     		bne	.L31
 351 0018 7047     		bx	lr
 352              	.LVL20:
 353              	.L30:
 534:Generated_Source\PSoC5/UART_USB.c ****         uint8 rxStatus;
 354              		.loc 1 534 0
 355 001a 0020     		movs	r0, #0
 356 001c 7047     		bx	lr
 357              	.LVL21:
 358              	.L31:
 604:Generated_Source\PSoC5/UART_USB.c ****                             UART_USB_RX_STS_STOP_ERROR | UART_USB_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART_USB.c ****             {
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 18


 606:Generated_Source\PSoC5/UART_USB.c ****                 rxData = 0u;
 359              		.loc 1 606 0
 360 001e 0020     		movs	r0, #0
 361              	.LVL22:
 607:Generated_Source\PSoC5/UART_USB.c ****             }
 608:Generated_Source\PSoC5/UART_USB.c ****         }
 609:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_USB.c **** 
 611:Generated_Source\PSoC5/UART_USB.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART_USB.c ****     }
 362              		.loc 1 612 0
 363 0020 7047     		bx	lr
 364              	.L33:
 365 0022 00BF     		.align	2
 366              	.L32:
 367 0024 66650040 		.word	1073767782
 368 0028 47650040 		.word	1073767751
 369              		.cfi_endproc
 370              	.LFE9:
 371              		.size	UART_USB_GetChar, .-UART_USB_GetChar
 372              		.section	.text.UART_USB_GetByte,"ax",%progbits
 373              		.align	2
 374              		.global	UART_USB_GetByte
 375              		.thumb
 376              		.thumb_func
 377              		.type	UART_USB_GetByte, %function
 378              	UART_USB_GetByte:
 379              	.LFB10:
 613:Generated_Source\PSoC5/UART_USB.c **** 
 614:Generated_Source\PSoC5/UART_USB.c **** 
 615:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_GetByte
 617:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_USB.c ****     *
 619:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_USB.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_USB.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_USB.c ****     *
 623:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 625:Generated_Source\PSoC5/UART_USB.c ****     *
 626:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 627:Generated_Source\PSoC5/UART_USB.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_USB.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_USB.c ****     *
 630:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_USB.c ****     *  No.
 632:Generated_Source\PSoC5/UART_USB.c ****     *
 633:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_USB.c ****     uint16 UART_USB_GetByte(void) 
 635:Generated_Source\PSoC5/UART_USB.c ****     {
 380              		.loc 1 635 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 10B5     		push	{r4, lr}
 385              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 19


 386              		.cfi_offset 4, -8
 387              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/UART_USB.c ****         
 637:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_USB.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_USB.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_DisableRxInt();
 641:Generated_Source\PSoC5/UART_USB.c ****         locErrorStatus = (uint16)UART_USB_errorStatus;
 642:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_EnableRxInt();
 644:Generated_Source\PSoC5/UART_USB.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_USB_ReadRxData() );
 645:Generated_Source\PSoC5/UART_USB.c ****     #else
 646:Generated_Source\PSoC5/UART_USB.c ****         return ( ((uint16)UART_USB_ReadRxStatus() << 8u) | UART_USB_ReadRxData() );
 388              		.loc 1 646 0
 389 0002 FFF7FEFF 		bl	UART_USB_ReadRxStatus
 390              	.LVL23:
 391 0006 0402     		lsls	r4, r0, #8
 392 0008 FFF7FEFF 		bl	UART_USB_ReadRxData
 393              	.LVL24:
 394 000c 2043     		orrs	r0, r0, r4
 647:Generated_Source\PSoC5/UART_USB.c ****     #endif /* UART_USB_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_USB.c ****         
 649:Generated_Source\PSoC5/UART_USB.c ****     }
 395              		.loc 1 649 0
 396 000e 80B2     		uxth	r0, r0
 397 0010 10BD     		pop	{r4, pc}
 398              		.cfi_endproc
 399              	.LFE10:
 400              		.size	UART_USB_GetByte, .-UART_USB_GetByte
 401 0012 00BF     		.section	.text.UART_USB_GetRxBufferSize,"ax",%progbits
 402              		.align	2
 403              		.global	UART_USB_GetRxBufferSize
 404              		.thumb
 405              		.thumb_func
 406              		.type	UART_USB_GetRxBufferSize, %function
 407              	UART_USB_GetRxBufferSize:
 408              	.LFB11:
 650:Generated_Source\PSoC5/UART_USB.c **** 
 651:Generated_Source\PSoC5/UART_USB.c **** 
 652:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_USB.c ****     *
 656:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_USB.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_USB.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_USB.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_USB.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_USB.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_USB.c ****     *    account.
 663:Generated_Source\PSoC5/UART_USB.c ****     *
 664:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 666:Generated_Source\PSoC5/UART_USB.c ****     *
 667:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 668:Generated_Source\PSoC5/UART_USB.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_USB.c ****     *    Return value type depends on RX Buffer Size parameter.
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 20


 670:Generated_Source\PSoC5/UART_USB.c ****     *
 671:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_USB.c ****     *
 676:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_USB.c ****     *  No.
 678:Generated_Source\PSoC5/UART_USB.c ****     *
 679:Generated_Source\PSoC5/UART_USB.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_USB.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_USB.c ****     *
 682:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_USB.c ****     uint8 UART_USB_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_USB.c ****                                                             
 685:Generated_Source\PSoC5/UART_USB.c ****     {
 409              		.loc 1 685 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART_USB.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART_USB.c **** 
 688:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_USB.c **** 
 690:Generated_Source\PSoC5/UART_USB.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_DisableRxInt();
 692:Generated_Source\PSoC5/UART_USB.c **** 
 693:Generated_Source\PSoC5/UART_USB.c ****         if(UART_USB_rxBufferRead == UART_USB_rxBufferWrite)
 694:Generated_Source\PSoC5/UART_USB.c ****         {
 695:Generated_Source\PSoC5/UART_USB.c ****             if(UART_USB_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART_USB.c ****             {
 697:Generated_Source\PSoC5/UART_USB.c ****                 size = UART_USB_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART_USB.c ****             }
 699:Generated_Source\PSoC5/UART_USB.c ****             else
 700:Generated_Source\PSoC5/UART_USB.c ****             {
 701:Generated_Source\PSoC5/UART_USB.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_USB.c ****             }
 703:Generated_Source\PSoC5/UART_USB.c ****         }
 704:Generated_Source\PSoC5/UART_USB.c ****         else if(UART_USB_rxBufferRead < UART_USB_rxBufferWrite)
 705:Generated_Source\PSoC5/UART_USB.c ****         {
 706:Generated_Source\PSoC5/UART_USB.c ****             size = (UART_USB_rxBufferWrite - UART_USB_rxBufferRead);
 707:Generated_Source\PSoC5/UART_USB.c ****         }
 708:Generated_Source\PSoC5/UART_USB.c ****         else
 709:Generated_Source\PSoC5/UART_USB.c ****         {
 710:Generated_Source\PSoC5/UART_USB.c ****             size = (UART_USB_RX_BUFFER_SIZE - UART_USB_rxBufferRead) + UART_USB_rxBufferWrite;
 711:Generated_Source\PSoC5/UART_USB.c ****         }
 712:Generated_Source\PSoC5/UART_USB.c **** 
 713:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_EnableRxInt();
 714:Generated_Source\PSoC5/UART_USB.c **** 
 715:Generated_Source\PSoC5/UART_USB.c ****     #else
 716:Generated_Source\PSoC5/UART_USB.c **** 
 717:Generated_Source\PSoC5/UART_USB.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_USB.c ****         size = ((UART_USB_RXSTATUS_REG & UART_USB_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 414              		.loc 1 718 0
 415 0000 044B     		ldr	r3, .L39
 416 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 21


 417 0004 13F0200F 		tst	r3, #32
 418 0008 01D0     		beq	.L38
 419 000a 0120     		movs	r0, #1
 420 000c 7047     		bx	lr
 421              	.L38:
 422 000e 0020     		movs	r0, #0
 423              	.LVL25:
 719:Generated_Source\PSoC5/UART_USB.c **** 
 720:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_USB.c **** 
 722:Generated_Source\PSoC5/UART_USB.c ****         return(size);
 723:Generated_Source\PSoC5/UART_USB.c ****     }
 424              		.loc 1 723 0
 425 0010 7047     		bx	lr
 426              	.L40:
 427 0012 00BF     		.align	2
 428              	.L39:
 429 0014 66650040 		.word	1073767782
 430              		.cfi_endproc
 431              	.LFE11:
 432              		.size	UART_USB_GetRxBufferSize, .-UART_USB_GetRxBufferSize
 433              		.section	.text.UART_USB_ClearRxBuffer,"ax",%progbits
 434              		.align	2
 435              		.global	UART_USB_ClearRxBuffer
 436              		.thumb
 437              		.thumb_func
 438              		.type	UART_USB_ClearRxBuffer, %function
 439              	UART_USB_ClearRxBuffer:
 440              	.LFB12:
 724:Generated_Source\PSoC5/UART_USB.c **** 
 725:Generated_Source\PSoC5/UART_USB.c **** 
 726:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_USB.c ****     *
 730:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_USB.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_USB.c ****     *
 733:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 735:Generated_Source\PSoC5/UART_USB.c ****     *
 736:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 737:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 738:Generated_Source\PSoC5/UART_USB.c ****     *
 739:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_USB.c ****     *
 745:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_USB.c ****     *  No.
 747:Generated_Source\PSoC5/UART_USB.c ****     *
 748:Generated_Source\PSoC5/UART_USB.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_USB.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_USB.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_USB.c ****     *  have remained in the RAM.
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 22


 752:Generated_Source\PSoC5/UART_USB.c ****     *
 753:Generated_Source\PSoC5/UART_USB.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_USB.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_USB.c ****     *
 756:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_USB.c ****     {
 441              		.loc 1 758 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 08B5     		push	{r3, lr}
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 3, -8
 448              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART_USB.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_USB.c **** 
 761:Generated_Source\PSoC5/UART_USB.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_USB.c ****         enableInterrupts = CyEnterCriticalSection();
 449              		.loc 1 762 0
 450 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 451              	.LVL26:
 763:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_RXDATA_AUX_CTL_REG |= (uint8)  UART_USB_RX_FIFO_CLR;
 452              		.loc 1 763 0
 453 0006 064B     		ldr	r3, .L43
 454 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 455 000a 42F00102 		orr	r2, r2, #1
 456 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_RXDATA_AUX_CTL_REG &= (uint8) ~UART_USB_RX_FIFO_CLR;
 457              		.loc 1 764 0
 458 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 459 0012 02F0FE02 		and	r2, r2, #254
 460 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART_USB.c ****         CyExitCriticalSection(enableInterrupts);
 461              		.loc 1 765 0
 462 0018 FFF7FEFF 		bl	CyExitCriticalSection
 463              	.LVL27:
 464 001c 08BD     		pop	{r3, pc}
 465              	.L44:
 466 001e 00BF     		.align	2
 467              	.L43:
 468 0020 97650040 		.word	1073767831
 469              		.cfi_endproc
 470              	.LFE12:
 471              		.size	UART_USB_ClearRxBuffer, .-UART_USB_ClearRxBuffer
 472              		.section	.text.UART_USB_SetRxAddressMode,"ax",%progbits
 473              		.align	2
 474              		.global	UART_USB_SetRxAddressMode
 475              		.thumb
 476              		.thumb_func
 477              		.type	UART_USB_SetRxAddressMode, %function
 478              	UART_USB_SetRxAddressMode:
 479              	.LFB13:
 766:Generated_Source\PSoC5/UART_USB.c **** 
 767:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_USB.c **** 
 769:Generated_Source\PSoC5/UART_USB.c ****         /* Protect variables that could change on interrupt. */
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 23


 770:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_DisableRxInt();
 771:Generated_Source\PSoC5/UART_USB.c **** 
 772:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART_USB.c **** 
 777:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_EnableRxInt();
 778:Generated_Source\PSoC5/UART_USB.c **** 
 779:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_USB.c **** 
 781:Generated_Source\PSoC5/UART_USB.c ****     }
 782:Generated_Source\PSoC5/UART_USB.c **** 
 783:Generated_Source\PSoC5/UART_USB.c **** 
 784:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_USB.c ****     *
 788:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_USB.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_USB.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_USB.c ****     *
 792:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_USB.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_USB.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_USB.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_USB.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_USB.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_USB.c ****     *
 804:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 805:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 806:Generated_Source\PSoC5/UART_USB.c ****     *
 807:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_USB.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_USB.c ****     *
 812:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_USB.c ****                                                         
 815:Generated_Source\PSoC5/UART_USB.c ****     {
 480              		.loc 1 815 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485              	.LVL28:
 486 0000 7047     		bx	lr
 487              		.cfi_endproc
 488              	.LFE13:
 489              		.size	UART_USB_SetRxAddressMode, .-UART_USB_SetRxAddressMode
 490 0002 00BF     		.section	.text.UART_USB_SetRxAddress1,"ax",%progbits
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 24


 491              		.align	2
 492              		.global	UART_USB_SetRxAddress1
 493              		.thumb
 494              		.thumb_func
 495              		.type	UART_USB_SetRxAddress1, %function
 496              	UART_USB_SetRxAddress1:
 497              	.LFB14:
 816:Generated_Source\PSoC5/UART_USB.c ****         #if(UART_USB_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_USB.c ****             #if(UART_USB_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_USB.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_USB.c ****                 {
 820:Generated_Source\PSoC5/UART_USB.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_USB.c ****                 }
 822:Generated_Source\PSoC5/UART_USB.c ****             #else /* UART_USB_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_USB.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_USB.c ****                 tmpCtrl = UART_USB_CONTROL_REG & (uint8)~UART_USB_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_USB.c ****                 tmpCtrl |= (uint8)(addressMode << UART_USB_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_USB.c **** 
 828:Generated_Source\PSoC5/UART_USB.c ****                 #if(UART_USB_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_USB.c ****                    (UART_USB_RXBUFFERSIZE > UART_USB_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_USB.c ****                     UART_USB_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_USB.c ****                     UART_USB_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_USB.c ****                 #endif /* End UART_USB_RXBUFFERSIZE > UART_USB_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_USB.c ****             #endif /* End UART_USB_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_USB.c ****         #else /* UART_USB_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_USB.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_USB.c ****             {
 837:Generated_Source\PSoC5/UART_USB.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_USB.c ****             }
 839:Generated_Source\PSoC5/UART_USB.c ****         #endif /* End UART_USB_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_USB.c ****     }
 841:Generated_Source\PSoC5/UART_USB.c **** 
 842:Generated_Source\PSoC5/UART_USB.c **** 
 843:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_SetRxAddress1
 845:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_USB.c ****     *
 847:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_USB.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_USB.c ****     *
 850:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_USB.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_USB.c ****     *
 853:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 854:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 855:Generated_Source\PSoC5/UART_USB.c ****     *
 856:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_USB.c ****     {
 498              		.loc 1 858 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              	.LVL29:
 859:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_RXADDRESS1_REG = address;
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 25


 504              		.loc 1 859 0
 505 0000 014B     		ldr	r3, .L47
 506 0002 1870     		strb	r0, [r3]
 507 0004 7047     		bx	lr
 508              	.L48:
 509 0006 00BF     		.align	2
 510              	.L47:
 511 0008 27650040 		.word	1073767719
 512              		.cfi_endproc
 513              	.LFE14:
 514              		.size	UART_USB_SetRxAddress1, .-UART_USB_SetRxAddress1
 515              		.section	.text.UART_USB_SetRxAddress2,"ax",%progbits
 516              		.align	2
 517              		.global	UART_USB_SetRxAddress2
 518              		.thumb
 519              		.thumb_func
 520              		.type	UART_USB_SetRxAddress2, %function
 521              	UART_USB_SetRxAddress2:
 522              	.LFB15:
 860:Generated_Source\PSoC5/UART_USB.c ****     }
 861:Generated_Source\PSoC5/UART_USB.c **** 
 862:Generated_Source\PSoC5/UART_USB.c **** 
 863:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_SetRxAddress2
 865:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_USB.c ****     *
 867:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_USB.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_USB.c ****     *
 870:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_USB.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_USB.c ****     *
 873:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 874:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 875:Generated_Source\PSoC5/UART_USB.c ****     *
 876:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_USB.c ****     {
 523              		.loc 1 878 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528              	.LVL30:
 879:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_RXADDRESS2_REG = address;
 529              		.loc 1 879 0
 530 0000 014B     		ldr	r3, .L50
 531 0002 1870     		strb	r0, [r3]
 532 0004 7047     		bx	lr
 533              	.L51:
 534 0006 00BF     		.align	2
 535              	.L50:
 536 0008 37650040 		.word	1073767735
 537              		.cfi_endproc
 538              	.LFE15:
 539              		.size	UART_USB_SetRxAddress2, .-UART_USB_SetRxAddress2
 540              		.section	.text.UART_USB_SetTxInterruptMode,"ax",%progbits
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 26


 541              		.align	2
 542              		.global	UART_USB_SetTxInterruptMode
 543              		.thumb
 544              		.thumb_func
 545              		.type	UART_USB_SetTxInterruptMode, %function
 546              	UART_USB_SetTxInterruptMode:
 547              	.LFB16:
 880:Generated_Source\PSoC5/UART_USB.c ****     }
 881:Generated_Source\PSoC5/UART_USB.c **** 
 882:Generated_Source\PSoC5/UART_USB.c **** #endif  /* UART_USB_RX_ENABLED || UART_USB_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_USB.c **** 
 884:Generated_Source\PSoC5/UART_USB.c **** 
 885:Generated_Source\PSoC5/UART_USB.c **** #if( (UART_USB_TX_ENABLED) || (UART_USB_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_USB.c ****     *
 890:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_USB.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_USB.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_USB.c ****     *
 894:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_USB.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_USB.c ****     *   UART_USB_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_USB.c ****     *   UART_USB_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_USB.c ****     *   UART_USB_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_USB.c ****     *   UART_USB_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_USB.c ****     *
 901:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 902:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 903:Generated_Source\PSoC5/UART_USB.c ****     *
 904:Generated_Source\PSoC5/UART_USB.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_USB.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_USB.c ****     *
 907:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_USB.c ****     {
 548              		.loc 1 909 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553              	.LVL31:
 910:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_TXSTATUS_MASK_REG = intSrc;
 554              		.loc 1 910 0
 555 0000 014B     		ldr	r3, .L53
 556 0002 1870     		strb	r0, [r3]
 557 0004 7047     		bx	lr
 558              	.L54:
 559 0006 00BF     		.align	2
 560              	.L53:
 561 0008 87650040 		.word	1073767815
 562              		.cfi_endproc
 563              	.LFE16:
 564              		.size	UART_USB_SetTxInterruptMode, .-UART_USB_SetTxInterruptMode
 565              		.section	.text.UART_USB_WriteTxData,"ax",%progbits
 566              		.align	2
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 27


 567              		.global	UART_USB_WriteTxData
 568              		.thumb
 569              		.thumb_func
 570              		.type	UART_USB_WriteTxData, %function
 571              	UART_USB_WriteTxData:
 572              	.LFB17:
 911:Generated_Source\PSoC5/UART_USB.c ****     }
 912:Generated_Source\PSoC5/UART_USB.c **** 
 913:Generated_Source\PSoC5/UART_USB.c **** 
 914:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_WriteTxData
 916:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_USB.c ****     *
 918:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_USB.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_USB.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_USB.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_USB.c ****     *
 923:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_USB.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_USB.c ****     *
 926:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 927:Generated_Source\PSoC5/UART_USB.c ****     * None.
 928:Generated_Source\PSoC5/UART_USB.c ****     *
 929:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_USB.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_USB.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_USB.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_USB.c ****     *
 938:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_USB.c ****     *  No.
 940:Generated_Source\PSoC5/UART_USB.c ****     *
 941:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_USB.c ****     {
 573              		.loc 1 943 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578              	.LVL32:
 944:Generated_Source\PSoC5/UART_USB.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_USB.c ****         if(UART_USB_initVar != 0u)
 579              		.loc 1 945 0
 580 0000 024B     		ldr	r3, .L57
 581 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 582 0004 0BB1     		cbz	r3, .L55
 946:Generated_Source\PSoC5/UART_USB.c ****         {
 947:Generated_Source\PSoC5/UART_USB.c ****         #if (UART_USB_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_USB.c **** 
 949:Generated_Source\PSoC5/UART_USB.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_DisableTxInt();
 951:Generated_Source\PSoC5/UART_USB.c **** 
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 28


 952:Generated_Source\PSoC5/UART_USB.c ****             if( (UART_USB_txBufferRead == UART_USB_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART_USB.c ****                 ((UART_USB_TXSTATUS_REG & UART_USB_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART_USB.c ****             {
 955:Generated_Source\PSoC5/UART_USB.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART_USB.c ****             }
 958:Generated_Source\PSoC5/UART_USB.c ****             else
 959:Generated_Source\PSoC5/UART_USB.c ****             {
 960:Generated_Source\PSoC5/UART_USB.c ****                 if(UART_USB_txBufferWrite >= UART_USB_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART_USB.c ****                 {
 962:Generated_Source\PSoC5/UART_USB.c ****                     UART_USB_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART_USB.c ****                 }
 964:Generated_Source\PSoC5/UART_USB.c **** 
 965:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_txBuffer[UART_USB_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART_USB.c **** 
 967:Generated_Source\PSoC5/UART_USB.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_txBufferWrite++;
 969:Generated_Source\PSoC5/UART_USB.c ****             }
 970:Generated_Source\PSoC5/UART_USB.c **** 
 971:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_EnableTxInt();
 972:Generated_Source\PSoC5/UART_USB.c **** 
 973:Generated_Source\PSoC5/UART_USB.c ****         #else
 974:Generated_Source\PSoC5/UART_USB.c **** 
 975:Generated_Source\PSoC5/UART_USB.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_TXDATA_REG = txDataByte;
 583              		.loc 1 976 0
 584 0006 024B     		ldr	r3, .L57+4
 585 0008 1870     		strb	r0, [r3]
 586              	.L55:
 587 000a 7047     		bx	lr
 588              	.L58:
 589              		.align	2
 590              	.L57:
 591 000c 00000000 		.word	.LANCHOR0
 592 0010 44650040 		.word	1073767748
 593              		.cfi_endproc
 594              	.LFE17:
 595              		.size	UART_USB_WriteTxData, .-UART_USB_WriteTxData
 596              		.section	.text.UART_USB_ReadTxStatus,"ax",%progbits
 597              		.align	2
 598              		.global	UART_USB_ReadTxStatus
 599              		.thumb
 600              		.thumb_func
 601              		.type	UART_USB_ReadTxStatus, %function
 602              	UART_USB_ReadTxStatus:
 603              	.LFB18:
 977:Generated_Source\PSoC5/UART_USB.c **** 
 978:Generated_Source\PSoC5/UART_USB.c ****         #endif /*(UART_USB_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_USB.c ****         }
 980:Generated_Source\PSoC5/UART_USB.c ****     }
 981:Generated_Source\PSoC5/UART_USB.c **** 
 982:Generated_Source\PSoC5/UART_USB.c **** 
 983:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_ReadTxStatus
 985:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_USB.c ****     *
 987:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 29


 988:Generated_Source\PSoC5/UART_USB.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_USB.c ****     *
 990:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_USB.c ****     *  None.
 992:Generated_Source\PSoC5/UART_USB.c ****     *
 993:Generated_Source\PSoC5/UART_USB.c ****     * Return:
 994:Generated_Source\PSoC5/UART_USB.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_USB.c ****     *
 996:Generated_Source\PSoC5/UART_USB.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_USB.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_USB.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_USB.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_USB.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_USB.c ****     *
1002:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_USB.c ****     uint8 UART_USB_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_USB.c ****     {
 604              		.loc 1 1004 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART_USB.c ****         return(UART_USB_TXSTATUS_REG);
 609              		.loc 1 1005 0
 610 0000 014B     		ldr	r3, .L60
 611 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART_USB.c ****     }
 612              		.loc 1 1006 0
 613 0004 7047     		bx	lr
 614              	.L61:
 615 0006 00BF     		.align	2
 616              	.L60:
 617 0008 67650040 		.word	1073767783
 618              		.cfi_endproc
 619              	.LFE18:
 620              		.size	UART_USB_ReadTxStatus, .-UART_USB_ReadTxStatus
 621              		.section	.text.UART_USB_PutChar,"ax",%progbits
 622              		.align	2
 623              		.global	UART_USB_PutChar
 624              		.thumb
 625              		.thumb_func
 626              		.type	UART_USB_PutChar, %function
 627              	UART_USB_PutChar:
 628              	.LFB19:
1007:Generated_Source\PSoC5/UART_USB.c **** 
1008:Generated_Source\PSoC5/UART_USB.c **** 
1009:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_PutChar
1011:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_USB.c ****     *
1013:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_USB.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_USB.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_USB.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_USB.c ****     *
1018:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_USB.c ****     *  txDataByte: Byte containing the data to transmit
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 30


1020:Generated_Source\PSoC5/UART_USB.c ****     *
1021:Generated_Source\PSoC5/UART_USB.c ****     * Return:
1022:Generated_Source\PSoC5/UART_USB.c ****     *  None.
1023:Generated_Source\PSoC5/UART_USB.c ****     *
1024:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_USB.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_USB.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_USB.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_USB.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_USB.c ****     *
1034:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_USB.c ****     *  No.
1036:Generated_Source\PSoC5/UART_USB.c ****     *
1037:Generated_Source\PSoC5/UART_USB.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_USB.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_USB.c ****     *
1040:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_USB.c ****     {
 629              		.loc 1 1042 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              		@ link register save eliminated.
 634              	.LVL33:
 635              	.L63:
1043:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_USB.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_USB.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_USB.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_USB.c ****         */
1048:Generated_Source\PSoC5/UART_USB.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_USB.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_USB.c **** 
1051:Generated_Source\PSoC5/UART_USB.c ****         do
1052:Generated_Source\PSoC5/UART_USB.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_USB.c **** 
1054:Generated_Source\PSoC5/UART_USB.c ****         #if ((UART_USB_TX_BUFFER_SIZE > UART_USB_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_USB.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_DisableTxInt();
1057:Generated_Source\PSoC5/UART_USB.c ****         #endif /* (UART_USB_TX_BUFFER_SIZE > UART_USB_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_USB.c **** 
1059:Generated_Source\PSoC5/UART_USB.c ****             locTxBufferWrite = UART_USB_txBufferWrite;
1060:Generated_Source\PSoC5/UART_USB.c ****             locTxBufferRead  = UART_USB_txBufferRead;
1061:Generated_Source\PSoC5/UART_USB.c **** 
1062:Generated_Source\PSoC5/UART_USB.c ****         #if ((UART_USB_TX_BUFFER_SIZE > UART_USB_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_USB.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_EnableTxInt();
1065:Generated_Source\PSoC5/UART_USB.c ****         #endif /* (UART_USB_TX_BUFFER_SIZE > UART_USB_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_USB.c ****         }
1067:Generated_Source\PSoC5/UART_USB.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART_USB.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART_USB.c ****                                 (uint8)(UART_USB_TX_BUFFER_SIZE - 1u)) );
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 31


1070:Generated_Source\PSoC5/UART_USB.c **** 
1071:Generated_Source\PSoC5/UART_USB.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART_USB.c ****             ((UART_USB_TXSTATUS_REG & UART_USB_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART_USB.c ****         {
1074:Generated_Source\PSoC5/UART_USB.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART_USB.c ****         }
1077:Generated_Source\PSoC5/UART_USB.c ****         else
1078:Generated_Source\PSoC5/UART_USB.c ****         {
1079:Generated_Source\PSoC5/UART_USB.c ****             if(locTxBufferWrite >= UART_USB_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_USB.c ****             {
1081:Generated_Source\PSoC5/UART_USB.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_USB.c ****             }
1083:Generated_Source\PSoC5/UART_USB.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART_USB.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_USB.c **** 
1087:Generated_Source\PSoC5/UART_USB.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_USB.c ****         #if ((UART_USB_TX_BUFFER_SIZE > UART_USB_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_DisableTxInt();
1090:Generated_Source\PSoC5/UART_USB.c ****         #endif /* (UART_USB_TX_BUFFER_SIZE > UART_USB_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_USB.c **** 
1092:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_USB.c **** 
1094:Generated_Source\PSoC5/UART_USB.c ****         #if ((UART_USB_TX_BUFFER_SIZE > UART_USB_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_EnableTxInt();
1096:Generated_Source\PSoC5/UART_USB.c ****         #endif /* (UART_USB_TX_BUFFER_SIZE > UART_USB_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_USB.c **** 
1098:Generated_Source\PSoC5/UART_USB.c ****             if(0u != (UART_USB_TXSTATUS_REG & UART_USB_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_USB.c ****             {
1100:Generated_Source\PSoC5/UART_USB.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_USB.c ****             }
1103:Generated_Source\PSoC5/UART_USB.c ****         }
1104:Generated_Source\PSoC5/UART_USB.c **** 
1105:Generated_Source\PSoC5/UART_USB.c ****     #else
1106:Generated_Source\PSoC5/UART_USB.c **** 
1107:Generated_Source\PSoC5/UART_USB.c ****         while((UART_USB_TXSTATUS_REG & UART_USB_TX_STS_FIFO_FULL) != 0u)
 636              		.loc 1 1107 0 discriminator 1
 637 0000 034B     		ldr	r3, .L64
 638 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 639 0004 13F0040F 		tst	r3, #4
 640 0008 FAD1     		bne	.L63
1108:Generated_Source\PSoC5/UART_USB.c ****         {
1109:Generated_Source\PSoC5/UART_USB.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_USB.c ****         }
1111:Generated_Source\PSoC5/UART_USB.c **** 
1112:Generated_Source\PSoC5/UART_USB.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_TXDATA_REG = txDataByte;
 641              		.loc 1 1113 0
 642 000a 024B     		ldr	r3, .L64+4
 643 000c 1870     		strb	r0, [r3]
 644 000e 7047     		bx	lr
 645              	.L65:
 646              		.align	2
 647              	.L64:
 648 0010 67650040 		.word	1073767783
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 32


 649 0014 44650040 		.word	1073767748
 650              		.cfi_endproc
 651              	.LFE19:
 652              		.size	UART_USB_PutChar, .-UART_USB_PutChar
 653              		.section	.text.UART_USB_PutString,"ax",%progbits
 654              		.align	2
 655              		.global	UART_USB_PutString
 656              		.thumb
 657              		.thumb_func
 658              		.type	UART_USB_PutString, %function
 659              	UART_USB_PutString:
 660              	.LFB20:
1114:Generated_Source\PSoC5/UART_USB.c **** 
1115:Generated_Source\PSoC5/UART_USB.c ****     #endif /* UART_USB_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_USB.c ****     }
1117:Generated_Source\PSoC5/UART_USB.c **** 
1118:Generated_Source\PSoC5/UART_USB.c **** 
1119:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_PutString
1121:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_USB.c ****     *
1123:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_USB.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_USB.c ****     *
1126:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_USB.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_USB.c ****     *
1129:Generated_Source\PSoC5/UART_USB.c ****     * Return:
1130:Generated_Source\PSoC5/UART_USB.c ****     *  None.
1131:Generated_Source\PSoC5/UART_USB.c ****     *
1132:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_USB.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_USB.c ****     *
1136:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_USB.c ****     *  No.
1138:Generated_Source\PSoC5/UART_USB.c ****     *
1139:Generated_Source\PSoC5/UART_USB.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_USB.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_USB.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_USB.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_USB.c ****     *
1144:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_USB.c ****     {
 661              		.loc 1 1146 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              	.LVL34:
 666 0000 38B5     		push	{r3, r4, r5, lr}
 667              		.cfi_def_cfa_offset 16
 668              		.cfi_offset 3, -16
 669              		.cfi_offset 4, -12
 670              		.cfi_offset 5, -8
 671              		.cfi_offset 14, -4
 672              	.LVL35:
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 33


1147:Generated_Source\PSoC5/UART_USB.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART_USB.c **** 
1149:Generated_Source\PSoC5/UART_USB.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_USB.c ****         if(UART_USB_initVar != 0u)
 673              		.loc 1 1150 0
 674 0002 074B     		ldr	r3, .L72
 675 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 676 0006 2BB9     		cbnz	r3, .L70
 677 0008 38BD     		pop	{r3, r4, r5, pc}
 678              	.LVL36:
 679              	.L69:
1151:Generated_Source\PSoC5/UART_USB.c ****         {
1152:Generated_Source\PSoC5/UART_USB.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_USB.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/UART_USB.c ****             {
1155:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_PutChar((uint8)string[bufIndex]);
 680              		.loc 1 1155 0
 681 000a FFF7FEFF 		bl	UART_USB_PutChar
 682              	.LVL37:
1156:Generated_Source\PSoC5/UART_USB.c ****                 bufIndex++;
 683              		.loc 1 1156 0
 684 000e 0134     		adds	r4, r4, #1
 685              	.LVL38:
 686 0010 A4B2     		uxth	r4, r4
 687              	.LVL39:
 688 0012 01E0     		b	.L67
 689              	.LVL40:
 690              	.L70:
 691 0014 0546     		mov	r5, r0
 692 0016 0024     		movs	r4, #0
 693              	.LVL41:
 694              	.L67:
1153:Generated_Source\PSoC5/UART_USB.c ****             {
 695              		.loc 1 1153 0
 696 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 697 001a 0028     		cmp	r0, #0
 698 001c F5D1     		bne	.L69
 699 001e 38BD     		pop	{r3, r4, r5, pc}
 700              	.LVL42:
 701              	.L73:
 702              		.align	2
 703              	.L72:
 704 0020 00000000 		.word	.LANCHOR0
 705              		.cfi_endproc
 706              	.LFE20:
 707              		.size	UART_USB_PutString, .-UART_USB_PutString
 708              		.section	.text.UART_USB_PutInt,"ax",%progbits
 709              		.align	2
 710              		.global	UART_USB_PutInt
 711              		.thumb
 712              		.thumb_func
 713              		.type	UART_USB_PutInt, %function
 714              	UART_USB_PutInt:
 715              	.LFB21:
1157:Generated_Source\PSoC5/UART_USB.c ****             }
1158:Generated_Source\PSoC5/UART_USB.c ****         }
1159:Generated_Source\PSoC5/UART_USB.c ****     }
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 34


1160:Generated_Source\PSoC5/UART_USB.c ****     
1161:Generated_Source\PSoC5/UART_USB.c ****     
1162:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_PutInt
1164:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_USB.c ****     *
1166:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_USB.c ****     *  Converts an integer to a null-terminated string and sends it to the TX buffer
1168:Generated_Source\PSoC5/UART_USB.c ****     *  for transmission over UART.
1169:Generated_Source\PSoC5/UART_USB.c ****     *
1170:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_USB.c ****     *  num: Integer value to be sent over UART.
1172:Generated_Source\PSoC5/UART_USB.c ****     *
1173:Generated_Source\PSoC5/UART_USB.c ****     * Return:
1174:Generated_Source\PSoC5/UART_USB.c ****     *  None.
1175:Generated_Source\PSoC5/UART_USB.c ****     *
1176:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
1177:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_initVar - checked to identify that the component has been
1178:Generated_Source\PSoC5/UART_USB.c ****     *     initialized.
1179:Generated_Source\PSoC5/UART_USB.c ****     *
1180:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
1181:Generated_Source\PSoC5/UART_USB.c ****     *  No.
1182:Generated_Source\PSoC5/UART_USB.c ****     *
1183:Generated_Source\PSoC5/UART_USB.c ****     * Theory:
1184:Generated_Source\PSoC5/UART_USB.c ****     *  Converts the integer to ASCII by working backward in a fixed-size buffer.
1185:Generated_Source\PSoC5/UART_USB.c ****     *  Handles both positive and negative values. Sends the resulting string using
1186:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_PutString.
1187:Generated_Source\PSoC5/UART_USB.c ****     *
1188:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
1189:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_PutInt(int num) {
 716              		.loc 1 1189 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 16
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              	.LVL43:
 721 0000 70B5     		push	{r4, r5, r6, lr}
 722              		.cfi_def_cfa_offset 16
 723              		.cfi_offset 4, -16
 724              		.cfi_offset 5, -12
 725              		.cfi_offset 6, -8
 726              		.cfi_offset 14, -4
 727 0002 84B0     		sub	sp, sp, #16
 728              		.cfi_def_cfa_offset 32
 729              	.LVL44:
1190:Generated_Source\PSoC5/UART_USB.c ****         char msg[12]; // -2147483648\0
1191:Generated_Source\PSoC5/UART_USB.c ****         int i = 11;
1192:Generated_Source\PSoC5/UART_USB.c ****         unsigned int n;
1193:Generated_Source\PSoC5/UART_USB.c **** 
1194:Generated_Source\PSoC5/UART_USB.c ****         msg[i--] = '\0';
 730              		.loc 1 1194 0
 731 0004 0023     		movs	r3, #0
 732 0006 8DF80F30 		strb	r3, [sp, #15]
1195:Generated_Source\PSoC5/UART_USB.c **** 
1196:Generated_Source\PSoC5/UART_USB.c ****         if (num < 0) {
 733              		.loc 1 1196 0
 734 000a 0028     		cmp	r0, #0
 735 000c 01DA     		bge	.L75
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 35


1197:Generated_Source\PSoC5/UART_USB.c ****             n = -num;
 736              		.loc 1 1197 0
 737 000e 4242     		negs	r2, r0
 738              	.LVL45:
 739 0010 00E0     		b	.L76
 740              	.LVL46:
 741              	.L75:
1198:Generated_Source\PSoC5/UART_USB.c ****         } else {
1199:Generated_Source\PSoC5/UART_USB.c ****             n = num;
 742              		.loc 1 1199 0
 743 0012 0246     		mov	r2, r0
 744              	.LVL47:
 745              	.L76:
1189:Generated_Source\PSoC5/UART_USB.c ****         char msg[12]; // -2147483648\0
 746              		.loc 1 1189 0 discriminator 1
 747 0014 0A21     		movs	r1, #10
 748 0016 00E0     		b	.L77
 749              	.LVL48:
 750              	.L79:
1200:Generated_Source\PSoC5/UART_USB.c ****         }
1201:Generated_Source\PSoC5/UART_USB.c **** 
1202:Generated_Source\PSoC5/UART_USB.c ****         do {
1203:Generated_Source\PSoC5/UART_USB.c ****             msg[i--] = '0' + (n % 10);
 751              		.loc 1 1203 0
 752 0018 3146     		mov	r1, r6
 753              	.LVL49:
 754              	.L77:
 755              		.loc 1 1203 0 is_stmt 0 discriminator 1
 756 001a 4E1E     		subs	r6, r1, #1
 757              	.LVL50:
 758 001c 0F4B     		ldr	r3, .L81
 759 001e A3FB0243 		umull	r4, r3, r3, r2
 760 0022 DB08     		lsrs	r3, r3, #3
 761 0024 1C46     		mov	r4, r3
 762 0026 03EB8303 		add	r3, r3, r3, lsl #2
 763 002a 5D00     		lsls	r5, r3, #1
 764 002c 531B     		subs	r3, r2, r5
 765 002e 3033     		adds	r3, r3, #48
 766 0030 04AA     		add	r2, sp, #16
 767              	.LVL51:
 768 0032 0A44     		add	r2, r2, r1
 769 0034 02F80C3C 		strb	r3, [r2, #-12]
1204:Generated_Source\PSoC5/UART_USB.c ****             n /= 10;
 770              		.loc 1 1204 0 is_stmt 1 discriminator 1
 771 0038 2246     		mov	r2, r4
 772              	.LVL52:
1205:Generated_Source\PSoC5/UART_USB.c ****         } while (n > 0);
 773              		.loc 1 1205 0 discriminator 1
 774 003a 002C     		cmp	r4, #0
 775 003c ECD1     		bne	.L79
1206:Generated_Source\PSoC5/UART_USB.c **** 
1207:Generated_Source\PSoC5/UART_USB.c ****         if (num < 0)
 776              		.loc 1 1207 0
 777 003e 0028     		cmp	r0, #0
 778 0040 05DA     		bge	.L78
 779              	.LVL53:
1208:Generated_Source\PSoC5/UART_USB.c ****             msg[i--] = '-';
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 36


 780              		.loc 1 1208 0
 781 0042 04AB     		add	r3, sp, #16
 782 0044 1E44     		add	r6, r6, r3
 783 0046 2D23     		movs	r3, #45
 784 0048 06F80C3C 		strb	r3, [r6, #-12]
 785 004c 8E1E     		subs	r6, r1, #2
 786              	.LVL54:
 787              	.L78:
1209:Generated_Source\PSoC5/UART_USB.c **** 
1210:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_PutString(&msg[i + 1]);
 788              		.loc 1 1210 0
 789 004e 701C     		adds	r0, r6, #1
 790              	.LVL55:
 791 0050 01AB     		add	r3, sp, #4
 792 0052 1844     		add	r0, r0, r3
 793 0054 FFF7FEFF 		bl	UART_USB_PutString
 794              	.LVL56:
1211:Generated_Source\PSoC5/UART_USB.c ****     }
 795              		.loc 1 1211 0
 796 0058 04B0     		add	sp, sp, #16
 797              		.cfi_def_cfa_offset 16
 798              		@ sp needed
 799 005a 70BD     		pop	{r4, r5, r6, pc}
 800              	.LVL57:
 801              	.L82:
 802              		.align	2
 803              	.L81:
 804 005c CDCCCCCC 		.word	-858993459
 805              		.cfi_endproc
 806              	.LFE21:
 807              		.size	UART_USB_PutInt, .-UART_USB_PutInt
 808              		.section	.text.UART_USB_PutArray,"ax",%progbits
 809              		.align	2
 810              		.global	UART_USB_PutArray
 811              		.thumb
 812              		.thumb_func
 813              		.type	UART_USB_PutArray, %function
 814              	UART_USB_PutArray:
 815              	.LFB22:
1212:Generated_Source\PSoC5/UART_USB.c **** 
1213:Generated_Source\PSoC5/UART_USB.c **** 
1214:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
1215:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_PutArray
1216:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
1217:Generated_Source\PSoC5/UART_USB.c ****     *
1218:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
1219:Generated_Source\PSoC5/UART_USB.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1220:Generated_Source\PSoC5/UART_USB.c ****     *  transmission.
1221:Generated_Source\PSoC5/UART_USB.c ****     *
1222:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
1223:Generated_Source\PSoC5/UART_USB.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1224:Generated_Source\PSoC5/UART_USB.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1225:Generated_Source\PSoC5/UART_USB.c ****     *             Size parameter.
1226:Generated_Source\PSoC5/UART_USB.c ****     *
1227:Generated_Source\PSoC5/UART_USB.c ****     * Return:
1228:Generated_Source\PSoC5/UART_USB.c ****     *  None.
1229:Generated_Source\PSoC5/UART_USB.c ****     *
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 37


1230:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
1231:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_initVar - checked to identify that the component has been
1232:Generated_Source\PSoC5/UART_USB.c ****     *     initialized.
1233:Generated_Source\PSoC5/UART_USB.c ****     *
1234:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
1235:Generated_Source\PSoC5/UART_USB.c ****     *  No.
1236:Generated_Source\PSoC5/UART_USB.c ****     *
1237:Generated_Source\PSoC5/UART_USB.c ****     * Theory:
1238:Generated_Source\PSoC5/UART_USB.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1239:Generated_Source\PSoC5/UART_USB.c ****     *  function blocks until the last character of the string is loaded into the
1240:Generated_Source\PSoC5/UART_USB.c ****     *  TX buffer.
1241:Generated_Source\PSoC5/UART_USB.c ****     *
1242:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
1243:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_PutArray(const uint8 string[], uint8 byteCount)
1244:Generated_Source\PSoC5/UART_USB.c ****                                                                     
1245:Generated_Source\PSoC5/UART_USB.c ****     {
 816              		.loc 1 1245 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820              	.LVL58:
1246:Generated_Source\PSoC5/UART_USB.c ****         uint8 bufIndex = 0u;
1247:Generated_Source\PSoC5/UART_USB.c **** 
1248:Generated_Source\PSoC5/UART_USB.c ****         /* If not Initialized then skip this function */
1249:Generated_Source\PSoC5/UART_USB.c ****         if(UART_USB_initVar != 0u)
 821              		.loc 1 1249 0
 822 0000 084B     		ldr	r3, .L89
 823 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 824 0004 33B9     		cbnz	r3, .L87
 825 0006 7047     		bx	lr
 826              	.LVL59:
 827              	.L86:
 828              		.cfi_def_cfa_offset 16
 829              		.cfi_offset 4, -16
 830              		.cfi_offset 5, -12
 831              		.cfi_offset 6, -8
 832              		.cfi_offset 14, -4
1250:Generated_Source\PSoC5/UART_USB.c ****         {
1251:Generated_Source\PSoC5/UART_USB.c ****             while(bufIndex < byteCount)
1252:Generated_Source\PSoC5/UART_USB.c ****             {
1253:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_PutChar(string[bufIndex]);
 833              		.loc 1 1253 0
 834 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 835 000a FFF7FEFF 		bl	UART_USB_PutChar
 836              	.LVL60:
1254:Generated_Source\PSoC5/UART_USB.c ****                 bufIndex++;
 837              		.loc 1 1254 0
 838 000e 0134     		adds	r4, r4, #1
 839              	.LVL61:
 840 0010 E4B2     		uxtb	r4, r4
 841              	.LVL62:
 842 0012 03E0     		b	.L84
 843              	.LVL63:
 844              	.L87:
 845              		.cfi_def_cfa_offset 0
 846              		.cfi_restore 4
 847              		.cfi_restore 5
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 38


 848              		.cfi_restore 6
 849              		.cfi_restore 14
1245:Generated_Source\PSoC5/UART_USB.c ****         uint8 bufIndex = 0u;
 850              		.loc 1 1245 0
 851 0014 70B5     		push	{r4, r5, r6, lr}
 852              		.cfi_def_cfa_offset 16
 853              		.cfi_offset 4, -16
 854              		.cfi_offset 5, -12
 855              		.cfi_offset 6, -8
 856              		.cfi_offset 14, -4
 857 0016 0D46     		mov	r5, r1
 858 0018 0646     		mov	r6, r0
 859 001a 0024     		movs	r4, #0
 860              	.LVL64:
 861              	.L84:
1251:Generated_Source\PSoC5/UART_USB.c ****             {
 862              		.loc 1 1251 0
 863 001c AC42     		cmp	r4, r5
 864 001e F3D3     		bcc	.L86
 865 0020 70BD     		pop	{r4, r5, r6, pc}
 866              	.LVL65:
 867              	.L90:
 868 0022 00BF     		.align	2
 869              	.L89:
 870 0024 00000000 		.word	.LANCHOR0
 871              		.cfi_endproc
 872              	.LFE22:
 873              		.size	UART_USB_PutArray, .-UART_USB_PutArray
 874              		.section	.text.UART_USB_PutCRLF,"ax",%progbits
 875              		.align	2
 876              		.global	UART_USB_PutCRLF
 877              		.thumb
 878              		.thumb_func
 879              		.type	UART_USB_PutCRLF, %function
 880              	UART_USB_PutCRLF:
 881              	.LFB23:
1255:Generated_Source\PSoC5/UART_USB.c ****             }
1256:Generated_Source\PSoC5/UART_USB.c ****         }
1257:Generated_Source\PSoC5/UART_USB.c ****     }
1258:Generated_Source\PSoC5/UART_USB.c **** 
1259:Generated_Source\PSoC5/UART_USB.c **** 
1260:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
1261:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_PutCRLF
1262:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
1263:Generated_Source\PSoC5/UART_USB.c ****     *
1264:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
1265:Generated_Source\PSoC5/UART_USB.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1266:Generated_Source\PSoC5/UART_USB.c ****     *  (0x0A) to the transmit buffer.
1267:Generated_Source\PSoC5/UART_USB.c ****     *
1268:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
1269:Generated_Source\PSoC5/UART_USB.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1270:Generated_Source\PSoC5/UART_USB.c ****     *
1271:Generated_Source\PSoC5/UART_USB.c ****     * Return:
1272:Generated_Source\PSoC5/UART_USB.c ****     *  None.
1273:Generated_Source\PSoC5/UART_USB.c ****     *
1274:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
1275:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_initVar - checked to identify that the component has been
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 39


1276:Generated_Source\PSoC5/UART_USB.c ****     *     initialized.
1277:Generated_Source\PSoC5/UART_USB.c ****     *
1278:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
1279:Generated_Source\PSoC5/UART_USB.c ****     *  No.
1280:Generated_Source\PSoC5/UART_USB.c ****     *
1281:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
1282:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_PutCRLF(uint8 txDataByte) 
1283:Generated_Source\PSoC5/UART_USB.c ****     {
 882              		.loc 1 1283 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              	.LVL66:
 887 0000 08B5     		push	{r3, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 3, -8
 890              		.cfi_offset 14, -4
1284:Generated_Source\PSoC5/UART_USB.c ****         /* If not Initialized then skip this function */
1285:Generated_Source\PSoC5/UART_USB.c ****         if(UART_USB_initVar != 0u)
 891              		.loc 1 1285 0
 892 0002 064B     		ldr	r3, .L94
 893 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 894 0006 3BB1     		cbz	r3, .L91
1286:Generated_Source\PSoC5/UART_USB.c ****         {
1287:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_PutChar(txDataByte);
 895              		.loc 1 1287 0
 896 0008 FFF7FEFF 		bl	UART_USB_PutChar
 897              	.LVL67:
1288:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_PutChar(0x0Du);
 898              		.loc 1 1288 0
 899 000c 0D20     		movs	r0, #13
 900 000e FFF7FEFF 		bl	UART_USB_PutChar
 901              	.LVL68:
1289:Generated_Source\PSoC5/UART_USB.c ****             UART_USB_PutChar(0x0Au);
 902              		.loc 1 1289 0
 903 0012 0A20     		movs	r0, #10
 904 0014 FFF7FEFF 		bl	UART_USB_PutChar
 905              	.LVL69:
 906              	.L91:
 907 0018 08BD     		pop	{r3, pc}
 908              	.L95:
 909 001a 00BF     		.align	2
 910              	.L94:
 911 001c 00000000 		.word	.LANCHOR0
 912              		.cfi_endproc
 913              	.LFE23:
 914              		.size	UART_USB_PutCRLF, .-UART_USB_PutCRLF
 915              		.section	.text.UART_USB_GetTxBufferSize,"ax",%progbits
 916              		.align	2
 917              		.global	UART_USB_GetTxBufferSize
 918              		.thumb
 919              		.thumb_func
 920              		.type	UART_USB_GetTxBufferSize, %function
 921              	UART_USB_GetTxBufferSize:
 922              	.LFB24:
1290:Generated_Source\PSoC5/UART_USB.c ****         }
1291:Generated_Source\PSoC5/UART_USB.c ****     }
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 40


1292:Generated_Source\PSoC5/UART_USB.c **** 
1293:Generated_Source\PSoC5/UART_USB.c **** 
1294:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
1295:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_GetTxBufferSize
1296:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
1297:Generated_Source\PSoC5/UART_USB.c ****     *
1298:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
1299:Generated_Source\PSoC5/UART_USB.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1300:Generated_Source\PSoC5/UART_USB.c ****     *  transmitted.
1301:Generated_Source\PSoC5/UART_USB.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1302:Generated_Source\PSoC5/UART_USB.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1303:Generated_Source\PSoC5/UART_USB.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1304:Generated_Source\PSoC5/UART_USB.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1305:Generated_Source\PSoC5/UART_USB.c ****     *    TX FIFO do not count.
1306:Generated_Source\PSoC5/UART_USB.c ****     *
1307:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
1308:Generated_Source\PSoC5/UART_USB.c ****     *  None.
1309:Generated_Source\PSoC5/UART_USB.c ****     *
1310:Generated_Source\PSoC5/UART_USB.c ****     * Return:
1311:Generated_Source\PSoC5/UART_USB.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1312:Generated_Source\PSoC5/UART_USB.c ****     *  Buffer Size parameter.
1313:Generated_Source\PSoC5/UART_USB.c ****     *
1314:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
1315:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_txBufferWrite - used to calculate left space.
1316:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_txBufferRead - used to calculate left space.
1317:Generated_Source\PSoC5/UART_USB.c ****     *
1318:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
1319:Generated_Source\PSoC5/UART_USB.c ****     *  No.
1320:Generated_Source\PSoC5/UART_USB.c ****     *
1321:Generated_Source\PSoC5/UART_USB.c ****     * Theory:
1322:Generated_Source\PSoC5/UART_USB.c ****     *  Allows the user to find out how full the TX Buffer is.
1323:Generated_Source\PSoC5/UART_USB.c ****     *
1324:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
1325:Generated_Source\PSoC5/UART_USB.c ****     uint8 UART_USB_GetTxBufferSize(void)
1326:Generated_Source\PSoC5/UART_USB.c ****                                                             
1327:Generated_Source\PSoC5/UART_USB.c ****     {
 923              		.loc 1 1327 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927              		@ link register save eliminated.
1328:Generated_Source\PSoC5/UART_USB.c ****         uint8 size;
1329:Generated_Source\PSoC5/UART_USB.c **** 
1330:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_TX_INTERRUPT_ENABLED)
1331:Generated_Source\PSoC5/UART_USB.c **** 
1332:Generated_Source\PSoC5/UART_USB.c ****         /* Protect variables that could change on interrupt. */
1333:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_DisableTxInt();
1334:Generated_Source\PSoC5/UART_USB.c **** 
1335:Generated_Source\PSoC5/UART_USB.c ****         if(UART_USB_txBufferRead == UART_USB_txBufferWrite)
1336:Generated_Source\PSoC5/UART_USB.c ****         {
1337:Generated_Source\PSoC5/UART_USB.c ****             size = 0u;
1338:Generated_Source\PSoC5/UART_USB.c ****         }
1339:Generated_Source\PSoC5/UART_USB.c ****         else if(UART_USB_txBufferRead < UART_USB_txBufferWrite)
1340:Generated_Source\PSoC5/UART_USB.c ****         {
1341:Generated_Source\PSoC5/UART_USB.c ****             size = (UART_USB_txBufferWrite - UART_USB_txBufferRead);
1342:Generated_Source\PSoC5/UART_USB.c ****         }
1343:Generated_Source\PSoC5/UART_USB.c ****         else
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 41


1344:Generated_Source\PSoC5/UART_USB.c ****         {
1345:Generated_Source\PSoC5/UART_USB.c ****             size = (UART_USB_TX_BUFFER_SIZE - UART_USB_txBufferRead) +
1346:Generated_Source\PSoC5/UART_USB.c ****                     UART_USB_txBufferWrite;
1347:Generated_Source\PSoC5/UART_USB.c ****         }
1348:Generated_Source\PSoC5/UART_USB.c **** 
1349:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_EnableTxInt();
1350:Generated_Source\PSoC5/UART_USB.c **** 
1351:Generated_Source\PSoC5/UART_USB.c ****     #else
1352:Generated_Source\PSoC5/UART_USB.c **** 
1353:Generated_Source\PSoC5/UART_USB.c ****         size = UART_USB_TXSTATUS_REG;
 928              		.loc 1 1353 0
 929 0000 074B     		ldr	r3, .L100
 930 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 931 0004 DBB2     		uxtb	r3, r3
 932              	.LVL70:
1354:Generated_Source\PSoC5/UART_USB.c **** 
1355:Generated_Source\PSoC5/UART_USB.c ****         /* Is the fifo is full. */
1356:Generated_Source\PSoC5/UART_USB.c ****         if((size & UART_USB_TX_STS_FIFO_FULL) != 0u)
 933              		.loc 1 1356 0
 934 0006 13F0040F 		tst	r3, #4
 935 000a 04D1     		bne	.L98
1357:Generated_Source\PSoC5/UART_USB.c ****         {
1358:Generated_Source\PSoC5/UART_USB.c ****             size = UART_USB_FIFO_LENGTH;
1359:Generated_Source\PSoC5/UART_USB.c ****         }
1360:Generated_Source\PSoC5/UART_USB.c ****         else if((size & UART_USB_TX_STS_FIFO_EMPTY) != 0u)
 936              		.loc 1 1360 0
 937 000c 13F0020F 		tst	r3, #2
 938 0010 03D0     		beq	.L99
1361:Generated_Source\PSoC5/UART_USB.c ****         {
1362:Generated_Source\PSoC5/UART_USB.c ****             size = 0u;
 939              		.loc 1 1362 0
 940 0012 0020     		movs	r0, #0
 941 0014 7047     		bx	lr
 942              	.L98:
1358:Generated_Source\PSoC5/UART_USB.c ****         }
 943              		.loc 1 1358 0
 944 0016 0420     		movs	r0, #4
 945 0018 7047     		bx	lr
 946              	.L99:
1363:Generated_Source\PSoC5/UART_USB.c ****         }
1364:Generated_Source\PSoC5/UART_USB.c ****         else
1365:Generated_Source\PSoC5/UART_USB.c ****         {
1366:Generated_Source\PSoC5/UART_USB.c ****             /* We only know there is data in the fifo. */
1367:Generated_Source\PSoC5/UART_USB.c ****             size = 1u;
 947              		.loc 1 1367 0
 948 001a 0120     		movs	r0, #1
 949              	.LVL71:
1368:Generated_Source\PSoC5/UART_USB.c ****         }
1369:Generated_Source\PSoC5/UART_USB.c **** 
1370:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_TX_INTERRUPT_ENABLED) */
1371:Generated_Source\PSoC5/UART_USB.c **** 
1372:Generated_Source\PSoC5/UART_USB.c ****     return(size);
1373:Generated_Source\PSoC5/UART_USB.c ****     }
 950              		.loc 1 1373 0
 951 001c 7047     		bx	lr
 952              	.L101:
 953 001e 00BF     		.align	2
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 42


 954              	.L100:
 955 0020 67650040 		.word	1073767783
 956              		.cfi_endproc
 957              	.LFE24:
 958              		.size	UART_USB_GetTxBufferSize, .-UART_USB_GetTxBufferSize
 959              		.section	.text.UART_USB_ClearTxBuffer,"ax",%progbits
 960              		.align	2
 961              		.global	UART_USB_ClearTxBuffer
 962              		.thumb
 963              		.thumb_func
 964              		.type	UART_USB_ClearTxBuffer, %function
 965              	UART_USB_ClearTxBuffer:
 966              	.LFB25:
1374:Generated_Source\PSoC5/UART_USB.c **** 
1375:Generated_Source\PSoC5/UART_USB.c **** 
1376:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
1377:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_ClearTxBuffer
1378:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
1379:Generated_Source\PSoC5/UART_USB.c ****     *
1380:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
1381:Generated_Source\PSoC5/UART_USB.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1382:Generated_Source\PSoC5/UART_USB.c ****     *
1383:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
1384:Generated_Source\PSoC5/UART_USB.c ****     *  None.
1385:Generated_Source\PSoC5/UART_USB.c ****     *
1386:Generated_Source\PSoC5/UART_USB.c ****     * Return:
1387:Generated_Source\PSoC5/UART_USB.c ****     *  None.
1388:Generated_Source\PSoC5/UART_USB.c ****     *
1389:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
1390:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_txBufferWrite - cleared to zero.
1391:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_txBufferRead - cleared to zero.
1392:Generated_Source\PSoC5/UART_USB.c ****     *
1393:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
1394:Generated_Source\PSoC5/UART_USB.c ****     *  No.
1395:Generated_Source\PSoC5/UART_USB.c ****     *
1396:Generated_Source\PSoC5/UART_USB.c ****     * Theory:
1397:Generated_Source\PSoC5/UART_USB.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1398:Generated_Source\PSoC5/UART_USB.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1399:Generated_Source\PSoC5/UART_USB.c ****     *  remained in the RAM.
1400:Generated_Source\PSoC5/UART_USB.c ****     *
1401:Generated_Source\PSoC5/UART_USB.c ****     * Side Effects:
1402:Generated_Source\PSoC5/UART_USB.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1403:Generated_Source\PSoC5/UART_USB.c ****     *  transmitting finishes transmitting.
1404:Generated_Source\PSoC5/UART_USB.c ****     *
1405:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
1406:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_ClearTxBuffer(void) 
1407:Generated_Source\PSoC5/UART_USB.c ****     {
 967              		.loc 1 1407 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971 0000 08B5     		push	{r3, lr}
 972              		.cfi_def_cfa_offset 8
 973              		.cfi_offset 3, -8
 974              		.cfi_offset 14, -4
1408:Generated_Source\PSoC5/UART_USB.c ****         uint8 enableInterrupts;
1409:Generated_Source\PSoC5/UART_USB.c **** 
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 43


1410:Generated_Source\PSoC5/UART_USB.c ****         enableInterrupts = CyEnterCriticalSection();
 975              		.loc 1 1410 0
 976 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 977              	.LVL72:
1411:Generated_Source\PSoC5/UART_USB.c ****         /* Clear the HW FIFO */
1412:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_TXDATA_AUX_CTL_REG |= (uint8)  UART_USB_TX_FIFO_CLR;
 978              		.loc 1 1412 0
 979 0006 064B     		ldr	r3, .L104
 980 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 981 000a 42F00102 		orr	r2, r2, #1
 982 000e 1A70     		strb	r2, [r3]
1413:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_TXDATA_AUX_CTL_REG &= (uint8) ~UART_USB_TX_FIFO_CLR;
 983              		.loc 1 1413 0
 984 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 985 0012 02F0FE02 		and	r2, r2, #254
 986 0016 1A70     		strb	r2, [r3]
1414:Generated_Source\PSoC5/UART_USB.c ****         CyExitCriticalSection(enableInterrupts);
 987              		.loc 1 1414 0
 988 0018 FFF7FEFF 		bl	CyExitCriticalSection
 989              	.LVL73:
 990 001c 08BD     		pop	{r3, pc}
 991              	.L105:
 992 001e 00BF     		.align	2
 993              	.L104:
 994 0020 94650040 		.word	1073767828
 995              		.cfi_endproc
 996              	.LFE25:
 997              		.size	UART_USB_ClearTxBuffer, .-UART_USB_ClearTxBuffer
 998              		.section	.text.UART_USB_SendBreak,"ax",%progbits
 999              		.align	2
 1000              		.global	UART_USB_SendBreak
 1001              		.thumb
 1002              		.thumb_func
 1003              		.type	UART_USB_SendBreak, %function
 1004              	UART_USB_SendBreak:
 1005              	.LFB26:
1415:Generated_Source\PSoC5/UART_USB.c **** 
1416:Generated_Source\PSoC5/UART_USB.c ****     #if (UART_USB_TX_INTERRUPT_ENABLED)
1417:Generated_Source\PSoC5/UART_USB.c **** 
1418:Generated_Source\PSoC5/UART_USB.c ****         /* Protect variables that could change on interrupt. */
1419:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_DisableTxInt();
1420:Generated_Source\PSoC5/UART_USB.c **** 
1421:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_txBufferRead = 0u;
1422:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_txBufferWrite = 0u;
1423:Generated_Source\PSoC5/UART_USB.c **** 
1424:Generated_Source\PSoC5/UART_USB.c ****         /* Enable Tx interrupt. */
1425:Generated_Source\PSoC5/UART_USB.c ****         UART_USB_EnableTxInt();
1426:Generated_Source\PSoC5/UART_USB.c **** 
1427:Generated_Source\PSoC5/UART_USB.c ****     #endif /* (UART_USB_TX_INTERRUPT_ENABLED) */
1428:Generated_Source\PSoC5/UART_USB.c ****     }
1429:Generated_Source\PSoC5/UART_USB.c **** 
1430:Generated_Source\PSoC5/UART_USB.c **** 
1431:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
1432:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_SendBreak
1433:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
1434:Generated_Source\PSoC5/UART_USB.c ****     *
1435:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 44


1436:Generated_Source\PSoC5/UART_USB.c ****     *  Transmits a break signal on the bus.
1437:Generated_Source\PSoC5/UART_USB.c ****     *
1438:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
1439:Generated_Source\PSoC5/UART_USB.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1440:Generated_Source\PSoC5/UART_USB.c ****     *   UART_USB_SEND_BREAK - Initialize registers for break, send the Break
1441:Generated_Source\PSoC5/UART_USB.c ****     *       signal and return immediately.
1442:Generated_Source\PSoC5/UART_USB.c ****     *   UART_USB_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1443:Generated_Source\PSoC5/UART_USB.c ****     *       complete, reinitialize registers to normal transmission mode then return
1444:Generated_Source\PSoC5/UART_USB.c ****     *   UART_USB_REINIT - Reinitialize registers to normal transmission mode
1445:Generated_Source\PSoC5/UART_USB.c ****     *       then return.
1446:Generated_Source\PSoC5/UART_USB.c ****     *   UART_USB_SEND_WAIT_REINIT - Performs both options: 
1447:Generated_Source\PSoC5/UART_USB.c ****     *      UART_USB_SEND_BREAK and UART_USB_WAIT_FOR_COMPLETE_REINIT.
1448:Generated_Source\PSoC5/UART_USB.c ****     *      This option is recommended for most cases.
1449:Generated_Source\PSoC5/UART_USB.c ****     *
1450:Generated_Source\PSoC5/UART_USB.c ****     * Return:
1451:Generated_Source\PSoC5/UART_USB.c ****     *  None.
1452:Generated_Source\PSoC5/UART_USB.c ****     *
1453:Generated_Source\PSoC5/UART_USB.c ****     * Global Variables:
1454:Generated_Source\PSoC5/UART_USB.c ****     *  UART_USB_initVar - checked to identify that the component has been
1455:Generated_Source\PSoC5/UART_USB.c ****     *     initialized.
1456:Generated_Source\PSoC5/UART_USB.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1457:Generated_Source\PSoC5/UART_USB.c ****     *
1458:Generated_Source\PSoC5/UART_USB.c ****     * Reentrant:
1459:Generated_Source\PSoC5/UART_USB.c ****     *  No.
1460:Generated_Source\PSoC5/UART_USB.c ****     *
1461:Generated_Source\PSoC5/UART_USB.c ****     * Theory:
1462:Generated_Source\PSoC5/UART_USB.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1463:Generated_Source\PSoC5/UART_USB.c ****     *  important to return the registers configuration to normal for continue 8-bit
1464:Generated_Source\PSoC5/UART_USB.c ****     *  operation.
1465:Generated_Source\PSoC5/UART_USB.c ****     *  There are 3 variants for this API usage:
1466:Generated_Source\PSoC5/UART_USB.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1467:Generated_Source\PSoC5/UART_USB.c ****     *     configuration returning. Function will block CPU until transmission
1468:Generated_Source\PSoC5/UART_USB.c ****     *     complete.
1469:Generated_Source\PSoC5/UART_USB.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1470:Generated_Source\PSoC5/UART_USB.c ****     *     operation
1471:Generated_Source\PSoC5/UART_USB.c ****     *     Example for this case:
1472:Generated_Source\PSoC5/UART_USB.c ****     *     SendBreak(0);     - initialize Break signal transmission
1473:Generated_Source\PSoC5/UART_USB.c ****     *         Add your code here to use CPU time
1474:Generated_Source\PSoC5/UART_USB.c ****     *     SendBreak(1);     - complete Break operation
1475:Generated_Source\PSoC5/UART_USB.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1476:Generated_Source\PSoC5/UART_USB.c ****     *     complete break operation.
1477:Generated_Source\PSoC5/UART_USB.c ****     *     Example for this case:
1478:Generated_Source\PSoC5/UART_USB.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1479:Generated_Source\PSoC5/UART_USB.c ****     *     SendBreak(0);     - initialize Break signal transmission
1480:Generated_Source\PSoC5/UART_USB.c ****     *         Add your code here to use CPU time
1481:Generated_Source\PSoC5/UART_USB.c ****     *     When interrupt appear with UART_USB_TX_STS_COMPLETE status:
1482:Generated_Source\PSoC5/UART_USB.c ****     *     SendBreak(2);     - complete Break operation
1483:Generated_Source\PSoC5/UART_USB.c ****     *
1484:Generated_Source\PSoC5/UART_USB.c ****     * Side Effects:
1485:Generated_Source\PSoC5/UART_USB.c ****     *  The UART_USB_SendBreak() function initializes registers to send a
1486:Generated_Source\PSoC5/UART_USB.c ****     *  break signal.
1487:Generated_Source\PSoC5/UART_USB.c ****     *  Break signal length depends on the break signal bits configuration.
1488:Generated_Source\PSoC5/UART_USB.c ****     *  The register configuration should be reinitialized before normal 8-bit
1489:Generated_Source\PSoC5/UART_USB.c ****     *  communication can continue.
1490:Generated_Source\PSoC5/UART_USB.c ****     *
1491:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
1492:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_SendBreak(uint8 retMode) 
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 45


1493:Generated_Source\PSoC5/UART_USB.c ****     {
 1006              		.loc 1 1493 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010              		@ link register save eliminated.
 1011              	.LVL74:
1494:Generated_Source\PSoC5/UART_USB.c **** 
1495:Generated_Source\PSoC5/UART_USB.c ****         /* If not Initialized then skip this function*/
1496:Generated_Source\PSoC5/UART_USB.c ****         if(UART_USB_initVar != 0u)
 1012              		.loc 1 1496 0
 1013 0000 134B     		ldr	r3, .L113
 1014 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1015 0004 13B3     		cbz	r3, .L106
 1016              	.LBB2:
1497:Generated_Source\PSoC5/UART_USB.c ****         {
1498:Generated_Source\PSoC5/UART_USB.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1499:Generated_Source\PSoC5/UART_USB.c ****             /* When that is done then reset the counter value back */
1500:Generated_Source\PSoC5/UART_USB.c ****             uint8 tmpStat;
1501:Generated_Source\PSoC5/UART_USB.c **** 
1502:Generated_Source\PSoC5/UART_USB.c ****         #if(UART_USB_HD_ENABLED) /* Half Duplex mode*/
1503:Generated_Source\PSoC5/UART_USB.c **** 
1504:Generated_Source\PSoC5/UART_USB.c ****             if( (retMode == UART_USB_SEND_BREAK) ||
1505:Generated_Source\PSoC5/UART_USB.c ****                 (retMode == UART_USB_SEND_WAIT_REINIT ) )
1506:Generated_Source\PSoC5/UART_USB.c ****             {
1507:Generated_Source\PSoC5/UART_USB.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1508:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_WriteControlRegister(UART_USB_ReadControlRegister() |
1509:Generated_Source\PSoC5/UART_USB.c ****                                                       UART_USB_CTRL_HD_SEND_BREAK);
1510:Generated_Source\PSoC5/UART_USB.c ****                 /* Send zeros */
1511:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_TXDATA_REG = 0u;
1512:Generated_Source\PSoC5/UART_USB.c **** 
1513:Generated_Source\PSoC5/UART_USB.c ****                 do /* Wait until transmit starts */
1514:Generated_Source\PSoC5/UART_USB.c ****                 {
1515:Generated_Source\PSoC5/UART_USB.c ****                     tmpStat = UART_USB_TXSTATUS_REG;
1516:Generated_Source\PSoC5/UART_USB.c ****                 }
1517:Generated_Source\PSoC5/UART_USB.c ****                 while((tmpStat & UART_USB_TX_STS_FIFO_EMPTY) != 0u);
1518:Generated_Source\PSoC5/UART_USB.c ****             }
1519:Generated_Source\PSoC5/UART_USB.c **** 
1520:Generated_Source\PSoC5/UART_USB.c ****             if( (retMode == UART_USB_WAIT_FOR_COMPLETE_REINIT) ||
1521:Generated_Source\PSoC5/UART_USB.c ****                 (retMode == UART_USB_SEND_WAIT_REINIT) )
1522:Generated_Source\PSoC5/UART_USB.c ****             {
1523:Generated_Source\PSoC5/UART_USB.c ****                 do /* Wait until transmit complete */
1524:Generated_Source\PSoC5/UART_USB.c ****                 {
1525:Generated_Source\PSoC5/UART_USB.c ****                     tmpStat = UART_USB_TXSTATUS_REG;
1526:Generated_Source\PSoC5/UART_USB.c ****                 }
1527:Generated_Source\PSoC5/UART_USB.c ****                 while(((uint8)~tmpStat & UART_USB_TX_STS_COMPLETE) != 0u);
1528:Generated_Source\PSoC5/UART_USB.c ****             }
1529:Generated_Source\PSoC5/UART_USB.c **** 
1530:Generated_Source\PSoC5/UART_USB.c ****             if( (retMode == UART_USB_WAIT_FOR_COMPLETE_REINIT) ||
1531:Generated_Source\PSoC5/UART_USB.c ****                 (retMode == UART_USB_REINIT) ||
1532:Generated_Source\PSoC5/UART_USB.c ****                 (retMode == UART_USB_SEND_WAIT_REINIT) )
1533:Generated_Source\PSoC5/UART_USB.c ****             {
1534:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_WriteControlRegister(UART_USB_ReadControlRegister() &
1535:Generated_Source\PSoC5/UART_USB.c ****                                               (uint8)~UART_USB_CTRL_HD_SEND_BREAK);
1536:Generated_Source\PSoC5/UART_USB.c ****             }
1537:Generated_Source\PSoC5/UART_USB.c **** 
1538:Generated_Source\PSoC5/UART_USB.c ****         #else /* UART_USB_HD_ENABLED Full Duplex mode */
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 46


1539:Generated_Source\PSoC5/UART_USB.c **** 
1540:Generated_Source\PSoC5/UART_USB.c ****             static uint8 txPeriod;
1541:Generated_Source\PSoC5/UART_USB.c **** 
1542:Generated_Source\PSoC5/UART_USB.c ****             if( (retMode == UART_USB_SEND_BREAK) ||
 1017              		.loc 1 1542 0
 1018 0006 08B1     		cbz	r0, .L108
 1019              		.loc 1 1542 0 is_stmt 0 discriminator 1
 1020 0008 0328     		cmp	r0, #3
 1021 000a 0ED1     		bne	.L109
 1022              	.L108:
1543:Generated_Source\PSoC5/UART_USB.c ****                 (retMode == UART_USB_SEND_WAIT_REINIT) )
1544:Generated_Source\PSoC5/UART_USB.c ****             {
1545:Generated_Source\PSoC5/UART_USB.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1546:Generated_Source\PSoC5/UART_USB.c ****                 #if( (UART_USB_PARITY_TYPE != UART_USB__B_UART__NONE_REVB) || \
1547:Generated_Source\PSoC5/UART_USB.c ****                                     (UART_USB_PARITY_TYPE_SW != 0u) )
1548:Generated_Source\PSoC5/UART_USB.c ****                     UART_USB_WriteControlRegister(UART_USB_ReadControlRegister() |
1549:Generated_Source\PSoC5/UART_USB.c ****                                                           UART_USB_CTRL_HD_SEND_BREAK);
1550:Generated_Source\PSoC5/UART_USB.c ****                 #endif /* End UART_USB_PARITY_TYPE != UART_USB__B_UART__NONE_REVB  */
1551:Generated_Source\PSoC5/UART_USB.c **** 
1552:Generated_Source\PSoC5/UART_USB.c ****                 #if(UART_USB_TXCLKGEN_DP)
1553:Generated_Source\PSoC5/UART_USB.c ****                     txPeriod = UART_USB_TXBITCLKTX_COMPLETE_REG;
 1023              		.loc 1 1553 0 is_stmt 1
 1024 000c 114B     		ldr	r3, .L113+4
 1025 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1026 0010 0F4A     		ldr	r2, .L113
 1027 0012 5170     		strb	r1, [r2, #1]
1554:Generated_Source\PSoC5/UART_USB.c ****                     UART_USB_TXBITCLKTX_COMPLETE_REG = UART_USB_TXBITCTR_BREAKBITS;
 1028              		.loc 1 1554 0
 1029 0014 6722     		movs	r2, #103
 1030 0016 1A70     		strb	r2, [r3]
1555:Generated_Source\PSoC5/UART_USB.c ****                 #else
1556:Generated_Source\PSoC5/UART_USB.c ****                     txPeriod = UART_USB_TXBITCTR_PERIOD_REG;
1557:Generated_Source\PSoC5/UART_USB.c ****                     UART_USB_TXBITCTR_PERIOD_REG = UART_USB_TXBITCTR_BREAKBITS8X;
1558:Generated_Source\PSoC5/UART_USB.c ****                 #endif /* End UART_USB_TXCLKGEN_DP */
1559:Generated_Source\PSoC5/UART_USB.c **** 
1560:Generated_Source\PSoC5/UART_USB.c ****                 /* Send zeros */
1561:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_TXDATA_REG = 0u;
 1031              		.loc 1 1561 0
 1032 0018 0022     		movs	r2, #0
 1033 001a 03F20D13 		addw	r3, r3, #269
 1034 001e 1A70     		strb	r2, [r3]
 1035              	.L110:
1562:Generated_Source\PSoC5/UART_USB.c **** 
1563:Generated_Source\PSoC5/UART_USB.c ****                 do /* Wait until transmit starts */
1564:Generated_Source\PSoC5/UART_USB.c ****                 {
1565:Generated_Source\PSoC5/UART_USB.c ****                     tmpStat = UART_USB_TXSTATUS_REG;
 1036              		.loc 1 1565 0 discriminator 1
 1037 0020 0D4B     		ldr	r3, .L113+8
 1038 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1039              	.LVL75:
1566:Generated_Source\PSoC5/UART_USB.c ****                 }
1567:Generated_Source\PSoC5/UART_USB.c ****                 while((tmpStat & UART_USB_TX_STS_FIFO_EMPTY) != 0u);
 1040              		.loc 1 1567 0 discriminator 1
 1041 0024 13F0020F 		tst	r3, #2
 1042 0028 FAD1     		bne	.L110
 1043              	.LVL76:
 1044              	.L109:
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 47


1568:Generated_Source\PSoC5/UART_USB.c ****             }
1569:Generated_Source\PSoC5/UART_USB.c **** 
1570:Generated_Source\PSoC5/UART_USB.c ****             if( (retMode == UART_USB_WAIT_FOR_COMPLETE_REINIT) ||
 1045              		.loc 1 1570 0
 1046 002a 0128     		cmp	r0, #1
 1047 002c 01D0     		beq	.L111
 1048              		.loc 1 1570 0 is_stmt 0 discriminator 1
 1049 002e 0328     		cmp	r0, #3
 1050 0030 04D1     		bne	.L112
 1051              	.L111:
1571:Generated_Source\PSoC5/UART_USB.c ****                 (retMode == UART_USB_SEND_WAIT_REINIT) )
1572:Generated_Source\PSoC5/UART_USB.c ****             {
1573:Generated_Source\PSoC5/UART_USB.c ****                 do /* Wait until transmit complete */
1574:Generated_Source\PSoC5/UART_USB.c ****                 {
1575:Generated_Source\PSoC5/UART_USB.c ****                     tmpStat = UART_USB_TXSTATUS_REG;
 1052              		.loc 1 1575 0 is_stmt 1 discriminator 1
 1053 0032 094B     		ldr	r3, .L113+8
 1054 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1055              	.LVL77:
1576:Generated_Source\PSoC5/UART_USB.c ****                 }
1577:Generated_Source\PSoC5/UART_USB.c ****                 while(((uint8)~tmpStat & UART_USB_TX_STS_COMPLETE) != 0u);
 1056              		.loc 1 1577 0 discriminator 1
 1057 0036 13F0010F 		tst	r3, #1
 1058 003a FAD0     		beq	.L111
 1059              	.LVL78:
 1060              	.L112:
1578:Generated_Source\PSoC5/UART_USB.c ****             }
1579:Generated_Source\PSoC5/UART_USB.c **** 
1580:Generated_Source\PSoC5/UART_USB.c ****             if( (retMode == UART_USB_WAIT_FOR_COMPLETE_REINIT) ||
1581:Generated_Source\PSoC5/UART_USB.c ****                 (retMode == UART_USB_REINIT) ||
 1061              		.loc 1 1581 0
 1062 003c 0138     		subs	r0, r0, #1
 1063              	.LVL79:
 1064 003e C0B2     		uxtb	r0, r0
1580:Generated_Source\PSoC5/UART_USB.c ****                 (retMode == UART_USB_REINIT) ||
 1065              		.loc 1 1580 0
 1066 0040 0228     		cmp	r0, #2
 1067 0042 03D8     		bhi	.L106
1582:Generated_Source\PSoC5/UART_USB.c ****                 (retMode == UART_USB_SEND_WAIT_REINIT) )
1583:Generated_Source\PSoC5/UART_USB.c ****             {
1584:Generated_Source\PSoC5/UART_USB.c **** 
1585:Generated_Source\PSoC5/UART_USB.c ****             #if(UART_USB_TXCLKGEN_DP)
1586:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1068              		.loc 1 1586 0
 1069 0044 024B     		ldr	r3, .L113
 1070 0046 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1071 0048 024B     		ldr	r3, .L113+4
 1072 004a 1A70     		strb	r2, [r3]
 1073              	.L106:
 1074 004c 7047     		bx	lr
 1075              	.L114:
 1076 004e 00BF     		.align	2
 1077              	.L113:
 1078 0050 00000000 		.word	.LANCHOR0
 1079 0054 37640040 		.word	1073767479
 1080 0058 67650040 		.word	1073767783
 1081              	.LBE2:
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 48


 1082              		.cfi_endproc
 1083              	.LFE26:
 1084              		.size	UART_USB_SendBreak, .-UART_USB_SendBreak
 1085              		.section	.text.UART_USB_SetTxAddressMode,"ax",%progbits
 1086              		.align	2
 1087              		.global	UART_USB_SetTxAddressMode
 1088              		.thumb
 1089              		.thumb_func
 1090              		.type	UART_USB_SetTxAddressMode, %function
 1091              	UART_USB_SetTxAddressMode:
 1092              	.LFB27:
1587:Generated_Source\PSoC5/UART_USB.c ****             #else
1588:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_TXBITCTR_PERIOD_REG = txPeriod;
1589:Generated_Source\PSoC5/UART_USB.c ****             #endif /* End UART_USB_TXCLKGEN_DP */
1590:Generated_Source\PSoC5/UART_USB.c **** 
1591:Generated_Source\PSoC5/UART_USB.c ****             #if( (UART_USB_PARITY_TYPE != UART_USB__B_UART__NONE_REVB) || \
1592:Generated_Source\PSoC5/UART_USB.c ****                  (UART_USB_PARITY_TYPE_SW != 0u) )
1593:Generated_Source\PSoC5/UART_USB.c ****                 UART_USB_WriteControlRegister(UART_USB_ReadControlRegister() &
1594:Generated_Source\PSoC5/UART_USB.c ****                                                       (uint8) ~UART_USB_CTRL_HD_SEND_BREAK);
1595:Generated_Source\PSoC5/UART_USB.c ****             #endif /* End UART_USB_PARITY_TYPE != NONE */
1596:Generated_Source\PSoC5/UART_USB.c ****             }
1597:Generated_Source\PSoC5/UART_USB.c ****         #endif    /* End UART_USB_HD_ENABLED */
1598:Generated_Source\PSoC5/UART_USB.c ****         }
1599:Generated_Source\PSoC5/UART_USB.c ****     }
1600:Generated_Source\PSoC5/UART_USB.c **** 
1601:Generated_Source\PSoC5/UART_USB.c **** 
1602:Generated_Source\PSoC5/UART_USB.c ****     /*******************************************************************************
1603:Generated_Source\PSoC5/UART_USB.c ****     * Function Name: UART_USB_SetTxAddressMode
1604:Generated_Source\PSoC5/UART_USB.c ****     ********************************************************************************
1605:Generated_Source\PSoC5/UART_USB.c ****     *
1606:Generated_Source\PSoC5/UART_USB.c ****     * Summary:
1607:Generated_Source\PSoC5/UART_USB.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1608:Generated_Source\PSoC5/UART_USB.c ****     *
1609:Generated_Source\PSoC5/UART_USB.c ****     * Parameters:
1610:Generated_Source\PSoC5/UART_USB.c ****     *  addressMode: 
1611:Generated_Source\PSoC5/UART_USB.c ****     *       UART_USB_SET_SPACE - Configure the transmitter to send the next
1612:Generated_Source\PSoC5/UART_USB.c ****     *                                    byte as a data.
1613:Generated_Source\PSoC5/UART_USB.c ****     *       UART_USB_SET_MARK  - Configure the transmitter to send the next
1614:Generated_Source\PSoC5/UART_USB.c ****     *                                    byte as an address.
1615:Generated_Source\PSoC5/UART_USB.c ****     *
1616:Generated_Source\PSoC5/UART_USB.c ****     * Return:
1617:Generated_Source\PSoC5/UART_USB.c ****     *  None.
1618:Generated_Source\PSoC5/UART_USB.c ****     *
1619:Generated_Source\PSoC5/UART_USB.c ****     * Side Effects:
1620:Generated_Source\PSoC5/UART_USB.c ****     *  This function sets and clears UART_USB_CTRL_MARK bit in the Control
1621:Generated_Source\PSoC5/UART_USB.c ****     *  register.
1622:Generated_Source\PSoC5/UART_USB.c ****     *
1623:Generated_Source\PSoC5/UART_USB.c ****     *******************************************************************************/
1624:Generated_Source\PSoC5/UART_USB.c ****     void UART_USB_SetTxAddressMode(uint8 addressMode) 
1625:Generated_Source\PSoC5/UART_USB.c ****     {
 1093              		.loc 1 1625 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097              		@ link register save eliminated.
 1098              	.LVL80:
 1099 0000 7047     		bx	lr
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 49


 1100              		.cfi_endproc
 1101              	.LFE27:
 1102              		.size	UART_USB_SetTxAddressMode, .-UART_USB_SetTxAddressMode
 1103              		.global	UART_USB_initVar
 1104 0002 00BF     		.bss
 1105              		.set	.LANCHOR0,. + 0
 1106              		.type	UART_USB_initVar, %object
 1107              		.size	UART_USB_initVar, 1
 1108              	UART_USB_initVar:
 1109 0000 00       		.space	1
 1110              		.type	txPeriod.5132, %object
 1111              		.size	txPeriod.5132, 1
 1112              	txPeriod.5132:
 1113 0001 00       		.space	1
 1114              		.text
 1115              	.Letext0:
 1116              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1117              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1118              		.file 4 "Generated_Source\\PSoC5\\UART_USB_IntClock.h"
 1119              		.section	.debug_info,"",%progbits
 1120              	.Ldebug_info0:
 1121 0000 7F060000 		.4byte	0x67f
 1122 0004 0400     		.2byte	0x4
 1123 0006 00000000 		.4byte	.Ldebug_abbrev0
 1124 000a 04       		.byte	0x4
 1125 000b 01       		.uleb128 0x1
 1126 000c 6B030000 		.4byte	.LASF65
 1127 0010 0C       		.byte	0xc
 1128 0011 E9000000 		.4byte	.LASF66
 1129 0015 68020000 		.4byte	.LASF67
 1130 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1131 001d 00000000 		.4byte	0
 1132 0021 00000000 		.4byte	.Ldebug_line0
 1133 0025 02       		.uleb128 0x2
 1134 0026 01       		.byte	0x1
 1135 0027 06       		.byte	0x6
 1136 0028 D4000000 		.4byte	.LASF0
 1137 002c 02       		.uleb128 0x2
 1138 002d 01       		.byte	0x1
 1139 002e 08       		.byte	0x8
 1140 002f 39030000 		.4byte	.LASF1
 1141 0033 02       		.uleb128 0x2
 1142 0034 02       		.byte	0x2
 1143 0035 05       		.byte	0x5
 1144 0036 47030000 		.4byte	.LASF2
 1145 003a 02       		.uleb128 0x2
 1146 003b 02       		.byte	0x2
 1147 003c 07       		.byte	0x7
 1148 003d 1D020000 		.4byte	.LASF3
 1149 0041 02       		.uleb128 0x2
 1150 0042 04       		.byte	0x4
 1151 0043 05       		.byte	0x5
 1152 0044 0B010000 		.4byte	.LASF4
 1153 0048 02       		.uleb128 0x2
 1154 0049 04       		.byte	0x4
 1155 004a 07       		.byte	0x7
 1156 004b D3010000 		.4byte	.LASF5
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 50


 1157 004f 02       		.uleb128 0x2
 1158 0050 08       		.byte	0x8
 1159 0051 05       		.byte	0x5
 1160 0052 C6000000 		.4byte	.LASF6
 1161 0056 02       		.uleb128 0x2
 1162 0057 08       		.byte	0x8
 1163 0058 07       		.byte	0x7
 1164 0059 99000000 		.4byte	.LASF7
 1165 005d 03       		.uleb128 0x3
 1166 005e 04       		.byte	0x4
 1167 005f 05       		.byte	0x5
 1168 0060 696E7400 		.ascii	"int\000"
 1169 0064 02       		.uleb128 0x2
 1170 0065 04       		.byte	0x4
 1171 0066 07       		.byte	0x7
 1172 0067 C6010000 		.4byte	.LASF8
 1173 006b 04       		.uleb128 0x4
 1174 006c 2E010000 		.4byte	.LASF9
 1175 0070 02       		.byte	0x2
 1176 0071 E801     		.2byte	0x1e8
 1177 0073 2C000000 		.4byte	0x2c
 1178 0077 04       		.uleb128 0x4
 1179 0078 10000000 		.4byte	.LASF10
 1180 007c 02       		.byte	0x2
 1181 007d E901     		.2byte	0x1e9
 1182 007f 3A000000 		.4byte	0x3a
 1183 0083 02       		.uleb128 0x2
 1184 0084 04       		.byte	0x4
 1185 0085 04       		.byte	0x4
 1186 0086 E8020000 		.4byte	.LASF11
 1187 008a 02       		.uleb128 0x2
 1188 008b 08       		.byte	0x8
 1189 008c 04       		.byte	0x4
 1190 008d 34010000 		.4byte	.LASF12
 1191 0091 04       		.uleb128 0x4
 1192 0092 40040000 		.4byte	.LASF13
 1193 0096 02       		.byte	0x2
 1194 0097 F901     		.2byte	0x1f9
 1195 0099 9D000000 		.4byte	0x9d
 1196 009d 02       		.uleb128 0x2
 1197 009e 01       		.byte	0x1
 1198 009f 08       		.byte	0x8
 1199 00a0 23040000 		.4byte	.LASF14
 1200 00a4 04       		.uleb128 0x4
 1201 00a5 24030000 		.4byte	.LASF15
 1202 00a9 02       		.byte	0x2
 1203 00aa 9202     		.2byte	0x292
 1204 00ac B0000000 		.4byte	0xb0
 1205 00b0 05       		.uleb128 0x5
 1206 00b1 6B000000 		.4byte	0x6b
 1207 00b5 02       		.uleb128 0x2
 1208 00b6 08       		.byte	0x8
 1209 00b7 04       		.byte	0x4
 1210 00b8 BA020000 		.4byte	.LASF16
 1211 00bc 02       		.uleb128 0x2
 1212 00bd 04       		.byte	0x4
 1213 00be 07       		.byte	0x7
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 51


 1214 00bf B1020000 		.4byte	.LASF17
 1215 00c3 06       		.uleb128 0x6
 1216 00c4 5E010000 		.4byte	.LASF68
 1217 00c8 01       		.byte	0x1
 1218 00c9 6A       		.byte	0x6a
 1219 00ca 00000000 		.4byte	.LFB1
 1220 00ce 28000000 		.4byte	.LFE1-.LFB1
 1221 00d2 01       		.uleb128 0x1
 1222 00d3 9C       		.byte	0x9c
 1223 00d4 07       		.uleb128 0x7
 1224 00d5 29030000 		.4byte	.LASF18
 1225 00d9 01       		.byte	0x1
 1226 00da B7       		.byte	0xb7
 1227 00db 00000000 		.4byte	.LFB2
 1228 00df 38000000 		.4byte	.LFE2-.LFB2
 1229 00e3 01       		.uleb128 0x1
 1230 00e4 9C       		.byte	0x9c
 1231 00e5 1B010000 		.4byte	0x11b
 1232 00e9 08       		.uleb128 0x8
 1233 00ea 63040000 		.4byte	.LASF21
 1234 00ee 01       		.byte	0x1
 1235 00ef B9       		.byte	0xb9
 1236 00f0 6B000000 		.4byte	0x6b
 1237 00f4 00000000 		.4byte	.LLST0
 1238 00f8 09       		.uleb128 0x9
 1239 00f9 06000000 		.4byte	.LVL0
 1240 00fd 56060000 		.4byte	0x656
 1241 0101 09       		.uleb128 0x9
 1242 0102 2A000000 		.4byte	.LVL2
 1243 0106 61060000 		.4byte	0x661
 1244 010a 0A       		.uleb128 0xa
 1245 010b 30000000 		.4byte	.LVL3
 1246 010f 6C060000 		.4byte	0x66c
 1247 0113 0B       		.uleb128 0xb
 1248 0114 01       		.uleb128 0x1
 1249 0115 50       		.byte	0x50
 1250 0116 02       		.uleb128 0x2
 1251 0117 74       		.byte	0x74
 1252 0118 00       		.sleb128 0
 1253 0119 00       		.byte	0
 1254 011a 00       		.byte	0
 1255 011b 07       		.uleb128 0x7
 1256 011c 46040000 		.4byte	.LASF19
 1257 0120 01       		.byte	0x1
 1258 0121 4C       		.byte	0x4c
 1259 0122 00000000 		.4byte	.LFB0
 1260 0126 1C000000 		.4byte	.LFE0-.LFB0
 1261 012a 01       		.uleb128 0x1
 1262 012b 9C       		.byte	0x9c
 1263 012c 43010000 		.4byte	0x143
 1264 0130 09       		.uleb128 0x9
 1265 0131 0C000000 		.4byte	.LVL5
 1266 0135 C3000000 		.4byte	0xc3
 1267 0139 09       		.uleb128 0x9
 1268 013a 16000000 		.4byte	.LVL6
 1269 013e D4000000 		.4byte	0xd4
 1270 0142 00       		.byte	0
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 52


 1271 0143 07       		.uleb128 0x7
 1272 0144 55040000 		.4byte	.LASF20
 1273 0148 01       		.byte	0x1
 1274 0149 F0       		.byte	0xf0
 1275 014a 00000000 		.4byte	.LFB3
 1276 014e 3C000000 		.4byte	.LFE3-.LFB3
 1277 0152 01       		.uleb128 0x1
 1278 0153 9C       		.byte	0x9c
 1279 0154 8A010000 		.4byte	0x18a
 1280 0158 08       		.uleb128 0x8
 1281 0159 63040000 		.4byte	.LASF21
 1282 015d 01       		.byte	0x1
 1283 015e F2       		.byte	0xf2
 1284 015f 6B000000 		.4byte	0x6b
 1285 0163 13000000 		.4byte	.LLST1
 1286 0167 09       		.uleb128 0x9
 1287 0168 06000000 		.4byte	.LVL7
 1288 016c 56060000 		.4byte	0x656
 1289 0170 09       		.uleb128 0x9
 1290 0171 16000000 		.4byte	.LVL9
 1291 0175 77060000 		.4byte	0x677
 1292 0179 0A       		.uleb128 0xa
 1293 017a 30000000 		.4byte	.LVL10
 1294 017e 6C060000 		.4byte	0x66c
 1295 0182 0B       		.uleb128 0xb
 1296 0183 01       		.uleb128 0x1
 1297 0184 50       		.byte	0x50
 1298 0185 02       		.uleb128 0x2
 1299 0186 74       		.byte	0x74
 1300 0187 00       		.sleb128 0
 1301 0188 00       		.byte	0
 1302 0189 00       		.byte	0
 1303 018a 0C       		.uleb128 0xc
 1304 018b A1010000 		.4byte	.LASF44
 1305 018f 01       		.byte	0x1
 1306 0190 2701     		.2byte	0x127
 1307 0192 6B000000 		.4byte	0x6b
 1308 0196 00000000 		.4byte	.LFB4
 1309 019a 04000000 		.4byte	.LFE4-.LFB4
 1310 019e 01       		.uleb128 0x1
 1311 019f 9C       		.byte	0x9c
 1312 01a0 0D       		.uleb128 0xd
 1313 01a1 4E000000 		.4byte	.LASF22
 1314 01a5 01       		.byte	0x1
 1315 01a6 3F01     		.2byte	0x13f
 1316 01a8 00000000 		.4byte	.LFB5
 1317 01ac 02000000 		.4byte	.LFE5-.LFB5
 1318 01b0 01       		.uleb128 0x1
 1319 01b1 9C       		.byte	0x9c
 1320 01b2 C5010000 		.4byte	0x1c5
 1321 01b6 0E       		.uleb128 0xe
 1322 01b7 6C010000 		.4byte	.LASF24
 1323 01bb 01       		.byte	0x1
 1324 01bc 3F01     		.2byte	0x13f
 1325 01be 6B000000 		.4byte	0x6b
 1326 01c2 01       		.uleb128 0x1
 1327 01c3 50       		.byte	0x50
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 53


 1328 01c4 00       		.byte	0
 1329 01c5 0D       		.uleb128 0xd
 1330 01c6 4C020000 		.4byte	.LASF23
 1331 01ca 01       		.byte	0x1
 1332 01cb 6701     		.2byte	0x167
 1333 01cd 00000000 		.4byte	.LFB6
 1334 01d1 0C000000 		.4byte	.LFE6-.LFB6
 1335 01d5 01       		.uleb128 0x1
 1336 01d6 9C       		.byte	0x9c
 1337 01d7 EA010000 		.4byte	0x1ea
 1338 01db 0E       		.uleb128 0xe
 1339 01dc A2020000 		.4byte	.LASF25
 1340 01e0 01       		.byte	0x1
 1341 01e1 6701     		.2byte	0x167
 1342 01e3 6B000000 		.4byte	0x6b
 1343 01e7 01       		.uleb128 0x1
 1344 01e8 50       		.byte	0x50
 1345 01e9 00       		.byte	0
 1346 01ea 0F       		.uleb128 0xf
 1347 01eb 8D010000 		.4byte	.LASF27
 1348 01ef 01       		.byte	0x1
 1349 01f0 8801     		.2byte	0x188
 1350 01f2 6B000000 		.4byte	0x6b
 1351 01f6 00000000 		.4byte	.LFB7
 1352 01fa 0C000000 		.4byte	.LFE7-.LFB7
 1353 01fe 01       		.uleb128 0x1
 1354 01ff 9C       		.byte	0x9c
 1355 0200 13020000 		.4byte	0x213
 1356 0204 10       		.uleb128 0x10
 1357 0205 1C040000 		.4byte	.LASF26
 1358 0209 01       		.byte	0x1
 1359 020a 8A01     		.2byte	0x18a
 1360 020c 6B000000 		.4byte	0x6b
 1361 0210 01       		.uleb128 0x1
 1362 0211 50       		.byte	0x50
 1363 0212 00       		.byte	0
 1364 0213 0F       		.uleb128 0xf
 1365 0214 B0000000 		.4byte	.LASF28
 1366 0218 01       		.byte	0x1
 1367 0219 E501     		.2byte	0x1e5
 1368 021b 6B000000 		.4byte	0x6b
 1369 021f 00000000 		.4byte	.LFB8
 1370 0223 10000000 		.4byte	.LFE8-.LFB8
 1371 0227 01       		.uleb128 0x1
 1372 0228 9C       		.byte	0x9c
 1373 0229 3E020000 		.4byte	0x23e
 1374 022d 11       		.uleb128 0x11
 1375 022e 74040000 		.4byte	.LASF29
 1376 0232 01       		.byte	0x1
 1377 0233 E701     		.2byte	0x1e7
 1378 0235 6B000000 		.4byte	0x6b
 1379 0239 26000000 		.4byte	.LLST2
 1380 023d 00       		.byte	0
 1381 023e 0F       		.uleb128 0xf
 1382 023f D7020000 		.4byte	.LASF30
 1383 0243 01       		.byte	0x1
 1384 0244 1402     		.2byte	0x214
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 54


 1385 0246 6B000000 		.4byte	0x6b
 1386 024a 00000000 		.4byte	.LFB9
 1387 024e 2C000000 		.4byte	.LFE9-.LFB9
 1388 0252 01       		.uleb128 0x1
 1389 0253 9C       		.byte	0x9c
 1390 0254 77020000 		.4byte	0x277
 1391 0258 11       		.uleb128 0x11
 1392 0259 1C040000 		.4byte	.LASF26
 1393 025d 01       		.byte	0x1
 1394 025e 1602     		.2byte	0x216
 1395 0260 6B000000 		.4byte	0x6b
 1396 0264 3E000000 		.4byte	.LLST3
 1397 0268 10       		.uleb128 0x10
 1398 0269 CE020000 		.4byte	.LASF31
 1399 026d 01       		.byte	0x1
 1400 026e 1702     		.2byte	0x217
 1401 0270 6B000000 		.4byte	0x6b
 1402 0274 01       		.uleb128 0x1
 1403 0275 53       		.byte	0x53
 1404 0276 00       		.byte	0
 1405 0277 0F       		.uleb128 0xf
 1406 0278 88000000 		.4byte	.LASF32
 1407 027c 01       		.byte	0x1
 1408 027d 7A02     		.2byte	0x27a
 1409 027f 77000000 		.4byte	0x77
 1410 0283 00000000 		.4byte	.LFB10
 1411 0287 12000000 		.4byte	.LFE10-.LFB10
 1412 028b 01       		.uleb128 0x1
 1413 028c 9C       		.byte	0x9c
 1414 028d A4020000 		.4byte	0x2a4
 1415 0291 09       		.uleb128 0x9
 1416 0292 06000000 		.4byte	.LVL23
 1417 0296 13020000 		.4byte	0x213
 1418 029a 09       		.uleb128 0x9
 1419 029b 0C000000 		.4byte	.LVL24
 1420 029f EA010000 		.4byte	0x1ea
 1421 02a3 00       		.byte	0
 1422 02a4 0F       		.uleb128 0xf
 1423 02a5 74010000 		.4byte	.LASF33
 1424 02a9 01       		.byte	0x1
 1425 02aa AB02     		.2byte	0x2ab
 1426 02ac 6B000000 		.4byte	0x6b
 1427 02b0 00000000 		.4byte	.LFB11
 1428 02b4 18000000 		.4byte	.LFE11-.LFB11
 1429 02b8 01       		.uleb128 0x1
 1430 02b9 9C       		.byte	0x9c
 1431 02ba CD020000 		.4byte	0x2cd
 1432 02be 10       		.uleb128 0x10
 1433 02bf 18020000 		.4byte	.LASF34
 1434 02c3 01       		.byte	0x1
 1435 02c4 AE02     		.2byte	0x2ae
 1436 02c6 6B000000 		.4byte	0x6b
 1437 02ca 01       		.uleb128 0x1
 1438 02cb 50       		.byte	0x50
 1439 02cc 00       		.byte	0
 1440 02cd 0D       		.uleb128 0xd
 1441 02ce 47010000 		.4byte	.LASF35
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 55


 1442 02d2 01       		.byte	0x1
 1443 02d3 F502     		.2byte	0x2f5
 1444 02d5 00000000 		.4byte	.LFB12
 1445 02d9 24000000 		.4byte	.LFE12-.LFB12
 1446 02dd 01       		.uleb128 0x1
 1447 02de 9C       		.byte	0x9c
 1448 02df 06030000 		.4byte	0x306
 1449 02e3 11       		.uleb128 0x11
 1450 02e4 63040000 		.4byte	.LASF21
 1451 02e8 01       		.byte	0x1
 1452 02e9 F702     		.2byte	0x2f7
 1453 02eb 6B000000 		.4byte	0x6b
 1454 02ef 74000000 		.4byte	.LLST4
 1455 02f3 09       		.uleb128 0x9
 1456 02f4 06000000 		.4byte	.LVL26
 1457 02f8 56060000 		.4byte	0x656
 1458 02fc 09       		.uleb128 0x9
 1459 02fd 1C000000 		.4byte	.LVL27
 1460 0301 6C060000 		.4byte	0x66c
 1461 0305 00       		.byte	0
 1462 0306 0D       		.uleb128 0xd
 1463 0307 14010000 		.4byte	.LASF36
 1464 030b 01       		.byte	0x1
 1465 030c 2D03     		.2byte	0x32d
 1466 030e 00000000 		.4byte	.LFB13
 1467 0312 02000000 		.4byte	.LFE13-.LFB13
 1468 0316 01       		.uleb128 0x1
 1469 0317 9C       		.byte	0x9c
 1470 0318 2B030000 		.4byte	0x32b
 1471 031c 0E       		.uleb128 0xe
 1472 031d 3B010000 		.4byte	.LASF37
 1473 0321 01       		.byte	0x1
 1474 0322 2D03     		.2byte	0x32d
 1475 0324 6B000000 		.4byte	0x6b
 1476 0328 01       		.uleb128 0x1
 1477 0329 50       		.byte	0x50
 1478 032a 00       		.byte	0
 1479 032b 0D       		.uleb128 0xd
 1480 032c BA040000 		.4byte	.LASF38
 1481 0330 01       		.byte	0x1
 1482 0331 5903     		.2byte	0x359
 1483 0333 00000000 		.4byte	.LFB14
 1484 0337 0C000000 		.4byte	.LFE14-.LFB14
 1485 033b 01       		.uleb128 0x1
 1486 033c 9C       		.byte	0x9c
 1487 033d 50030000 		.4byte	0x350
 1488 0341 0E       		.uleb128 0xe
 1489 0342 C6020000 		.4byte	.LASF39
 1490 0346 01       		.byte	0x1
 1491 0347 5903     		.2byte	0x359
 1492 0349 6B000000 		.4byte	0x6b
 1493 034d 01       		.uleb128 0x1
 1494 034e 50       		.byte	0x50
 1495 034f 00       		.byte	0
 1496 0350 0D       		.uleb128 0xd
 1497 0351 D1040000 		.4byte	.LASF40
 1498 0355 01       		.byte	0x1
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 56


 1499 0356 6D03     		.2byte	0x36d
 1500 0358 00000000 		.4byte	.LFB15
 1501 035c 0C000000 		.4byte	.LFE15-.LFB15
 1502 0360 01       		.uleb128 0x1
 1503 0361 9C       		.byte	0x9c
 1504 0362 75030000 		.4byte	0x375
 1505 0366 0E       		.uleb128 0xe
 1506 0367 C6020000 		.4byte	.LASF39
 1507 036b 01       		.byte	0x1
 1508 036c 6D03     		.2byte	0x36d
 1509 036e 6B000000 		.4byte	0x6b
 1510 0372 01       		.uleb128 0x1
 1511 0373 50       		.byte	0x50
 1512 0374 00       		.byte	0
 1513 0375 0D       		.uleb128 0xd
 1514 0376 30020000 		.4byte	.LASF41
 1515 037a 01       		.byte	0x1
 1516 037b 8C03     		.2byte	0x38c
 1517 037d 00000000 		.4byte	.LFB16
 1518 0381 0C000000 		.4byte	.LFE16-.LFB16
 1519 0385 01       		.uleb128 0x1
 1520 0386 9C       		.byte	0x9c
 1521 0387 9A030000 		.4byte	0x39a
 1522 038b 0E       		.uleb128 0xe
 1523 038c A2020000 		.4byte	.LASF25
 1524 0390 01       		.byte	0x1
 1525 0391 8C03     		.2byte	0x38c
 1526 0393 6B000000 		.4byte	0x6b
 1527 0397 01       		.uleb128 0x1
 1528 0398 50       		.byte	0x50
 1529 0399 00       		.byte	0
 1530 039a 0D       		.uleb128 0xd
 1531 039b 73000000 		.4byte	.LASF42
 1532 039f 01       		.byte	0x1
 1533 03a0 AE03     		.2byte	0x3ae
 1534 03a2 00000000 		.4byte	.LFB17
 1535 03a6 14000000 		.4byte	.LFE17-.LFB17
 1536 03aa 01       		.uleb128 0x1
 1537 03ab 9C       		.byte	0x9c
 1538 03ac BF030000 		.4byte	0x3bf
 1539 03b0 0E       		.uleb128 0xe
 1540 03b1 2D000000 		.4byte	.LASF43
 1541 03b5 01       		.byte	0x1
 1542 03b6 AE03     		.2byte	0x3ae
 1543 03b8 6B000000 		.4byte	0x6b
 1544 03bc 01       		.uleb128 0x1
 1545 03bd 50       		.byte	0x50
 1546 03be 00       		.byte	0
 1547 03bf 0C       		.uleb128 0xc
 1548 03c0 38000000 		.4byte	.LASF45
 1549 03c4 01       		.byte	0x1
 1550 03c5 EB03     		.2byte	0x3eb
 1551 03c7 6B000000 		.4byte	0x6b
 1552 03cb 00000000 		.4byte	.LFB18
 1553 03cf 0C000000 		.4byte	.LFE18-.LFB18
 1554 03d3 01       		.uleb128 0x1
 1555 03d4 9C       		.byte	0x9c
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 57


 1556 03d5 0D       		.uleb128 0xd
 1557 03d6 E8040000 		.4byte	.LASF46
 1558 03da 01       		.byte	0x1
 1559 03db 1104     		.2byte	0x411
 1560 03dd 00000000 		.4byte	.LFB19
 1561 03e1 18000000 		.4byte	.LFE19-.LFB19
 1562 03e5 01       		.uleb128 0x1
 1563 03e6 9C       		.byte	0x9c
 1564 03e7 FA030000 		.4byte	0x3fa
 1565 03eb 0E       		.uleb128 0xe
 1566 03ec 2D000000 		.4byte	.LASF43
 1567 03f0 01       		.byte	0x1
 1568 03f1 1104     		.2byte	0x411
 1569 03f3 6B000000 		.4byte	0x6b
 1570 03f7 01       		.uleb128 0x1
 1571 03f8 50       		.byte	0x50
 1572 03f9 00       		.byte	0
 1573 03fa 0D       		.uleb128 0xd
 1574 03fb 00030000 		.4byte	.LASF47
 1575 03ff 01       		.byte	0x1
 1576 0400 7904     		.2byte	0x479
 1577 0402 00000000 		.4byte	.LFB20
 1578 0406 24000000 		.4byte	.LFE20-.LFB20
 1579 040a 01       		.uleb128 0x1
 1580 040b 9C       		.byte	0x9c
 1581 040c 3A040000 		.4byte	0x43a
 1582 0410 12       		.uleb128 0x12
 1583 0411 6C000000 		.4byte	.LASF48
 1584 0415 01       		.byte	0x1
 1585 0416 7904     		.2byte	0x479
 1586 0418 3A040000 		.4byte	0x43a
 1587 041c 87000000 		.4byte	.LLST5
 1588 0420 11       		.uleb128 0x11
 1589 0421 E5010000 		.4byte	.LASF49
 1590 0425 01       		.byte	0x1
 1591 0426 7B04     		.2byte	0x47b
 1592 0428 77000000 		.4byte	0x77
 1593 042c C9000000 		.4byte	.LLST6
 1594 0430 09       		.uleb128 0x9
 1595 0431 0E000000 		.4byte	.LVL37
 1596 0435 D5030000 		.4byte	0x3d5
 1597 0439 00       		.byte	0
 1598 043a 13       		.uleb128 0x13
 1599 043b 04       		.byte	0x4
 1600 043c 40040000 		.4byte	0x440
 1601 0440 14       		.uleb128 0x14
 1602 0441 91000000 		.4byte	0x91
 1603 0445 0D       		.uleb128 0xd
 1604 0446 00000000 		.4byte	.LASF50
 1605 044a 01       		.byte	0x1
 1606 044b A504     		.2byte	0x4a5
 1607 044d 00000000 		.4byte	.LFB21
 1608 0451 60000000 		.4byte	.LFE21-.LFB21
 1609 0455 01       		.uleb128 0x1
 1610 0456 9C       		.byte	0x9c
 1611 0457 AC040000 		.4byte	0x4ac
 1612 045b 15       		.uleb128 0x15
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 58


 1613 045c 6E756D00 		.ascii	"num\000"
 1614 0460 01       		.byte	0x1
 1615 0461 A504     		.2byte	0x4a5
 1616 0463 5D000000 		.4byte	0x5d
 1617 0467 0A010000 		.4byte	.LLST7
 1618 046b 16       		.uleb128 0x16
 1619 046c 6D736700 		.ascii	"msg\000"
 1620 0470 01       		.byte	0x1
 1621 0471 A604     		.2byte	0x4a6
 1622 0473 AC040000 		.4byte	0x4ac
 1623 0477 02       		.uleb128 0x2
 1624 0478 91       		.byte	0x91
 1625 0479 64       		.sleb128 -28
 1626 047a 17       		.uleb128 0x17
 1627 047b 6900     		.ascii	"i\000"
 1628 047d 01       		.byte	0x1
 1629 047e A704     		.2byte	0x4a7
 1630 0480 5D000000 		.4byte	0x5d
 1631 0484 2B010000 		.4byte	.LLST8
 1632 0488 17       		.uleb128 0x17
 1633 0489 6E00     		.ascii	"n\000"
 1634 048b 01       		.byte	0x1
 1635 048c A804     		.2byte	0x4a8
 1636 048e 64000000 		.4byte	0x64
 1637 0492 78010000 		.4byte	.LLST9
 1638 0496 0A       		.uleb128 0xa
 1639 0497 58000000 		.4byte	.LVL56
 1640 049b FA030000 		.4byte	0x3fa
 1641 049f 0B       		.uleb128 0xb
 1642 04a0 01       		.uleb128 0x1
 1643 04a1 50       		.byte	0x50
 1644 04a2 07       		.uleb128 0x7
 1645 04a3 91       		.byte	0x91
 1646 04a4 00       		.sleb128 0
 1647 04a5 76       		.byte	0x76
 1648 04a6 00       		.sleb128 0
 1649 04a7 22       		.byte	0x22
 1650 04a8 4B       		.byte	0x4b
 1651 04a9 1C       		.byte	0x1c
 1652 04aa 00       		.byte	0
 1653 04ab 00       		.byte	0
 1654 04ac 18       		.uleb128 0x18
 1655 04ad 9D000000 		.4byte	0x9d
 1656 04b1 BC040000 		.4byte	0x4bc
 1657 04b5 19       		.uleb128 0x19
 1658 04b6 BC000000 		.4byte	0xbc
 1659 04ba 0B       		.byte	0xb
 1660 04bb 00       		.byte	0
 1661 04bc 0D       		.uleb128 0xd
 1662 04bd EE020000 		.4byte	.LASF51
 1663 04c1 01       		.byte	0x1
 1664 04c2 DB04     		.2byte	0x4db
 1665 04c4 00000000 		.4byte	.LFB22
 1666 04c8 28000000 		.4byte	.LFE22-.LFB22
 1667 04cc 01       		.uleb128 0x1
 1668 04cd 9C       		.byte	0x9c
 1669 04ce 0C050000 		.4byte	0x50c
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 59


 1670 04d2 12       		.uleb128 0x12
 1671 04d3 6C000000 		.4byte	.LASF48
 1672 04d7 01       		.byte	0x1
 1673 04d8 DB04     		.2byte	0x4db
 1674 04da 0C050000 		.4byte	0x50c
 1675 04de AC010000 		.4byte	.LLST10
 1676 04e2 12       		.uleb128 0x12
 1677 04e3 F9030000 		.4byte	.LASF52
 1678 04e7 01       		.byte	0x1
 1679 04e8 DB04     		.2byte	0x4db
 1680 04ea 6B000000 		.4byte	0x6b
 1681 04ee EE010000 		.4byte	.LLST11
 1682 04f2 11       		.uleb128 0x11
 1683 04f3 E5010000 		.4byte	.LASF49
 1684 04f7 01       		.byte	0x1
 1685 04f8 DE04     		.2byte	0x4de
 1686 04fa 6B000000 		.4byte	0x6b
 1687 04fe 28020000 		.4byte	.LLST12
 1688 0502 09       		.uleb128 0x9
 1689 0503 0E000000 		.4byte	.LVL60
 1690 0507 D5030000 		.4byte	0x3d5
 1691 050b 00       		.byte	0
 1692 050c 13       		.uleb128 0x13
 1693 050d 04       		.byte	0x4
 1694 050e 12050000 		.4byte	0x512
 1695 0512 14       		.uleb128 0x14
 1696 0513 6B000000 		.4byte	0x6b
 1697 0517 0D       		.uleb128 0xd
 1698 0518 92040000 		.4byte	.LASF53
 1699 051c 01       		.byte	0x1
 1700 051d 0205     		.2byte	0x502
 1701 051f 00000000 		.4byte	.LFB23
 1702 0523 20000000 		.4byte	.LFE23-.LFB23
 1703 0527 01       		.uleb128 0x1
 1704 0528 9C       		.byte	0x9c
 1705 0529 69050000 		.4byte	0x569
 1706 052d 12       		.uleb128 0x12
 1707 052e 2D000000 		.4byte	.LASF43
 1708 0532 01       		.byte	0x1
 1709 0533 0205     		.2byte	0x502
 1710 0535 6B000000 		.4byte	0x6b
 1711 0539 69020000 		.4byte	.LLST13
 1712 053d 09       		.uleb128 0x9
 1713 053e 0C000000 		.4byte	.LVL67
 1714 0542 D5030000 		.4byte	0x3d5
 1715 0546 1A       		.uleb128 0x1a
 1716 0547 12000000 		.4byte	.LVL68
 1717 054b D5030000 		.4byte	0x3d5
 1718 054f 59050000 		.4byte	0x559
 1719 0553 0B       		.uleb128 0xb
 1720 0554 01       		.uleb128 0x1
 1721 0555 50       		.byte	0x50
 1722 0556 01       		.uleb128 0x1
 1723 0557 3D       		.byte	0x3d
 1724 0558 00       		.byte	0
 1725 0559 0A       		.uleb128 0xa
 1726 055a 18000000 		.4byte	.LVL69
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 60


 1727 055e D5030000 		.4byte	0x3d5
 1728 0562 0B       		.uleb128 0xb
 1729 0563 01       		.uleb128 0x1
 1730 0564 50       		.byte	0x50
 1731 0565 01       		.uleb128 0x1
 1732 0566 3A       		.byte	0x3a
 1733 0567 00       		.byte	0
 1734 0568 00       		.byte	0
 1735 0569 0F       		.uleb128 0xf
 1736 056a 03040000 		.4byte	.LASF54
 1737 056e 01       		.byte	0x1
 1738 056f 2D05     		.2byte	0x52d
 1739 0571 6B000000 		.4byte	0x6b
 1740 0575 00000000 		.4byte	.LFB24
 1741 0579 24000000 		.4byte	.LFE24-.LFB24
 1742 057d 01       		.uleb128 0x1
 1743 057e 9C       		.byte	0x9c
 1744 057f 94050000 		.4byte	0x594
 1745 0583 11       		.uleb128 0x11
 1746 0584 18020000 		.4byte	.LASF34
 1747 0588 01       		.byte	0x1
 1748 0589 3005     		.2byte	0x530
 1749 058b 6B000000 		.4byte	0x6b
 1750 058f 8A020000 		.4byte	.LLST14
 1751 0593 00       		.byte	0
 1752 0594 0D       		.uleb128 0xd
 1753 0595 A3040000 		.4byte	.LASF55
 1754 0599 01       		.byte	0x1
 1755 059a 7E05     		.2byte	0x57e
 1756 059c 00000000 		.4byte	.LFB25
 1757 05a0 24000000 		.4byte	.LFE25-.LFB25
 1758 05a4 01       		.uleb128 0x1
 1759 05a5 9C       		.byte	0x9c
 1760 05a6 CD050000 		.4byte	0x5cd
 1761 05aa 11       		.uleb128 0x11
 1762 05ab 63040000 		.4byte	.LASF21
 1763 05af 01       		.byte	0x1
 1764 05b0 8005     		.2byte	0x580
 1765 05b2 6B000000 		.4byte	0x6b
 1766 05b6 A8020000 		.4byte	.LLST15
 1767 05ba 09       		.uleb128 0x9
 1768 05bb 06000000 		.4byte	.LVL72
 1769 05bf 56060000 		.4byte	0x656
 1770 05c3 09       		.uleb128 0x9
 1771 05c4 1C000000 		.4byte	.LVL73
 1772 05c8 6C060000 		.4byte	0x66c
 1773 05cc 00       		.byte	0
 1774 05cd 0D       		.uleb128 0xd
 1775 05ce 05020000 		.4byte	.LASF56
 1776 05d2 01       		.byte	0x1
 1777 05d3 D405     		.2byte	0x5d4
 1778 05d5 00000000 		.4byte	.LFB26
 1779 05d9 5C000000 		.4byte	.LFE26-.LFB26
 1780 05dd 01       		.uleb128 0x1
 1781 05de 9C       		.byte	0x9c
 1782 05df 20060000 		.4byte	0x620
 1783 05e3 12       		.uleb128 0x12
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 61


 1784 05e4 BE010000 		.4byte	.LASF57
 1785 05e8 01       		.byte	0x1
 1786 05e9 D405     		.2byte	0x5d4
 1787 05eb 6B000000 		.4byte	0x6b
 1788 05ef BB020000 		.4byte	.LLST16
 1789 05f3 1B       		.uleb128 0x1b
 1790 05f4 06000000 		.4byte	.LBB2
 1791 05f8 56000000 		.4byte	.LBE2-.LBB2
 1792 05fc 11       		.uleb128 0x11
 1793 05fd A9020000 		.4byte	.LASF58
 1794 0601 01       		.byte	0x1
 1795 0602 DC05     		.2byte	0x5dc
 1796 0604 6B000000 		.4byte	0x6b
 1797 0608 DC020000 		.4byte	.LLST17
 1798 060c 10       		.uleb128 0x10
 1799 060d E0000000 		.4byte	.LASF59
 1800 0611 01       		.byte	0x1
 1801 0612 0406     		.2byte	0x604
 1802 0614 6B000000 		.4byte	0x6b
 1803 0618 05       		.uleb128 0x5
 1804 0619 03       		.byte	0x3
 1805 061a 01000000 		.4byte	txPeriod.5132
 1806 061e 00       		.byte	0
 1807 061f 00       		.byte	0
 1808 0620 0D       		.uleb128 0xd
 1809 0621 51030000 		.4byte	.LASF60
 1810 0625 01       		.byte	0x1
 1811 0626 5806     		.2byte	0x658
 1812 0628 00000000 		.4byte	.LFB27
 1813 062c 02000000 		.4byte	.LFE27-.LFB27
 1814 0630 01       		.uleb128 0x1
 1815 0631 9C       		.byte	0x9c
 1816 0632 45060000 		.4byte	0x645
 1817 0636 0E       		.uleb128 0xe
 1818 0637 3B010000 		.4byte	.LASF37
 1819 063b 01       		.byte	0x1
 1820 063c 5806     		.2byte	0x658
 1821 063e 6B000000 		.4byte	0x6b
 1822 0642 01       		.uleb128 0x1
 1823 0643 50       		.byte	0x50
 1824 0644 00       		.byte	0
 1825 0645 1C       		.uleb128 0x1c
 1826 0646 13030000 		.4byte	.LASF69
 1827 064a 01       		.byte	0x1
 1828 064b 1B       		.byte	0x1b
 1829 064c 6B000000 		.4byte	0x6b
 1830 0650 05       		.uleb128 0x5
 1831 0651 03       		.byte	0x3
 1832 0652 00000000 		.4byte	UART_USB_initVar
 1833 0656 1D       		.uleb128 0x1d
 1834 0657 EE010000 		.4byte	.LASF61
 1835 065b EE010000 		.4byte	.LASF61
 1836 065f 03       		.byte	0x3
 1837 0660 7D       		.byte	0x7d
 1838 0661 1D       		.uleb128 0x1d
 1839 0662 28040000 		.4byte	.LASF62
 1840 0666 28040000 		.4byte	.LASF62
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 62


 1841 066a 04       		.byte	0x4
 1842 066b 27       		.byte	0x27
 1843 066c 1D       		.uleb128 0x1d
 1844 066d 17000000 		.4byte	.LASF63
 1845 0671 17000000 		.4byte	.LASF63
 1846 0675 03       		.byte	0x3
 1847 0676 7E       		.byte	0x7e
 1848 0677 1D       		.uleb128 0x1d
 1849 0678 7B040000 		.4byte	.LASF64
 1850 067c 7B040000 		.4byte	.LASF64
 1851 0680 04       		.byte	0x4
 1852 0681 28       		.byte	0x28
 1853 0682 00       		.byte	0
 1854              		.section	.debug_abbrev,"",%progbits
 1855              	.Ldebug_abbrev0:
 1856 0000 01       		.uleb128 0x1
 1857 0001 11       		.uleb128 0x11
 1858 0002 01       		.byte	0x1
 1859 0003 25       		.uleb128 0x25
 1860 0004 0E       		.uleb128 0xe
 1861 0005 13       		.uleb128 0x13
 1862 0006 0B       		.uleb128 0xb
 1863 0007 03       		.uleb128 0x3
 1864 0008 0E       		.uleb128 0xe
 1865 0009 1B       		.uleb128 0x1b
 1866 000a 0E       		.uleb128 0xe
 1867 000b 55       		.uleb128 0x55
 1868 000c 17       		.uleb128 0x17
 1869 000d 11       		.uleb128 0x11
 1870 000e 01       		.uleb128 0x1
 1871 000f 10       		.uleb128 0x10
 1872 0010 17       		.uleb128 0x17
 1873 0011 00       		.byte	0
 1874 0012 00       		.byte	0
 1875 0013 02       		.uleb128 0x2
 1876 0014 24       		.uleb128 0x24
 1877 0015 00       		.byte	0
 1878 0016 0B       		.uleb128 0xb
 1879 0017 0B       		.uleb128 0xb
 1880 0018 3E       		.uleb128 0x3e
 1881 0019 0B       		.uleb128 0xb
 1882 001a 03       		.uleb128 0x3
 1883 001b 0E       		.uleb128 0xe
 1884 001c 00       		.byte	0
 1885 001d 00       		.byte	0
 1886 001e 03       		.uleb128 0x3
 1887 001f 24       		.uleb128 0x24
 1888 0020 00       		.byte	0
 1889 0021 0B       		.uleb128 0xb
 1890 0022 0B       		.uleb128 0xb
 1891 0023 3E       		.uleb128 0x3e
 1892 0024 0B       		.uleb128 0xb
 1893 0025 03       		.uleb128 0x3
 1894 0026 08       		.uleb128 0x8
 1895 0027 00       		.byte	0
 1896 0028 00       		.byte	0
 1897 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 63


 1898 002a 16       		.uleb128 0x16
 1899 002b 00       		.byte	0
 1900 002c 03       		.uleb128 0x3
 1901 002d 0E       		.uleb128 0xe
 1902 002e 3A       		.uleb128 0x3a
 1903 002f 0B       		.uleb128 0xb
 1904 0030 3B       		.uleb128 0x3b
 1905 0031 05       		.uleb128 0x5
 1906 0032 49       		.uleb128 0x49
 1907 0033 13       		.uleb128 0x13
 1908 0034 00       		.byte	0
 1909 0035 00       		.byte	0
 1910 0036 05       		.uleb128 0x5
 1911 0037 35       		.uleb128 0x35
 1912 0038 00       		.byte	0
 1913 0039 49       		.uleb128 0x49
 1914 003a 13       		.uleb128 0x13
 1915 003b 00       		.byte	0
 1916 003c 00       		.byte	0
 1917 003d 06       		.uleb128 0x6
 1918 003e 2E       		.uleb128 0x2e
 1919 003f 00       		.byte	0
 1920 0040 3F       		.uleb128 0x3f
 1921 0041 19       		.uleb128 0x19
 1922 0042 03       		.uleb128 0x3
 1923 0043 0E       		.uleb128 0xe
 1924 0044 3A       		.uleb128 0x3a
 1925 0045 0B       		.uleb128 0xb
 1926 0046 3B       		.uleb128 0x3b
 1927 0047 0B       		.uleb128 0xb
 1928 0048 27       		.uleb128 0x27
 1929 0049 19       		.uleb128 0x19
 1930 004a 11       		.uleb128 0x11
 1931 004b 01       		.uleb128 0x1
 1932 004c 12       		.uleb128 0x12
 1933 004d 06       		.uleb128 0x6
 1934 004e 40       		.uleb128 0x40
 1935 004f 18       		.uleb128 0x18
 1936 0050 9742     		.uleb128 0x2117
 1937 0052 19       		.uleb128 0x19
 1938 0053 00       		.byte	0
 1939 0054 00       		.byte	0
 1940 0055 07       		.uleb128 0x7
 1941 0056 2E       		.uleb128 0x2e
 1942 0057 01       		.byte	0x1
 1943 0058 3F       		.uleb128 0x3f
 1944 0059 19       		.uleb128 0x19
 1945 005a 03       		.uleb128 0x3
 1946 005b 0E       		.uleb128 0xe
 1947 005c 3A       		.uleb128 0x3a
 1948 005d 0B       		.uleb128 0xb
 1949 005e 3B       		.uleb128 0x3b
 1950 005f 0B       		.uleb128 0xb
 1951 0060 27       		.uleb128 0x27
 1952 0061 19       		.uleb128 0x19
 1953 0062 11       		.uleb128 0x11
 1954 0063 01       		.uleb128 0x1
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 64


 1955 0064 12       		.uleb128 0x12
 1956 0065 06       		.uleb128 0x6
 1957 0066 40       		.uleb128 0x40
 1958 0067 18       		.uleb128 0x18
 1959 0068 9742     		.uleb128 0x2117
 1960 006a 19       		.uleb128 0x19
 1961 006b 01       		.uleb128 0x1
 1962 006c 13       		.uleb128 0x13
 1963 006d 00       		.byte	0
 1964 006e 00       		.byte	0
 1965 006f 08       		.uleb128 0x8
 1966 0070 34       		.uleb128 0x34
 1967 0071 00       		.byte	0
 1968 0072 03       		.uleb128 0x3
 1969 0073 0E       		.uleb128 0xe
 1970 0074 3A       		.uleb128 0x3a
 1971 0075 0B       		.uleb128 0xb
 1972 0076 3B       		.uleb128 0x3b
 1973 0077 0B       		.uleb128 0xb
 1974 0078 49       		.uleb128 0x49
 1975 0079 13       		.uleb128 0x13
 1976 007a 02       		.uleb128 0x2
 1977 007b 17       		.uleb128 0x17
 1978 007c 00       		.byte	0
 1979 007d 00       		.byte	0
 1980 007e 09       		.uleb128 0x9
 1981 007f 898201   		.uleb128 0x4109
 1982 0082 00       		.byte	0
 1983 0083 11       		.uleb128 0x11
 1984 0084 01       		.uleb128 0x1
 1985 0085 31       		.uleb128 0x31
 1986 0086 13       		.uleb128 0x13
 1987 0087 00       		.byte	0
 1988 0088 00       		.byte	0
 1989 0089 0A       		.uleb128 0xa
 1990 008a 898201   		.uleb128 0x4109
 1991 008d 01       		.byte	0x1
 1992 008e 11       		.uleb128 0x11
 1993 008f 01       		.uleb128 0x1
 1994 0090 31       		.uleb128 0x31
 1995 0091 13       		.uleb128 0x13
 1996 0092 00       		.byte	0
 1997 0093 00       		.byte	0
 1998 0094 0B       		.uleb128 0xb
 1999 0095 8A8201   		.uleb128 0x410a
 2000 0098 00       		.byte	0
 2001 0099 02       		.uleb128 0x2
 2002 009a 18       		.uleb128 0x18
 2003 009b 9142     		.uleb128 0x2111
 2004 009d 18       		.uleb128 0x18
 2005 009e 00       		.byte	0
 2006 009f 00       		.byte	0
 2007 00a0 0C       		.uleb128 0xc
 2008 00a1 2E       		.uleb128 0x2e
 2009 00a2 00       		.byte	0
 2010 00a3 3F       		.uleb128 0x3f
 2011 00a4 19       		.uleb128 0x19
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 65


 2012 00a5 03       		.uleb128 0x3
 2013 00a6 0E       		.uleb128 0xe
 2014 00a7 3A       		.uleb128 0x3a
 2015 00a8 0B       		.uleb128 0xb
 2016 00a9 3B       		.uleb128 0x3b
 2017 00aa 05       		.uleb128 0x5
 2018 00ab 27       		.uleb128 0x27
 2019 00ac 19       		.uleb128 0x19
 2020 00ad 49       		.uleb128 0x49
 2021 00ae 13       		.uleb128 0x13
 2022 00af 11       		.uleb128 0x11
 2023 00b0 01       		.uleb128 0x1
 2024 00b1 12       		.uleb128 0x12
 2025 00b2 06       		.uleb128 0x6
 2026 00b3 40       		.uleb128 0x40
 2027 00b4 18       		.uleb128 0x18
 2028 00b5 9742     		.uleb128 0x2117
 2029 00b7 19       		.uleb128 0x19
 2030 00b8 00       		.byte	0
 2031 00b9 00       		.byte	0
 2032 00ba 0D       		.uleb128 0xd
 2033 00bb 2E       		.uleb128 0x2e
 2034 00bc 01       		.byte	0x1
 2035 00bd 3F       		.uleb128 0x3f
 2036 00be 19       		.uleb128 0x19
 2037 00bf 03       		.uleb128 0x3
 2038 00c0 0E       		.uleb128 0xe
 2039 00c1 3A       		.uleb128 0x3a
 2040 00c2 0B       		.uleb128 0xb
 2041 00c3 3B       		.uleb128 0x3b
 2042 00c4 05       		.uleb128 0x5
 2043 00c5 27       		.uleb128 0x27
 2044 00c6 19       		.uleb128 0x19
 2045 00c7 11       		.uleb128 0x11
 2046 00c8 01       		.uleb128 0x1
 2047 00c9 12       		.uleb128 0x12
 2048 00ca 06       		.uleb128 0x6
 2049 00cb 40       		.uleb128 0x40
 2050 00cc 18       		.uleb128 0x18
 2051 00cd 9742     		.uleb128 0x2117
 2052 00cf 19       		.uleb128 0x19
 2053 00d0 01       		.uleb128 0x1
 2054 00d1 13       		.uleb128 0x13
 2055 00d2 00       		.byte	0
 2056 00d3 00       		.byte	0
 2057 00d4 0E       		.uleb128 0xe
 2058 00d5 05       		.uleb128 0x5
 2059 00d6 00       		.byte	0
 2060 00d7 03       		.uleb128 0x3
 2061 00d8 0E       		.uleb128 0xe
 2062 00d9 3A       		.uleb128 0x3a
 2063 00da 0B       		.uleb128 0xb
 2064 00db 3B       		.uleb128 0x3b
 2065 00dc 05       		.uleb128 0x5
 2066 00dd 49       		.uleb128 0x49
 2067 00de 13       		.uleb128 0x13
 2068 00df 02       		.uleb128 0x2
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 66


 2069 00e0 18       		.uleb128 0x18
 2070 00e1 00       		.byte	0
 2071 00e2 00       		.byte	0
 2072 00e3 0F       		.uleb128 0xf
 2073 00e4 2E       		.uleb128 0x2e
 2074 00e5 01       		.byte	0x1
 2075 00e6 3F       		.uleb128 0x3f
 2076 00e7 19       		.uleb128 0x19
 2077 00e8 03       		.uleb128 0x3
 2078 00e9 0E       		.uleb128 0xe
 2079 00ea 3A       		.uleb128 0x3a
 2080 00eb 0B       		.uleb128 0xb
 2081 00ec 3B       		.uleb128 0x3b
 2082 00ed 05       		.uleb128 0x5
 2083 00ee 27       		.uleb128 0x27
 2084 00ef 19       		.uleb128 0x19
 2085 00f0 49       		.uleb128 0x49
 2086 00f1 13       		.uleb128 0x13
 2087 00f2 11       		.uleb128 0x11
 2088 00f3 01       		.uleb128 0x1
 2089 00f4 12       		.uleb128 0x12
 2090 00f5 06       		.uleb128 0x6
 2091 00f6 40       		.uleb128 0x40
 2092 00f7 18       		.uleb128 0x18
 2093 00f8 9742     		.uleb128 0x2117
 2094 00fa 19       		.uleb128 0x19
 2095 00fb 01       		.uleb128 0x1
 2096 00fc 13       		.uleb128 0x13
 2097 00fd 00       		.byte	0
 2098 00fe 00       		.byte	0
 2099 00ff 10       		.uleb128 0x10
 2100 0100 34       		.uleb128 0x34
 2101 0101 00       		.byte	0
 2102 0102 03       		.uleb128 0x3
 2103 0103 0E       		.uleb128 0xe
 2104 0104 3A       		.uleb128 0x3a
 2105 0105 0B       		.uleb128 0xb
 2106 0106 3B       		.uleb128 0x3b
 2107 0107 05       		.uleb128 0x5
 2108 0108 49       		.uleb128 0x49
 2109 0109 13       		.uleb128 0x13
 2110 010a 02       		.uleb128 0x2
 2111 010b 18       		.uleb128 0x18
 2112 010c 00       		.byte	0
 2113 010d 00       		.byte	0
 2114 010e 11       		.uleb128 0x11
 2115 010f 34       		.uleb128 0x34
 2116 0110 00       		.byte	0
 2117 0111 03       		.uleb128 0x3
 2118 0112 0E       		.uleb128 0xe
 2119 0113 3A       		.uleb128 0x3a
 2120 0114 0B       		.uleb128 0xb
 2121 0115 3B       		.uleb128 0x3b
 2122 0116 05       		.uleb128 0x5
 2123 0117 49       		.uleb128 0x49
 2124 0118 13       		.uleb128 0x13
 2125 0119 02       		.uleb128 0x2
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 67


 2126 011a 17       		.uleb128 0x17
 2127 011b 00       		.byte	0
 2128 011c 00       		.byte	0
 2129 011d 12       		.uleb128 0x12
 2130 011e 05       		.uleb128 0x5
 2131 011f 00       		.byte	0
 2132 0120 03       		.uleb128 0x3
 2133 0121 0E       		.uleb128 0xe
 2134 0122 3A       		.uleb128 0x3a
 2135 0123 0B       		.uleb128 0xb
 2136 0124 3B       		.uleb128 0x3b
 2137 0125 05       		.uleb128 0x5
 2138 0126 49       		.uleb128 0x49
 2139 0127 13       		.uleb128 0x13
 2140 0128 02       		.uleb128 0x2
 2141 0129 17       		.uleb128 0x17
 2142 012a 00       		.byte	0
 2143 012b 00       		.byte	0
 2144 012c 13       		.uleb128 0x13
 2145 012d 0F       		.uleb128 0xf
 2146 012e 00       		.byte	0
 2147 012f 0B       		.uleb128 0xb
 2148 0130 0B       		.uleb128 0xb
 2149 0131 49       		.uleb128 0x49
 2150 0132 13       		.uleb128 0x13
 2151 0133 00       		.byte	0
 2152 0134 00       		.byte	0
 2153 0135 14       		.uleb128 0x14
 2154 0136 26       		.uleb128 0x26
 2155 0137 00       		.byte	0
 2156 0138 49       		.uleb128 0x49
 2157 0139 13       		.uleb128 0x13
 2158 013a 00       		.byte	0
 2159 013b 00       		.byte	0
 2160 013c 15       		.uleb128 0x15
 2161 013d 05       		.uleb128 0x5
 2162 013e 00       		.byte	0
 2163 013f 03       		.uleb128 0x3
 2164 0140 08       		.uleb128 0x8
 2165 0141 3A       		.uleb128 0x3a
 2166 0142 0B       		.uleb128 0xb
 2167 0143 3B       		.uleb128 0x3b
 2168 0144 05       		.uleb128 0x5
 2169 0145 49       		.uleb128 0x49
 2170 0146 13       		.uleb128 0x13
 2171 0147 02       		.uleb128 0x2
 2172 0148 17       		.uleb128 0x17
 2173 0149 00       		.byte	0
 2174 014a 00       		.byte	0
 2175 014b 16       		.uleb128 0x16
 2176 014c 34       		.uleb128 0x34
 2177 014d 00       		.byte	0
 2178 014e 03       		.uleb128 0x3
 2179 014f 08       		.uleb128 0x8
 2180 0150 3A       		.uleb128 0x3a
 2181 0151 0B       		.uleb128 0xb
 2182 0152 3B       		.uleb128 0x3b
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 68


 2183 0153 05       		.uleb128 0x5
 2184 0154 49       		.uleb128 0x49
 2185 0155 13       		.uleb128 0x13
 2186 0156 02       		.uleb128 0x2
 2187 0157 18       		.uleb128 0x18
 2188 0158 00       		.byte	0
 2189 0159 00       		.byte	0
 2190 015a 17       		.uleb128 0x17
 2191 015b 34       		.uleb128 0x34
 2192 015c 00       		.byte	0
 2193 015d 03       		.uleb128 0x3
 2194 015e 08       		.uleb128 0x8
 2195 015f 3A       		.uleb128 0x3a
 2196 0160 0B       		.uleb128 0xb
 2197 0161 3B       		.uleb128 0x3b
 2198 0162 05       		.uleb128 0x5
 2199 0163 49       		.uleb128 0x49
 2200 0164 13       		.uleb128 0x13
 2201 0165 02       		.uleb128 0x2
 2202 0166 17       		.uleb128 0x17
 2203 0167 00       		.byte	0
 2204 0168 00       		.byte	0
 2205 0169 18       		.uleb128 0x18
 2206 016a 01       		.uleb128 0x1
 2207 016b 01       		.byte	0x1
 2208 016c 49       		.uleb128 0x49
 2209 016d 13       		.uleb128 0x13
 2210 016e 01       		.uleb128 0x1
 2211 016f 13       		.uleb128 0x13
 2212 0170 00       		.byte	0
 2213 0171 00       		.byte	0
 2214 0172 19       		.uleb128 0x19
 2215 0173 21       		.uleb128 0x21
 2216 0174 00       		.byte	0
 2217 0175 49       		.uleb128 0x49
 2218 0176 13       		.uleb128 0x13
 2219 0177 2F       		.uleb128 0x2f
 2220 0178 0B       		.uleb128 0xb
 2221 0179 00       		.byte	0
 2222 017a 00       		.byte	0
 2223 017b 1A       		.uleb128 0x1a
 2224 017c 898201   		.uleb128 0x4109
 2225 017f 01       		.byte	0x1
 2226 0180 11       		.uleb128 0x11
 2227 0181 01       		.uleb128 0x1
 2228 0182 31       		.uleb128 0x31
 2229 0183 13       		.uleb128 0x13
 2230 0184 01       		.uleb128 0x1
 2231 0185 13       		.uleb128 0x13
 2232 0186 00       		.byte	0
 2233 0187 00       		.byte	0
 2234 0188 1B       		.uleb128 0x1b
 2235 0189 0B       		.uleb128 0xb
 2236 018a 01       		.byte	0x1
 2237 018b 11       		.uleb128 0x11
 2238 018c 01       		.uleb128 0x1
 2239 018d 12       		.uleb128 0x12
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 69


 2240 018e 06       		.uleb128 0x6
 2241 018f 00       		.byte	0
 2242 0190 00       		.byte	0
 2243 0191 1C       		.uleb128 0x1c
 2244 0192 34       		.uleb128 0x34
 2245 0193 00       		.byte	0
 2246 0194 03       		.uleb128 0x3
 2247 0195 0E       		.uleb128 0xe
 2248 0196 3A       		.uleb128 0x3a
 2249 0197 0B       		.uleb128 0xb
 2250 0198 3B       		.uleb128 0x3b
 2251 0199 0B       		.uleb128 0xb
 2252 019a 49       		.uleb128 0x49
 2253 019b 13       		.uleb128 0x13
 2254 019c 3F       		.uleb128 0x3f
 2255 019d 19       		.uleb128 0x19
 2256 019e 02       		.uleb128 0x2
 2257 019f 18       		.uleb128 0x18
 2258 01a0 00       		.byte	0
 2259 01a1 00       		.byte	0
 2260 01a2 1D       		.uleb128 0x1d
 2261 01a3 2E       		.uleb128 0x2e
 2262 01a4 00       		.byte	0
 2263 01a5 3F       		.uleb128 0x3f
 2264 01a6 19       		.uleb128 0x19
 2265 01a7 3C       		.uleb128 0x3c
 2266 01a8 19       		.uleb128 0x19
 2267 01a9 6E       		.uleb128 0x6e
 2268 01aa 0E       		.uleb128 0xe
 2269 01ab 03       		.uleb128 0x3
 2270 01ac 0E       		.uleb128 0xe
 2271 01ad 3A       		.uleb128 0x3a
 2272 01ae 0B       		.uleb128 0xb
 2273 01af 3B       		.uleb128 0x3b
 2274 01b0 0B       		.uleb128 0xb
 2275 01b1 00       		.byte	0
 2276 01b2 00       		.byte	0
 2277 01b3 00       		.byte	0
 2278              		.section	.debug_loc,"",%progbits
 2279              	.Ldebug_loc0:
 2280              	.LLST0:
 2281 0000 08000000 		.4byte	.LVL1
 2282 0004 32000000 		.4byte	.LVL4
 2283 0008 0100     		.2byte	0x1
 2284 000a 54       		.byte	0x54
 2285 000b 00000000 		.4byte	0
 2286 000f 00000000 		.4byte	0
 2287              	.LLST1:
 2288 0013 08000000 		.4byte	.LVL8
 2289 0017 32000000 		.4byte	.LVL11
 2290 001b 0100     		.2byte	0x1
 2291 001d 54       		.byte	0x54
 2292 001e 00000000 		.4byte	0
 2293 0022 00000000 		.4byte	0
 2294              	.LLST2:
 2295 0026 04000000 		.4byte	.LVL15
 2296 002a 08000000 		.4byte	.LVL16
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 70


 2297 002e 0600     		.2byte	0x6
 2298 0030 70       		.byte	0x70
 2299 0031 00       		.sleb128 0
 2300 0032 08       		.byte	0x8
 2301 0033 7F       		.byte	0x7f
 2302 0034 1A       		.byte	0x1a
 2303 0035 9F       		.byte	0x9f
 2304 0036 00000000 		.4byte	0
 2305 003a 00000000 		.4byte	0
 2306              	.LLST3:
 2307 003e 00000000 		.4byte	.LVL17
 2308 0042 12000000 		.4byte	.LVL19
 2309 0046 0200     		.2byte	0x2
 2310 0048 30       		.byte	0x30
 2311 0049 9F       		.byte	0x9f
 2312 004a 12000000 		.4byte	.LVL19
 2313 004e 1A000000 		.4byte	.LVL20
 2314 0052 0100     		.2byte	0x1
 2315 0054 50       		.byte	0x50
 2316 0055 1A000000 		.4byte	.LVL20
 2317 0059 1E000000 		.4byte	.LVL21
 2318 005d 0200     		.2byte	0x2
 2319 005f 30       		.byte	0x30
 2320 0060 9F       		.byte	0x9f
 2321 0061 1E000000 		.4byte	.LVL21
 2322 0065 2C000000 		.4byte	.LFE9
 2323 0069 0100     		.2byte	0x1
 2324 006b 50       		.byte	0x50
 2325 006c 00000000 		.4byte	0
 2326 0070 00000000 		.4byte	0
 2327              	.LLST4:
 2328 0074 06000000 		.4byte	.LVL26
 2329 0078 1B000000 		.4byte	.LVL27-1
 2330 007c 0100     		.2byte	0x1
 2331 007e 50       		.byte	0x50
 2332 007f 00000000 		.4byte	0
 2333 0083 00000000 		.4byte	0
 2334              	.LLST5:
 2335 0087 00000000 		.4byte	.LVL34
 2336 008b 0A000000 		.4byte	.LVL36
 2337 008f 0100     		.2byte	0x1
 2338 0091 50       		.byte	0x50
 2339 0092 0A000000 		.4byte	.LVL36
 2340 0096 14000000 		.4byte	.LVL40
 2341 009a 0100     		.2byte	0x1
 2342 009c 55       		.byte	0x55
 2343 009d 14000000 		.4byte	.LVL40
 2344 00a1 18000000 		.4byte	.LVL41
 2345 00a5 0100     		.2byte	0x1
 2346 00a7 50       		.byte	0x50
 2347 00a8 18000000 		.4byte	.LVL41
 2348 00ac 20000000 		.4byte	.LVL42
 2349 00b0 0100     		.2byte	0x1
 2350 00b2 55       		.byte	0x55
 2351 00b3 20000000 		.4byte	.LVL42
 2352 00b7 24000000 		.4byte	.LFE20
 2353 00bb 0400     		.2byte	0x4
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 71


 2354 00bd F3       		.byte	0xf3
 2355 00be 01       		.uleb128 0x1
 2356 00bf 50       		.byte	0x50
 2357 00c0 9F       		.byte	0x9f
 2358 00c1 00000000 		.4byte	0
 2359 00c5 00000000 		.4byte	0
 2360              	.LLST6:
 2361 00c9 02000000 		.4byte	.LVL35
 2362 00cd 0A000000 		.4byte	.LVL36
 2363 00d1 0200     		.2byte	0x2
 2364 00d3 30       		.byte	0x30
 2365 00d4 9F       		.byte	0x9f
 2366 00d5 0A000000 		.4byte	.LVL36
 2367 00d9 10000000 		.4byte	.LVL38
 2368 00dd 0100     		.2byte	0x1
 2369 00df 54       		.byte	0x54
 2370 00e0 12000000 		.4byte	.LVL39
 2371 00e4 14000000 		.4byte	.LVL40
 2372 00e8 0100     		.2byte	0x1
 2373 00ea 54       		.byte	0x54
 2374 00eb 14000000 		.4byte	.LVL40
 2375 00ef 18000000 		.4byte	.LVL41
 2376 00f3 0200     		.2byte	0x2
 2377 00f5 30       		.byte	0x30
 2378 00f6 9F       		.byte	0x9f
 2379 00f7 18000000 		.4byte	.LVL41
 2380 00fb 20000000 		.4byte	.LVL42
 2381 00ff 0100     		.2byte	0x1
 2382 0101 54       		.byte	0x54
 2383 0102 00000000 		.4byte	0
 2384 0106 00000000 		.4byte	0
 2385              	.LLST7:
 2386 010a 00000000 		.4byte	.LVL43
 2387 010e 50000000 		.4byte	.LVL55
 2388 0112 0100     		.2byte	0x1
 2389 0114 50       		.byte	0x50
 2390 0115 50000000 		.4byte	.LVL55
 2391 0119 60000000 		.4byte	.LFE21
 2392 011d 0400     		.2byte	0x4
 2393 011f F3       		.byte	0xf3
 2394 0120 01       		.uleb128 0x1
 2395 0121 50       		.byte	0x50
 2396 0122 9F       		.byte	0x9f
 2397 0123 00000000 		.4byte	0
 2398 0127 00000000 		.4byte	0
 2399              	.LLST8:
 2400 012b 04000000 		.4byte	.LVL44
 2401 012f 18000000 		.4byte	.LVL48
 2402 0133 0200     		.2byte	0x2
 2403 0135 3A       		.byte	0x3a
 2404 0136 9F       		.byte	0x9f
 2405 0137 18000000 		.4byte	.LVL48
 2406 013b 1A000000 		.4byte	.LVL49
 2407 013f 0100     		.2byte	0x1
 2408 0141 56       		.byte	0x56
 2409 0142 1A000000 		.4byte	.LVL49
 2410 0146 1C000000 		.4byte	.LVL50
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 72


 2411 014a 0100     		.2byte	0x1
 2412 014c 51       		.byte	0x51
 2413 014d 1C000000 		.4byte	.LVL50
 2414 0151 42000000 		.4byte	.LVL53
 2415 0155 0100     		.2byte	0x1
 2416 0157 56       		.byte	0x56
 2417 0158 42000000 		.4byte	.LVL53
 2418 015c 4E000000 		.4byte	.LVL54
 2419 0160 0300     		.2byte	0x3
 2420 0162 71       		.byte	0x71
 2421 0163 7E       		.sleb128 -2
 2422 0164 9F       		.byte	0x9f
 2423 0165 4E000000 		.4byte	.LVL54
 2424 0169 5C000000 		.4byte	.LVL57
 2425 016d 0100     		.2byte	0x1
 2426 016f 56       		.byte	0x56
 2427 0170 00000000 		.4byte	0
 2428 0174 00000000 		.4byte	0
 2429              	.LLST9:
 2430 0178 10000000 		.4byte	.LVL45
 2431 017c 12000000 		.4byte	.LVL46
 2432 0180 0100     		.2byte	0x1
 2433 0182 52       		.byte	0x52
 2434 0183 14000000 		.4byte	.LVL47
 2435 0187 32000000 		.4byte	.LVL51
 2436 018b 0100     		.2byte	0x1
 2437 018d 52       		.byte	0x52
 2438 018e 3A000000 		.4byte	.LVL52
 2439 0192 57000000 		.4byte	.LVL56-1
 2440 0196 0100     		.2byte	0x1
 2441 0198 52       		.byte	0x52
 2442 0199 57000000 		.4byte	.LVL56-1
 2443 019d 5C000000 		.4byte	.LVL57
 2444 01a1 0100     		.2byte	0x1
 2445 01a3 54       		.byte	0x54
 2446 01a4 00000000 		.4byte	0
 2447 01a8 00000000 		.4byte	0
 2448              	.LLST10:
 2449 01ac 00000000 		.4byte	.LVL58
 2450 01b0 08000000 		.4byte	.LVL59
 2451 01b4 0100     		.2byte	0x1
 2452 01b6 50       		.byte	0x50
 2453 01b7 08000000 		.4byte	.LVL59
 2454 01bb 14000000 		.4byte	.LVL63
 2455 01bf 0100     		.2byte	0x1
 2456 01c1 56       		.byte	0x56
 2457 01c2 14000000 		.4byte	.LVL63
 2458 01c6 1C000000 		.4byte	.LVL64
 2459 01ca 0100     		.2byte	0x1
 2460 01cc 50       		.byte	0x50
 2461 01cd 1C000000 		.4byte	.LVL64
 2462 01d1 22000000 		.4byte	.LVL65
 2463 01d5 0100     		.2byte	0x1
 2464 01d7 56       		.byte	0x56
 2465 01d8 22000000 		.4byte	.LVL65
 2466 01dc 28000000 		.4byte	.LFE22
 2467 01e0 0400     		.2byte	0x4
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 73


 2468 01e2 F3       		.byte	0xf3
 2469 01e3 01       		.uleb128 0x1
 2470 01e4 50       		.byte	0x50
 2471 01e5 9F       		.byte	0x9f
 2472 01e6 00000000 		.4byte	0
 2473 01ea 00000000 		.4byte	0
 2474              	.LLST11:
 2475 01ee 00000000 		.4byte	.LVL58
 2476 01f2 08000000 		.4byte	.LVL59
 2477 01f6 0100     		.2byte	0x1
 2478 01f8 51       		.byte	0x51
 2479 01f9 08000000 		.4byte	.LVL59
 2480 01fd 14000000 		.4byte	.LVL63
 2481 0201 0400     		.2byte	0x4
 2482 0203 F3       		.byte	0xf3
 2483 0204 01       		.uleb128 0x1
 2484 0205 51       		.byte	0x51
 2485 0206 9F       		.byte	0x9f
 2486 0207 14000000 		.4byte	.LVL63
 2487 020b 1C000000 		.4byte	.LVL64
 2488 020f 0100     		.2byte	0x1
 2489 0211 51       		.byte	0x51
 2490 0212 1C000000 		.4byte	.LVL64
 2491 0216 28000000 		.4byte	.LFE22
 2492 021a 0400     		.2byte	0x4
 2493 021c F3       		.byte	0xf3
 2494 021d 01       		.uleb128 0x1
 2495 021e 51       		.byte	0x51
 2496 021f 9F       		.byte	0x9f
 2497 0220 00000000 		.4byte	0
 2498 0224 00000000 		.4byte	0
 2499              	.LLST12:
 2500 0228 00000000 		.4byte	.LVL58
 2501 022c 08000000 		.4byte	.LVL59
 2502 0230 0200     		.2byte	0x2
 2503 0232 30       		.byte	0x30
 2504 0233 9F       		.byte	0x9f
 2505 0234 08000000 		.4byte	.LVL59
 2506 0238 10000000 		.4byte	.LVL61
 2507 023c 0100     		.2byte	0x1
 2508 023e 54       		.byte	0x54
 2509 023f 12000000 		.4byte	.LVL62
 2510 0243 14000000 		.4byte	.LVL63
 2511 0247 0100     		.2byte	0x1
 2512 0249 54       		.byte	0x54
 2513 024a 14000000 		.4byte	.LVL63
 2514 024e 1C000000 		.4byte	.LVL64
 2515 0252 0200     		.2byte	0x2
 2516 0254 30       		.byte	0x30
 2517 0255 9F       		.byte	0x9f
 2518 0256 1C000000 		.4byte	.LVL64
 2519 025a 22000000 		.4byte	.LVL65
 2520 025e 0100     		.2byte	0x1
 2521 0260 54       		.byte	0x54
 2522 0261 00000000 		.4byte	0
 2523 0265 00000000 		.4byte	0
 2524              	.LLST13:
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 74


 2525 0269 00000000 		.4byte	.LVL66
 2526 026d 0B000000 		.4byte	.LVL67-1
 2527 0271 0100     		.2byte	0x1
 2528 0273 50       		.byte	0x50
 2529 0274 0B000000 		.4byte	.LVL67-1
 2530 0278 20000000 		.4byte	.LFE23
 2531 027c 0400     		.2byte	0x4
 2532 027e F3       		.byte	0xf3
 2533 027f 01       		.uleb128 0x1
 2534 0280 50       		.byte	0x50
 2535 0281 9F       		.byte	0x9f
 2536 0282 00000000 		.4byte	0
 2537 0286 00000000 		.4byte	0
 2538              	.LLST14:
 2539 028a 06000000 		.4byte	.LVL70
 2540 028e 1C000000 		.4byte	.LVL71
 2541 0292 0100     		.2byte	0x1
 2542 0294 53       		.byte	0x53
 2543 0295 1C000000 		.4byte	.LVL71
 2544 0299 24000000 		.4byte	.LFE24
 2545 029d 0100     		.2byte	0x1
 2546 029f 50       		.byte	0x50
 2547 02a0 00000000 		.4byte	0
 2548 02a4 00000000 		.4byte	0
 2549              	.LLST15:
 2550 02a8 06000000 		.4byte	.LVL72
 2551 02ac 1B000000 		.4byte	.LVL73-1
 2552 02b0 0100     		.2byte	0x1
 2553 02b2 50       		.byte	0x50
 2554 02b3 00000000 		.4byte	0
 2555 02b7 00000000 		.4byte	0
 2556              	.LLST16:
 2557 02bb 00000000 		.4byte	.LVL74
 2558 02bf 3E000000 		.4byte	.LVL79
 2559 02c3 0100     		.2byte	0x1
 2560 02c5 50       		.byte	0x50
 2561 02c6 3E000000 		.4byte	.LVL79
 2562 02ca 5C000000 		.4byte	.LFE26
 2563 02ce 0400     		.2byte	0x4
 2564 02d0 F3       		.byte	0xf3
 2565 02d1 01       		.uleb128 0x1
 2566 02d2 50       		.byte	0x50
 2567 02d3 9F       		.byte	0x9f
 2568 02d4 00000000 		.4byte	0
 2569 02d8 00000000 		.4byte	0
 2570              	.LLST17:
 2571 02dc 24000000 		.4byte	.LVL75
 2572 02e0 2A000000 		.4byte	.LVL76
 2573 02e4 0100     		.2byte	0x1
 2574 02e6 53       		.byte	0x53
 2575 02e7 36000000 		.4byte	.LVL77
 2576 02eb 3C000000 		.4byte	.LVL78
 2577 02ef 0100     		.2byte	0x1
 2578 02f1 53       		.byte	0x53
 2579 02f2 00000000 		.4byte	0
 2580 02f6 00000000 		.4byte	0
 2581              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 75


 2582 0000 F4000000 		.4byte	0xf4
 2583 0004 0200     		.2byte	0x2
 2584 0006 00000000 		.4byte	.Ldebug_info0
 2585 000a 04       		.byte	0x4
 2586 000b 00       		.byte	0
 2587 000c 0000     		.2byte	0
 2588 000e 0000     		.2byte	0
 2589 0010 00000000 		.4byte	.LFB1
 2590 0014 28000000 		.4byte	.LFE1-.LFB1
 2591 0018 00000000 		.4byte	.LFB2
 2592 001c 38000000 		.4byte	.LFE2-.LFB2
 2593 0020 00000000 		.4byte	.LFB0
 2594 0024 1C000000 		.4byte	.LFE0-.LFB0
 2595 0028 00000000 		.4byte	.LFB3
 2596 002c 3C000000 		.4byte	.LFE3-.LFB3
 2597 0030 00000000 		.4byte	.LFB4
 2598 0034 04000000 		.4byte	.LFE4-.LFB4
 2599 0038 00000000 		.4byte	.LFB5
 2600 003c 02000000 		.4byte	.LFE5-.LFB5
 2601 0040 00000000 		.4byte	.LFB6
 2602 0044 0C000000 		.4byte	.LFE6-.LFB6
 2603 0048 00000000 		.4byte	.LFB7
 2604 004c 0C000000 		.4byte	.LFE7-.LFB7
 2605 0050 00000000 		.4byte	.LFB8
 2606 0054 10000000 		.4byte	.LFE8-.LFB8
 2607 0058 00000000 		.4byte	.LFB9
 2608 005c 2C000000 		.4byte	.LFE9-.LFB9
 2609 0060 00000000 		.4byte	.LFB10
 2610 0064 12000000 		.4byte	.LFE10-.LFB10
 2611 0068 00000000 		.4byte	.LFB11
 2612 006c 18000000 		.4byte	.LFE11-.LFB11
 2613 0070 00000000 		.4byte	.LFB12
 2614 0074 24000000 		.4byte	.LFE12-.LFB12
 2615 0078 00000000 		.4byte	.LFB13
 2616 007c 02000000 		.4byte	.LFE13-.LFB13
 2617 0080 00000000 		.4byte	.LFB14
 2618 0084 0C000000 		.4byte	.LFE14-.LFB14
 2619 0088 00000000 		.4byte	.LFB15
 2620 008c 0C000000 		.4byte	.LFE15-.LFB15
 2621 0090 00000000 		.4byte	.LFB16
 2622 0094 0C000000 		.4byte	.LFE16-.LFB16
 2623 0098 00000000 		.4byte	.LFB17
 2624 009c 14000000 		.4byte	.LFE17-.LFB17
 2625 00a0 00000000 		.4byte	.LFB18
 2626 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2627 00a8 00000000 		.4byte	.LFB19
 2628 00ac 18000000 		.4byte	.LFE19-.LFB19
 2629 00b0 00000000 		.4byte	.LFB20
 2630 00b4 24000000 		.4byte	.LFE20-.LFB20
 2631 00b8 00000000 		.4byte	.LFB21
 2632 00bc 60000000 		.4byte	.LFE21-.LFB21
 2633 00c0 00000000 		.4byte	.LFB22
 2634 00c4 28000000 		.4byte	.LFE22-.LFB22
 2635 00c8 00000000 		.4byte	.LFB23
 2636 00cc 20000000 		.4byte	.LFE23-.LFB23
 2637 00d0 00000000 		.4byte	.LFB24
 2638 00d4 24000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 76


 2639 00d8 00000000 		.4byte	.LFB25
 2640 00dc 24000000 		.4byte	.LFE25-.LFB25
 2641 00e0 00000000 		.4byte	.LFB26
 2642 00e4 5C000000 		.4byte	.LFE26-.LFB26
 2643 00e8 00000000 		.4byte	.LFB27
 2644 00ec 02000000 		.4byte	.LFE27-.LFB27
 2645 00f0 00000000 		.4byte	0
 2646 00f4 00000000 		.4byte	0
 2647              		.section	.debug_ranges,"",%progbits
 2648              	.Ldebug_ranges0:
 2649 0000 00000000 		.4byte	.LFB1
 2650 0004 28000000 		.4byte	.LFE1
 2651 0008 00000000 		.4byte	.LFB2
 2652 000c 38000000 		.4byte	.LFE2
 2653 0010 00000000 		.4byte	.LFB0
 2654 0014 1C000000 		.4byte	.LFE0
 2655 0018 00000000 		.4byte	.LFB3
 2656 001c 3C000000 		.4byte	.LFE3
 2657 0020 00000000 		.4byte	.LFB4
 2658 0024 04000000 		.4byte	.LFE4
 2659 0028 00000000 		.4byte	.LFB5
 2660 002c 02000000 		.4byte	.LFE5
 2661 0030 00000000 		.4byte	.LFB6
 2662 0034 0C000000 		.4byte	.LFE6
 2663 0038 00000000 		.4byte	.LFB7
 2664 003c 0C000000 		.4byte	.LFE7
 2665 0040 00000000 		.4byte	.LFB8
 2666 0044 10000000 		.4byte	.LFE8
 2667 0048 00000000 		.4byte	.LFB9
 2668 004c 2C000000 		.4byte	.LFE9
 2669 0050 00000000 		.4byte	.LFB10
 2670 0054 12000000 		.4byte	.LFE10
 2671 0058 00000000 		.4byte	.LFB11
 2672 005c 18000000 		.4byte	.LFE11
 2673 0060 00000000 		.4byte	.LFB12
 2674 0064 24000000 		.4byte	.LFE12
 2675 0068 00000000 		.4byte	.LFB13
 2676 006c 02000000 		.4byte	.LFE13
 2677 0070 00000000 		.4byte	.LFB14
 2678 0074 0C000000 		.4byte	.LFE14
 2679 0078 00000000 		.4byte	.LFB15
 2680 007c 0C000000 		.4byte	.LFE15
 2681 0080 00000000 		.4byte	.LFB16
 2682 0084 0C000000 		.4byte	.LFE16
 2683 0088 00000000 		.4byte	.LFB17
 2684 008c 14000000 		.4byte	.LFE17
 2685 0090 00000000 		.4byte	.LFB18
 2686 0094 0C000000 		.4byte	.LFE18
 2687 0098 00000000 		.4byte	.LFB19
 2688 009c 18000000 		.4byte	.LFE19
 2689 00a0 00000000 		.4byte	.LFB20
 2690 00a4 24000000 		.4byte	.LFE20
 2691 00a8 00000000 		.4byte	.LFB21
 2692 00ac 60000000 		.4byte	.LFE21
 2693 00b0 00000000 		.4byte	.LFB22
 2694 00b4 28000000 		.4byte	.LFE22
 2695 00b8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 77


 2696 00bc 20000000 		.4byte	.LFE23
 2697 00c0 00000000 		.4byte	.LFB24
 2698 00c4 24000000 		.4byte	.LFE24
 2699 00c8 00000000 		.4byte	.LFB25
 2700 00cc 24000000 		.4byte	.LFE25
 2701 00d0 00000000 		.4byte	.LFB26
 2702 00d4 5C000000 		.4byte	.LFE26
 2703 00d8 00000000 		.4byte	.LFB27
 2704 00dc 02000000 		.4byte	.LFE27
 2705 00e0 00000000 		.4byte	0
 2706 00e4 00000000 		.4byte	0
 2707              		.section	.debug_line,"",%progbits
 2708              	.Ldebug_line0:
 2709 0000 F3020000 		.section	.debug_str,"MS",%progbits,1
 2709      02006700 
 2709      00000201 
 2709      FB0E0D00 
 2709      01010101 
 2710              	.LASF50:
 2711 0000 55415254 		.ascii	"UART_USB_PutInt\000"
 2711      5F555342 
 2711      5F507574 
 2711      496E7400 
 2712              	.LASF10:
 2713 0010 75696E74 		.ascii	"uint16\000"
 2713      313600
 2714              	.LASF63:
 2715 0017 43794578 		.ascii	"CyExitCriticalSection\000"
 2715      69744372 
 2715      69746963 
 2715      616C5365 
 2715      6374696F 
 2716              	.LASF43:
 2717 002d 74784461 		.ascii	"txDataByte\000"
 2717      74614279 
 2717      746500
 2718              	.LASF45:
 2719 0038 55415254 		.ascii	"UART_USB_ReadTxStatus\000"
 2719      5F555342 
 2719      5F526561 
 2719      64547853 
 2719      74617475 
 2720              	.LASF22:
 2721 004e 55415254 		.ascii	"UART_USB_WriteControlRegister\000"
 2721      5F555342 
 2721      5F577269 
 2721      7465436F 
 2721      6E74726F 
 2722              	.LASF48:
 2723 006c 73747269 		.ascii	"string\000"
 2723      6E6700
 2724              	.LASF42:
 2725 0073 55415254 		.ascii	"UART_USB_WriteTxData\000"
 2725      5F555342 
 2725      5F577269 
 2725      74655478 
 2725      44617461 
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 78


 2726              	.LASF32:
 2727 0088 55415254 		.ascii	"UART_USB_GetByte\000"
 2727      5F555342 
 2727      5F476574 
 2727      42797465 
 2727      00
 2728              	.LASF7:
 2729 0099 6C6F6E67 		.ascii	"long long unsigned int\000"
 2729      206C6F6E 
 2729      6720756E 
 2729      7369676E 
 2729      65642069 
 2730              	.LASF28:
 2731 00b0 55415254 		.ascii	"UART_USB_ReadRxStatus\000"
 2731      5F555342 
 2731      5F526561 
 2731      64527853 
 2731      74617475 
 2732              	.LASF6:
 2733 00c6 6C6F6E67 		.ascii	"long long int\000"
 2733      206C6F6E 
 2733      6720696E 
 2733      7400
 2734              	.LASF0:
 2735 00d4 7369676E 		.ascii	"signed char\000"
 2735      65642063 
 2735      68617200 
 2736              	.LASF59:
 2737 00e0 74785065 		.ascii	"txPeriod\000"
 2737      72696F64 
 2737      00
 2738              	.LASF66:
 2739 00e9 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_USB.c\000"
 2739      72617465 
 2739      645F536F 
 2739      75726365 
 2739      5C50536F 
 2740              	.LASF4:
 2741 010b 6C6F6E67 		.ascii	"long int\000"
 2741      20696E74 
 2741      00
 2742              	.LASF36:
 2743 0114 55415254 		.ascii	"UART_USB_SetRxAddressMode\000"
 2743      5F555342 
 2743      5F536574 
 2743      52784164 
 2743      64726573 
 2744              	.LASF9:
 2745 012e 75696E74 		.ascii	"uint8\000"
 2745      3800
 2746              	.LASF12:
 2747 0134 646F7562 		.ascii	"double\000"
 2747      6C6500
 2748              	.LASF37:
 2749 013b 61646472 		.ascii	"addressMode\000"
 2749      6573734D 
 2749      6F646500 
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 79


 2750              	.LASF35:
 2751 0147 55415254 		.ascii	"UART_USB_ClearRxBuffer\000"
 2751      5F555342 
 2751      5F436C65 
 2751      61725278 
 2751      42756666 
 2752              	.LASF68:
 2753 015e 55415254 		.ascii	"UART_USB_Init\000"
 2753      5F555342 
 2753      5F496E69 
 2753      7400
 2754              	.LASF24:
 2755 016c 636F6E74 		.ascii	"control\000"
 2755      726F6C00 
 2756              	.LASF33:
 2757 0174 55415254 		.ascii	"UART_USB_GetRxBufferSize\000"
 2757      5F555342 
 2757      5F476574 
 2757      52784275 
 2757      66666572 
 2758              	.LASF27:
 2759 018d 55415254 		.ascii	"UART_USB_ReadRxData\000"
 2759      5F555342 
 2759      5F526561 
 2759      64527844 
 2759      61746100 
 2760              	.LASF44:
 2761 01a1 55415254 		.ascii	"UART_USB_ReadControlRegister\000"
 2761      5F555342 
 2761      5F526561 
 2761      64436F6E 
 2761      74726F6C 
 2762              	.LASF57:
 2763 01be 7265744D 		.ascii	"retMode\000"
 2763      6F646500 
 2764              	.LASF8:
 2765 01c6 756E7369 		.ascii	"unsigned int\000"
 2765      676E6564 
 2765      20696E74 
 2765      00
 2766              	.LASF5:
 2767 01d3 6C6F6E67 		.ascii	"long unsigned int\000"
 2767      20756E73 
 2767      69676E65 
 2767      6420696E 
 2767      7400
 2768              	.LASF49:
 2769 01e5 62756649 		.ascii	"bufIndex\000"
 2769      6E646578 
 2769      00
 2770              	.LASF61:
 2771 01ee 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2771      74657243 
 2771      72697469 
 2771      63616C53 
 2771      65637469 
 2772              	.LASF56:
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 80


 2773 0205 55415254 		.ascii	"UART_USB_SendBreak\000"
 2773      5F555342 
 2773      5F53656E 
 2773      64427265 
 2773      616B00
 2774              	.LASF34:
 2775 0218 73697A65 		.ascii	"size\000"
 2775      00
 2776              	.LASF3:
 2777 021d 73686F72 		.ascii	"short unsigned int\000"
 2777      7420756E 
 2777      7369676E 
 2777      65642069 
 2777      6E7400
 2778              	.LASF41:
 2779 0230 55415254 		.ascii	"UART_USB_SetTxInterruptMode\000"
 2779      5F555342 
 2779      5F536574 
 2779      5478496E 
 2779      74657272 
 2780              	.LASF23:
 2781 024c 55415254 		.ascii	"UART_USB_SetRxInterruptMode\000"
 2781      5F555342 
 2781      5F536574 
 2781      5278496E 
 2781      74657272 
 2782              	.LASF67:
 2783 0268 433A5C55 		.ascii	"C:\\Users\\alexa\\Documents\\GitHub\\Projekt-3\\PSo"
 2783      73657273 
 2783      5C616C65 
 2783      78615C44 
 2783      6F63756D 
 2784 0295 435C5052 		.ascii	"C\\PRJ3.cydsn\000"
 2784      4A332E63 
 2784      7964736E 
 2784      00
 2785              	.LASF25:
 2786 02a2 696E7453 		.ascii	"intSrc\000"
 2786      726300
 2787              	.LASF58:
 2788 02a9 746D7053 		.ascii	"tmpStat\000"
 2788      74617400 
 2789              	.LASF17:
 2790 02b1 73697A65 		.ascii	"sizetype\000"
 2790      74797065 
 2790      00
 2791              	.LASF16:
 2792 02ba 6C6F6E67 		.ascii	"long double\000"
 2792      20646F75 
 2792      626C6500 
 2793              	.LASF39:
 2794 02c6 61646472 		.ascii	"address\000"
 2794      65737300 
 2795              	.LASF31:
 2796 02ce 72785374 		.ascii	"rxStatus\000"
 2796      61747573 
 2796      00
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 81


 2797              	.LASF30:
 2798 02d7 55415254 		.ascii	"UART_USB_GetChar\000"
 2798      5F555342 
 2798      5F476574 
 2798      43686172 
 2798      00
 2799              	.LASF11:
 2800 02e8 666C6F61 		.ascii	"float\000"
 2800      7400
 2801              	.LASF51:
 2802 02ee 55415254 		.ascii	"UART_USB_PutArray\000"
 2802      5F555342 
 2802      5F507574 
 2802      41727261 
 2802      7900
 2803              	.LASF47:
 2804 0300 55415254 		.ascii	"UART_USB_PutString\000"
 2804      5F555342 
 2804      5F507574 
 2804      53747269 
 2804      6E6700
 2805              	.LASF69:
 2806 0313 55415254 		.ascii	"UART_USB_initVar\000"
 2806      5F555342 
 2806      5F696E69 
 2806      74566172 
 2806      00
 2807              	.LASF15:
 2808 0324 72656738 		.ascii	"reg8\000"
 2808      00
 2809              	.LASF18:
 2810 0329 55415254 		.ascii	"UART_USB_Enable\000"
 2810      5F555342 
 2810      5F456E61 
 2810      626C6500 
 2811              	.LASF1:
 2812 0339 756E7369 		.ascii	"unsigned char\000"
 2812      676E6564 
 2812      20636861 
 2812      7200
 2813              	.LASF2:
 2814 0347 73686F72 		.ascii	"short int\000"
 2814      7420696E 
 2814      7400
 2815              	.LASF60:
 2816 0351 55415254 		.ascii	"UART_USB_SetTxAddressMode\000"
 2816      5F555342 
 2816      5F536574 
 2816      54784164 
 2816      64726573 
 2817              	.LASF65:
 2818 036b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2818      43313120 
 2818      352E342E 
 2818      31203230 
 2818      31363036 
 2819 039e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 82


 2819      20726576 
 2819      6973696F 
 2819      6E203233 
 2819      37373135 
 2820 03d1 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2820      66756E63 
 2820      74696F6E 
 2820      2D736563 
 2820      74696F6E 
 2821              	.LASF52:
 2822 03f9 62797465 		.ascii	"byteCount\000"
 2822      436F756E 
 2822      7400
 2823              	.LASF54:
 2824 0403 55415254 		.ascii	"UART_USB_GetTxBufferSize\000"
 2824      5F555342 
 2824      5F476574 
 2824      54784275 
 2824      66666572 
 2825              	.LASF26:
 2826 041c 72784461 		.ascii	"rxData\000"
 2826      746100
 2827              	.LASF14:
 2828 0423 63686172 		.ascii	"char\000"
 2828      00
 2829              	.LASF62:
 2830 0428 55415254 		.ascii	"UART_USB_IntClock_Start\000"
 2830      5F555342 
 2830      5F496E74 
 2830      436C6F63 
 2830      6B5F5374 
 2831              	.LASF13:
 2832 0440 63686172 		.ascii	"char8\000"
 2832      3800
 2833              	.LASF19:
 2834 0446 55415254 		.ascii	"UART_USB_Start\000"
 2834      5F555342 
 2834      5F537461 
 2834      727400
 2835              	.LASF20:
 2836 0455 55415254 		.ascii	"UART_USB_Stop\000"
 2836      5F555342 
 2836      5F53746F 
 2836      7000
 2837              	.LASF21:
 2838 0463 656E6162 		.ascii	"enableInterrupts\000"
 2838      6C65496E 
 2838      74657272 
 2838      75707473 
 2838      00
 2839              	.LASF29:
 2840 0474 73746174 		.ascii	"status\000"
 2840      757300
 2841              	.LASF64:
 2842 047b 55415254 		.ascii	"UART_USB_IntClock_Stop\000"
 2842      5F555342 
 2842      5F496E74 
ARM GAS  C:\Users\alexa\AppData\Local\Temp\ccjuj97N.s 			page 83


 2842      436C6F63 
 2842      6B5F5374 
 2843              	.LASF53:
 2844 0492 55415254 		.ascii	"UART_USB_PutCRLF\000"
 2844      5F555342 
 2844      5F507574 
 2844      43524C46 
 2844      00
 2845              	.LASF55:
 2846 04a3 55415254 		.ascii	"UART_USB_ClearTxBuffer\000"
 2846      5F555342 
 2846      5F436C65 
 2846      61725478 
 2846      42756666 
 2847              	.LASF38:
 2848 04ba 55415254 		.ascii	"UART_USB_SetRxAddress1\000"
 2848      5F555342 
 2848      5F536574 
 2848      52784164 
 2848      64726573 
 2849              	.LASF40:
 2850 04d1 55415254 		.ascii	"UART_USB_SetRxAddress2\000"
 2850      5F555342 
 2850      5F536574 
 2850      52784164 
 2850      64726573 
 2851              	.LASF46:
 2852 04e8 55415254 		.ascii	"UART_USB_PutChar\000"
 2852      5F555342 
 2852      5F507574 
 2852      43686172 
 2852      00
 2853              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
